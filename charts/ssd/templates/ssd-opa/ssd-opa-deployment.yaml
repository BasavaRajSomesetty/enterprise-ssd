apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssd-opa
  labels:
    app: ssd
    component: ssd-opa
{{ include "ssd.standard-labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ssd
      component: ssd-opa
  template:
    metadata:
      labels:
        app: ssd
        component: ssd-opa
{{ include "ssd.standard-labels" . | indent 8 }}
      annotations:
{{- if .Values.ssdopa.annotations -}}
        {{ toYaml .Values.ssdopa.annotations | nindent 8 }}
{{- end }}
    spec:
      containers:
        - name: ssd-opa
          image: {{ template "ssdopa.image" . }}
          ports:
            - containerPort: 8200
              protocol: TCP
          envFrom:
          - configMapRef:
              name: ssd-proxy-certs
              optional: true
          volumeMounts:
            - mountPath: /app/ssd-public-keys
              name: ssd-public-keys
            - mountPath: /app/secrets/
              name: ssdsecret
              readOnly: true
            - mountPath: /app/scanFiles
              name: scanfilepath
            - name: ssd-opa-volume
              mountPath: /app/config/ssd-opa.yaml
              subPath: ssd-opa.yaml
            - mountPath: /usr/local/share/ca-certificates
              name: custom-certs
            - mountPath: /app/secrets/ssd-opa-token/
              name: token
              readOnly: true
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /health
              port: 8200
              scheme: HTTP
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          securityContext:
      {{- if .Values.ssdopa.securityContext }}
      {{ toYaml .Values.ssdopa.securityContext | nindent 12 }}
      {{- else }}
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            seccompProfile:
              type: RuntimeDefault
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: ssd-public-keys
          name: ssd-public-keys
        - name: ssdsecret
          secret:
            defaultMode: 420
            items:
            - key: AESEncryptionKey
              path: ssdsecret/AESEncryptionKey
            secretName: ssdsecret
        - emptyDir: {}
          name: scanfilepath
        - name: token
          secret:
            defaultMode: 420
            secretName: ssd-opa-token
        - name: ssd-opa-volume
          secret:
            secretName: ssd-opa
            items:
              - key: ssd-opa.yaml
                path: ssd-opa.yaml
            defaultMode: 420
        - name: ssd-proxy-certs
          configMap:
            defaultMode: 420
            optional: true
            name: ssd-proxy-certs
        - name: custom-certs  # Optional: In case we are using any customer-specific custom CAs
          configMap:
            defaultMode: 420
            items:
            - key: ca.crt
              path: ca.crt
            optional: true
            name: customer-custon-ca
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


