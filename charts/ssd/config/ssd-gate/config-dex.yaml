ssd_baseurl: {{.Values.global.oesUI.protocol}}://{{.Values.global.oesUI.host}}

{{- if .Values.ssdgate.home_page }}
home_page: {{.Values.ssdgate.home_page }}
{{- end }}
{{- if .Values.ssdgate.session_timeout }}
session_timeout: {{.Values.ssdgate.session_timeout }}
{{- end }}
{{- if .Values.ssdgate.skipstartcheck }}
skipstartcheck: {{.Values.ssdgate.skipstartcheck }}
{{- end }}
{{- if .Values.ssdgate.dex_url }}
dex_url: {{.Values.ssdgate.dex_url }}
{{- end }}
auth_type: {{.Values.ssdgate.auth_type}}

{{- if eq .Values.ssdgate.auth_type "dex_oidc"}}
auth2_oidc:
  {{- if .Values.ssdgate.auth2_oidc.client_id }}
  client_id: {{.Values.ssdgate.auth2_oidc.client_id }}
  {{- else }}
  client_id: ssd-gate
  {{- end }}
  client_secret: "encrypted:gate-dex-client-secret:client-secret"
  {{- if .Values.ssdgate.auth2_oidc.well_known_url }}
  well_known_url: "{{.Values.ssdgate.auth2_oidc.well_known_url}}"
  {{- else }}
  well_known_url: "{{.Values.global.oesUI.protocol}}://{{.Values.global.oesUI.host}}/dex/.well-known/openid-configuration"
  {{- end }}
  {{- if .Values.ssdgate.auth2_oidc.userinfo_url }}
  userinfo_url: "{{.Values.ssdgate.auth2_oidc.userinfo_url }}
  {{- end }}
  {{- with .Values.ssdgate.auth2_oidc.endpoint }}
  endpoint:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.ssdgate.auth2_oidc.entity_map }}
  entity_map:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.ssdgate.auth2_oidc.scopes }}
  scopes:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
services:   # OPTIONAL default backends are programmed in. If specified ALL backends including these MUST be included
  - name: supplychain-api  # Name
    path_prefixes:
    - "/ssdservice"        # incoming calls are routed based on this. Processed in Order i.e. we can have multiple of these going to the same backend
    baseUrl: supplychain-api:8099
    enabled: true          # Default false, set this to use it.
    scheme: http           # Default http. If the Backend is httpS, please set it
    streaming: false # Default is false. set this if we have a streaming backend e.g. a service that returns results of a DB-query
    auth_required: true # Default false. Note that if the backend does not need auth i.e it will not get the user who requested this
    strip_prefix: true  # Default false. If true, the path_prefix is removed before sending to backend. Best is to use only ONE path_prefix
    health_endpoint: /healthz # Default, change only if required
  - name: rabbitmq
    path_prefixes:
    - "/rabbit"
    baseUrl: rabbitmq-service:15672
    scheme: http
    enabled: true
    strip_prefix: true
    health_endpoint: / # Need to Fix
  - name: ssd-opa
    path_prefixes:
    - "/ssd-opa"
    baseUrl: ssd-opa:8200
    scheme: http
    enabled: true
    health_endpoint: /health
    strip_prefix: true

