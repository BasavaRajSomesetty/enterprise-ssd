---
# Source: oes/charts/guac/charts/nats/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.19.13
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.16"
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
      app.kubernetes.io/instance: release-name
---
# Source: oes/charts/gitea/charts/memcached/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: release-name-memcached
  namespace: default
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-5.9.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: oes/charts/guac/charts/nats/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.19.13
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.16"
    app.kubernetes.io/managed-by: Helm
---
# Source: oes/charts/minio/templates/post-install-prometheus-metrics-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-minio-update-prometheus-secret
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
---
# Source: oes/charts/minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "release-name-minio"
  namespace: "default"
  labels:
    app: minio
    chart: minio-8.0.9
    release: "release-name"
---
# Source: oes/charts/spinnaker/templates/rbac/halyard-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-spinnaker-halyard
  namespace: default
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
---
# Source: oes/templates/forwarder/create-controller-secret.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: create-controller-secret
---
# Source: oes/charts/gitea/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  namespace: default
type: Opaque
data:
  postgresql-postgres-password: "S1BHUDMyNllGZg=="
  postgresql-password: "Z2l0ZWE="
---
# Source: oes/charts/gitea/templates/gitea/config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitea-inline-config
  labels:
    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  _generals_: ""
  cache: |-
    ADAPTER=memcache
    ENABLED=true
    HOST=release-name-memcached.default.svc.cluster.local:11211
  database: |-
    DB_TYPE=postgres
    HOST=release-name-postgresql.default.svc.cluster.local:5432
    NAME=gitea
    PASSWD=gitea
    USER=gitea
  metrics: ENABLED=false
  repository: ROOT=/data/git/gitea-repositories
  security: INSTALL_LOCK=true
  server: |-
    APP_DATA_PATH=/data
    DOMAIN=git.example.com
    ENABLE_PPROF=false
    HTTP_PORT=3000
    PROTOCOL=http
    ROOT_URL=http://git.example.com
    SSH_DOMAIN=git.example.com
    SSH_LISTEN_PORT=22
    SSH_PORT=22
---
# Source: oes/charts/gitea/templates/gitea/config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitea
  labels:
    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  config_environment.sh: |-
    #!/usr/bin/env bash
    set -euo pipefail

    function env2ini::log() {
      printf "${1}\n"
    }

    function env2ini::read_config_to_env() {
      local section="${1}"
      local line="${2}"

      if [[ -z "${line}" ]]; then
        # skip empty line
        return
      fi
      
      # 'xargs echo -n' trims all leading/trailing whitespaces and a trailing new line
      local setting="$(awk -F '=' '{print $1}' <<< "${line}" | xargs echo -n)"

      if [[ -z "${setting}" ]]; then
        env2ini::log '  ! invalid setting'
        exit 1
      fi

      local value=''
      local regex="^${setting}(\s*)=(\s*)(.*)"
      if [[ $line =~ $regex ]]; then
        value="${BASH_REMATCH[3]}"
      else
        env2ini::log '  ! invalid setting'
        exit 1
      fi

      env2ini::log "    + '${setting}'"

      if [[ -z "${section}" ]]; then
        export "ENV_TO_INI____${setting^^}=${value}"                           # '^^' makes the variable content uppercase
        return
      fi

      local masked_section="${section//./_0X2E_}"                            # '//' instructs to replace all matches
      masked_section="${masked_section//-/_0X2D_}"

      export "ENV_TO_INI__${masked_section^^}__${setting^^}=${value}"        # '^^' makes the variable content uppercase
    }

    function env2ini::process_config_file() {
      local config_file="${1}"
      local section="$(basename "${config_file}")"

      if [[ $section == '_generals_' ]]; then
        env2ini::log "  [ini root]"
        section=''
      else
        env2ini::log "  ${section}"
      fi

      while read -r line; do
        env2ini::read_config_to_env "${section}" "${line}"
      done < <(awk 1 "${config_file}")                             # Helm .toYaml trims the trailing new line which breaks line processing; awk 1 ... adds it back while reading
    }

    function env2ini::load_config_sources() {
      local path="${1}"

      env2ini::log "Processing $(basename "${path}")..."

      while read -d '' configFile; do
        env2ini::process_config_file "${configFile}"
      done < <(find "${path}" -type l -not -name '..data' -print0)

      env2ini::log "\n"
    }

    function env2ini::generate_initial_secrets() {
      # These environment variables will either be
      #   - overwritten with user defined values,
      #   - initially used to set up Gitea
      # Anyway, they won't harm existing app.ini files

      export ENV_TO_INI__SECURITY__INTERNAL_TOKEN=$(gitea generate secret INTERNAL_TOKEN)
      export ENV_TO_INI__SECURITY__SECRET_KEY=$(gitea generate secret SECRET_KEY)
      export ENV_TO_INI__OAUTH2__JWT_SECRET=$(gitea generate secret JWT_SECRET)

      env2ini::log "...Initial secrets generated\n"
    }

    # MUST BE CALLED BEFORE OTHER CONFIGURATION
    env2ini::generate_initial_secrets

    env2ini::load_config_sources '/env-to-ini-mounts/inlines/'
    env2ini::load_config_sources '/env-to-ini-mounts/additionals/'

    env2ini::log "=== All configuration sources loaded ===\n"

    # safety to prevent rewrite of secret keys if an app.ini already exists
    if [ -f ${GITEA_APP_INI} ]; then
      env2ini::log 'An app.ini file already exists. To prevent overwriting secret keys, these settings are dropped and remain unchanged:'
      env2ini::log '  - security.INTERNAL_TOKEN'
      env2ini::log '  - security.SECRET_KEY'
      env2ini::log '  - oauth2.JWT_SECRET'

      unset ENV_TO_INI__SECURITY__INTERNAL_TOKEN
      unset ENV_TO_INI__SECURITY__SECRET_KEY
      unset ENV_TO_INI__OAUTH2__JWT_SECRET
    fi

    environment-to-ini -o $GITEA_APP_INI -p ENV_TO_INI
---
# Source: oes/charts/gitea/templates/gitea/init.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-gitea-init
  labels:
    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  init_directory_structure.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail

    set -x
    chown 1000:1000 /data
    mkdir -p /data/git/.ssh
    chmod -R 700 /data/git/.ssh
    [ ! -d /data/gitea ] && mkdir -p /data/gitea/conf

    # prepare temp directory structure
    mkdir -p "${GITEA_TEMP}"
    chown 1000:1000 "${GITEA_TEMP}"
    chmod ug+rwx "${GITEA_TEMP}"

  configure_gitea.sh: |-
    #!/usr/bin/env bash

    set -euo pipefail
    # Connection retry inspired by https://gist.github.com/dublx/e99ea94858c07d2ca6de
    function test_db_connection() {
      local RETRY=0
      local MAX=30

      echo 'Wait for database to become avialable...'
      until [ "${RETRY}" -ge "${MAX}" ]; do
        nc -vz -w2 release-name-postgresql 5432 && break
        RETRY=$[${RETRY}+1]
        echo "...not ready yet (${RETRY}/${MAX})"
      done

      if [ "${RETRY}" -ge "${MAX}" ]; then
        echo "Database not reachable after '${MAX}' attempts!"
        exit 1
      fi
    }

    test_db_connection

    echo '==== BEGIN GITEA CONFIGURATION ===='

    gitea migrate
    function configure_admin_user() {
      local ACCOUNT_ID=$(gitea admin user list --admin | grep -e "\s\+${GITEA_ADMIN_USERNAME}\s\+" | awk -F " " "{printf \$1}")
      if [[ -z "${ACCOUNT_ID}" ]]; then
        echo "No admin user '${GITEA_ADMIN_USERNAME}' found. Creating now..."
        gitea admin user create --admin --username "${GITEA_ADMIN_USERNAME}" --password "${GITEA_ADMIN_PASSWORD}" --email "support@opsmx.com" --must-change-password=false
        echo '...created.'
      else
        echo "Admin account '${GITEA_ADMIN_USERNAME}' already exist. Running update to sync password..."
        gitea admin user change-password --username "${GITEA_ADMIN_USERNAME}" --password "${GITEA_ADMIN_PASSWORD}"
        echo '...password sync done.'
      fi
    }

    configure_admin_user

    function configure_ldap() {
        echo 'no ldap configuration... skipping.'
    }

    configure_ldap

    function configure_oauth() {
        echo 'no oauth configuration... skipping.'
    }

    configure_oauth

    echo '==== END GITEA CONFIGURATION ===='
---
# Source: oes/charts/minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
type: Opaque
data:
  accesskey: "c3Bpbm5ha2VyYWRtaW4="
  secretkey: "c3Bpbm5ha2VyYWRtaW4="
---
# Source: oes/charts/openldap/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: release-name
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "b3BzbXhhZG1pbjEyMw=="
  LDAP_CONFIG_PASSWORD: "b3BzbXhjb25maWcxMjM="
---
# Source: oes/charts/redis/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-redis
  labels:
    app: redis
    chart: redis-10.5.3
    release: "release-name"
    heritage: "Helm"
type: Opaque
data:
  redis-password: "cGFzc3dvcmQ="
---
# Source: oes/charts/spinnaker/templates/secrets/registry.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-spinnaker-registry
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
    component: clouddriver
type: Opaque
data:
  dockerhub: ""
---
# Source: oes/charts/spinnaker/templates/secrets/spin-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-spinnaker-spin-config
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
stringData:
  config: |
    auth:
      basic:
        password: saporadmin
        username: admin
      enabled: true
    gate:
      endpoint: http://sapor-gate:8084
---
# Source: oes/templates/oes-gate/oes-gate-configmap.yaml
apiVersion: v1
stringData:
  gate.yml: |
    ok-http-client:
      interceptor:
        skipHeaderCheck: true
    retrofit:
      connectTimeout: 60000
      readTimeout: 60000
      callTimeout: 60000
      writeTimeout: 60000
      retryOnConnectionFailure: true
    services:
      opsmx:
        baseUrl: http://oes-sapor:8085
        enabled: true
      autopilot:
        baseUrl: http://oes-autopilot:8090
        enabled: true
      platform:
        baseUrl: http://oes-platform:8095
        userGroupApiPath: /platformservice/v1/users/{username}/usergroups/importAndCache
        enabled: true
      dashboard:
        baseUrl: http://oes-dashboard:8094
        enabled: true
      visibility:
        baseUrl: http://oes-visibility:8096
        enabled: true
      auditservice:
         baseUrl: "http://oes-audit-service:8097"
         enabled: true
      auditclient:
         baseUrl: "http://oes-audit-client:8098"
         enabled: true
      oesui:
        externalUrl: /ui/
      keel:
        enabled: false
      clouddriver:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-ro:7002
        enabled: true
      clouddriverCaching:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-caching:7002
        enabled: true
      clouddriverRo:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-ro:7002
        enabled: true
      clouddriverRoDeck:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-ro-deck:7002
        enabled: true
      clouddriverRw:
        host: 0.0.0.0
        port: 7002
        baseUrl: http://spin-clouddriver-rw:7002
        enabled: true
      deck:
        host: 0.0.0.0
        port: 9000
        baseUrl: http://oes.example.ops.com
        enabled: true
      echo:
        host: 0.0.0.0
        port: 8089
        baseUrl: http://spin-echo-worker:8089
        enabled: true
      echoScheduler:
        host: 0.0.0.0
        port: 8089
        baseUrl: http://spin-echo-scheduler:8089
        enabled: true
      echoWorker:
        host: 0.0.0.0
        port: 8089
        baseUrl: http://spin-echo-worker:8089
        enabled: true
      fiat:
        host: 0.0.0.0
        port: 7003
        baseUrl: http://spin-fiat:7003
        enabled: false
      front50:
        host: 0.0.0.0
        port: 8080
        baseUrl: http://spin-front50:8080
        enabled: true
      gate:
        host: 0.0.0.0
        port: 8084
        baseUrl: http://oes-gate.example.ops.com
        enabled: true
      igor:
        host: 0.0.0.0
        port: 8088
        baseUrl: http://spin-igor:8088
        enabled: true
      kayenta:
        host: 0.0.0.0
        port: 8090
        baseUrl: http://spin-kayenta:8090
        enabled: false
      orca:
        host: 0.0.0.0
        port: 8083
        baseUrl: http://spin-orca:8083
        enabled: true
      redis:
        host: 0.0.0.0
        port: 6379
        baseUrl: redis://:password@release-name-redis-master:6379
        enabled: true
      rosco:
        host: 0.0.0.0
        port: 8087
        baseUrl: http://spin-rosco:8087
        enabled: true
    user: {}
    cors:
      allowed-origins-pattern: ^https?://(?:localhost|oes.example.ops.com|spin.example.ops.com|opsmx.com)(?::[1-9]\d*)?/?
      
    ldap:
      enabled: true
      url: ldap://release-name-openldap:389
      managerDn: cn=admin,dc=example,dc=org
      managerPassword: opsmxadmin123
      groupSearchBase: ou=groups,dc=example,dc=org
      groupSearchFilter: member={0}
      groupRoleAttributes: cn
      userDnPattern: cn={0},dc=example,dc=org
    
    file:
      enabled: false
      url: /platformservice/v1/users/authenticate
    authn:
      mode: session
    google: {}
    redis:
      connection: redis://:password@release-name-redis-master:6379
    server:
      session:
        timeoutInSeconds: 7200
      tomcat:
        httpsServerPort: X-Forwarded-Port
        internalProxies: .*
        protocolHeader: X-Forwarded-Proto
        remoteIpHeader: X-Forwarded-For
    gate:
      installation:
        mode: common    #Allowed values are --> oes,common
    rbac:
      feature:
        application:
          enabled: false
    security:
      contentSecurityPolicy: "object-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' https: http:;"
    spinnaker:
      extensibility:
        plugins:
        deck-proxy:
          enabled: true
          plugins:
            Opsmx.VerificationGatePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.TestVerificationGatePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.PolicyGatePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.VisibilityApprovalPlugin:
              enabled: true
              version: 1.0.1
        repositories:
            opsmx-repo:
              url: file:///opt/spinnaker/plugins/plugins.json
              #url: https://raw.githubusercontent.com/OpsMx/spinnakerPluginRepository/v3.10.0/plugins.json
    spring.cloud.vault.enabled: false
    allowUnauthenticatedAccess:
      agentAPI: false
      webhooks: true
    
    logging:
      level:
        com.netflix.spinnaker.gate.security: INFO
        org.springframework.security: INFO
        org.springframework.web: INFO
        #com.netflix.spinnaker.gate.security: DEBUG
        #org.springframework.security: DEBUG
        #org.springframework.web: DEBUG
    
kind: Secret
metadata:
  name: oes-gate-config
  labels:
    app: oes
    component: gate
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/templates/oes-gate/oes-gate-secret.yaml
apiVersion: v1
stringData:
  GATEURL: http://sapor-gate:8084
  GATEUSER: admin
  GATEPASS: saporadmin
kind: Secret
metadata:
  name: oes-gate-secret
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/templates/oes-sapor/oes-sapor-configmap.yaml
apiVersion: v1
stringData:
  application.yml: |
    spring:
      datasource:
        url: jdbc:postgresql://oes-db:5432/oesdb
        username: 'postgres'
        password: 'networks123'
    
    message-broker:
      enabled: true
      username: 'rabbitmq'
      password: 'Networks123'
      host: rabbitmq-service
      port: 5672
      endpoint:
        name: rabbitmq
    
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    
    secretManagement:
      source:
        config: db
      encryption: true
    oes:
      rbac:
        enabled: false
      admin:
        user: admin
      platform:
        url: http://oes-platform:8095
      visibility:
        url: http://oes-visibility:8096
      auditservice:
        enabled: true
        url: "http://oes-audit-service:8097"
      auditclientservice:
        name: auditclient
        url: "http://oes-audit-client:8098"
      dashboard:
        url: http://oes-dashboard:8094
      commongateurl: http://oes-gate:8084
    pipeline-promotion:
      github:
        
        enabled: true
        
        username:  opsmx
        token: opsmxadmin123
        branch: master
        cloneUrl: http://opsmx:opsmxadmin123@release-name-gitea-http.default:3000/opsmx/gitea-standard-repo
      bitbucket:
        
        enabled: false
        
        username:  git/stash_username
        token: git/stash_token
        branch: master
        cloneUrl: https://git/stash_username:git/stash_token@github.com/OpsMx//standard-gitops-repo
      amazonS3:
        
        enabled: false
        
        accessKeyId: AWS_ACCESS_KEY_ID
        secretAccessKey: AWS_SECRET_ACCESS_KEY
        region: regionofbucket
        bucketName: bucket name.e.g-testbucket
    spinnaker:
      restart:
        endPoint: /webhooks/webhook/restartSpinnaker
      encrypt:
        enabled: false
      sync:
        permission:
          enabled: true
    
    datasources:
      platform: true
    
    ## Set the below field to true if agent for kubernetes
    kubernetes:
      kinds:
      omitKinds:
      - podPreset
      agent:
        enabled: true
        serverInternalHostName: opsmx-controller-controller1
        serverPort: 9003
        caCertfile: /opt/opsmx/controller/ca.crt
        certFile: /opt/opsmx/controller/cert/tls.crt
        keyFile: /opt/opsmx/controller/cert/tls.key
        image: quay.io/opsmxpublic/forwarder-agent:v3.5.7
      template:
        path: /opt/opsmx/controller
        kubectlTemplateFileName: kubeconfig.template
        manifestTemplateFileName: deploy-agent.template
    
  client.p12: |
    
kind: Secret
metadata:
  name: oes-sapor-config
  labels:
    app: oes
    component: sapor
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/templates/oes-sapor/sapor-bootstrap-secret.yaml
apiVersion: v1
stringData:
  bootstrap.yml: |-
    spring:
      cloud:
        config:
          server:
            composite:
              - type: native
                search-locations: ${user.home}/config
        vault:
          enterprise: false
          namespace: admin/isd-platform
          uri: https://server.vaultint.opsmx.net
          token: 123132
          enabled: false
          kv:
            enabled: false
          generic:
            enabled: false
    jasypt:
      encryptor:
        password: Q7udUkHPuA3VnNlOtksSgQ
kind: Secret
metadata:
  name: sapor-bootstrap
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/templates/sapor-gate/sapor-gate-secret.yaml
apiVersion: v1
data:
  gate-local.yml:
    
  gate-overrides.yml:
    
  gate.yml:
    
  spinnaker.yml:
    
  spinnakerconfig.yml:
    
kind: Secret
metadata:
  labels:
    app: oes
    component: sapor-gate
  name: sapor-gate-files
type: Opaque
---
# Source: oes/templates/secrets/bootstrap-secret.yaml
apiVersion: v1
stringData:
  bootstrap.yml: |-
    spring:
      cloud:
        vault:
          enterprise: false
          namespace: admin/isd-platform
          uri: https://server.vaultint.opsmx.net
          token: 123132
          enabled: false
          kv:
            enabled: false
          generic:
            enabled: false
    jasypt:
      encryptor:
        password: Q7udUkHPuA3VnNlOtksSgQ
    datasource:
      secretManagement:
        source: db
kind: Secret
metadata:
  name: bootstrap
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/templates/secrets/gitea-secret.yaml
apiVersion: v1
stringData:
  # Repo uri to fetch halyard configuration
  username: opsmx
  password: opsmxadmin123
kind: Secret
metadata:
  name: gitea-secret
type: Opaque
---
# Source: oes/charts/guac/charts/nats/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nats-config
  namespace: default
  labels:
    helm.sh/chart: nats-0.19.13
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.16"
    app.kubernetes.io/managed-by: Helm
data:
  nats.conf: |
    # NATS Clients Port
    port: 4222

    # PID file shared with configuration reloader.
    pid_file: "/var/run/nats/nats.pid"

    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name:$POD_NAME
    ###################################
    #                                 #
    # NATS JetStream                  #
    #                                 #
    ###################################
    jetstream {
      max_mem: 1Gi
      store_dir: /data

      max_file:10Gi
    }
    max_payload: 64MB
    lame_duck_grace_period: 10s
    lame_duck_duration: 30s
---
# Source: oes/charts/guac/templates/guac-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: guac-cm
data:
  guac.yaml: |

    # Nats setup
    nats-addr: nats://release-name-nats.default.svc.cluster.local:4222

    # CSub setup
    csub-addr: collectsub.default.svc.cluster.local:2782
    csub-listen-port: 2782

    # GQL setup
    gql-backend: inmem
    gql-listen-port: 8080
    gql-debug: true
    gql-test-data: false
    gql-addr: http://graphql-server.default.svc.cluster.local:8080/query
    
    # Collector behavior
    service-poll: true
    use-csub: true
---
# Source: oes/charts/minio/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
data:
  initialize: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for Minio service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to Minio server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} config host add myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(${MC} ls myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }
    
    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3
      VERSIONING=$4
    
      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          ${MC} rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi
    
      # Create the bucket if it does not exist
      if ! checkBucketExists $BUCKET ; then
        echo "Creating bucket '$BUCKET'"
        ${MC} mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."
      fi
    
    
      # set versioning for bucket
      if [ ! -z $VERSIONING ] ; then
        if [ $VERSIONING = true ] ; then
            echo "Enabling versioning for '$BUCKET'"
            ${MC} version enable myminio/$BUCKET
        elif [ $VERSIONING = false ] ; then
            echo "Suspending versioning for '$BUCKET'"
            ${MC} version suspend myminio/$BUCKET
        fi
      else
          echo "Bucket '$BUCKET' versioning unchanged."
      fi
    
      # At this point, the bucket should exist, skip checking for existence
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      ${MC} policy set $POLICY myminio/$BUCKET
    }
    
    # Try connecting to Minio instance
    scheme=http
    connectToMinio $scheme
    # Create the bucket
    
    # Create the buckets
    createBucket spinnaker none false 
    createBucket autopilot none false
---
# Source: oes/charts/openldap/templates/configmap-customldif.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /container/service/slapd/assets/config/bootstrap/ldif/custom
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-openldap-customldif
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: release-name
    heritage: Helm
data:
  01-memberof.ldif: |-
    dn: cn=module,cn=config
    cn: module
    objectClass: olcModuleList
    olcModuleLoad: memberof.la
    olcModulePath: /usr/lib/ldap
    
    dn: olcOverlay={0}memberof,olcDatabase={1}hdb,cn=config
    objectClass: olcConfig
    objectClass: olcMemberOf
    objectClass: olcOverlayConfig
    objectClass: top
    olcOverlay: memberof
    olcMemberOfDangling: ignore
    olcMemberOfRefInt: TRUE
    olcMemberOfGroupOC: groupOfNames
    olcMemberOfMemberAD: member
    olcMemberOfMemberOfAD: memberOf
  02-refint1.ldif: |-
    dn: cn=module{1},cn=config
    changetype: modify
    add: olcmoduleload
    olcmoduleload: refint.la
  03-refint2.ldif: |-
    dn: olcOverlay={1}refint,olcDatabase={1}hdb,cn=config
    objectClass: olcConfig
    objectClass: olcOverlayConfig
    objectClass: olcRefintConfig
    objectClass: top
    olcOverlay: {1}refint
    olcRefintAttribute: memberof member manager owner
  04-add_ou.ldif: |-
    dn: ou=groups,dc=example,dc=org
    objectClass: organizationalUnit
    ou: Groups
  05-admin.ldif: |-
    dn: cn=admin,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: admin
    description: read write and execute group
    member: cn=admin,dc=example,dc=org
  06-developer.ldif: |-
    dn: cn=developers,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: developers
    description: read only users
    member: cn=admin,dc=example,dc=org
    member: cn=developer,dc=example,dc=org
  07-qa.ldif: |-
    dn: cn=QA,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: QA
    description: read only users
    member: cn=admin,dc=example,dc=org
    member: cn=qa,dc=example,dc=org
  08-manager.ldif: |-
    dn: cn=managers,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: managers
    description: read and execute group
    member: cn=admin,dc=example,dc=org
    member: cn=manager,dc=example,dc=org
  09-IT-manager.ldif: |-
    dn: cn=ITManagers,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: ITManagers
    description: read and execute group
    member: cn=admin,dc=example,dc=org
    member: cn=ITManager,dc=example,dc=org
  10-users.ldif: |-
    dn: cn=user1,dc=example,dc=org
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: user1
    userpassword: {SSHA}Y9L4AsYL16WLK10qDZ62pTScFnaWb0nz
    
    dn: cn=user2,dc=example,dc=org
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: user2
    userpassword: {SSHA}DasTBI0eut1F83Bh1F1HXmDT8juJj3pY
    
    dn: cn=user3,dc=example,dc=org
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: user3
    userpassword: {SSHA}Qu1FW7BdLMndwM/Gf+zc3a8VIMAymbuv
    
    dn: cn=developers,ou=groups,dc=example,dc=org
    changetype: modify
    add: member
    member: cn=user1,dc=example,dc=org
    member: cn=user3,dc=example,dc=org
    
    dn: cn=QA,ou=groups,dc=example,dc=org
    changetype: modify
    add: member
    member: cn=user2,dc=example,dc=org
    member: cn=user3,dc=example,dc=org
---
# Source: oes/charts/openldap/templates/configmap-env.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://github.com/osixia/docker-openldap#beginner-guide
# Note that passwords are defined as secrets
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-openldap-env
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: release-name
    heritage: Helm
data:
  LDAP_BACKEND: hdb
  LDAP_DOMAIN: example.org
  LDAP_ORGANISATION: Example Inc.
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"
  LDAP_TLS: "true"
  LDAP_TLS_ENFORCE: "false"
---
# Source: oes/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis
  labels:
    app: redis
    chart: redis-10.5.3
    heritage: Helm
    release: release-name
data:
  redis.conf: |-
    # User-supplied configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly no
    # Disable RDB persistence, AOF persistence already enabled.
    save 60 1000
  master.conf: |-
    dir /data
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
  replica.conf: |-
    dir /data
    slave-read-only yes
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
---
# Source: oes/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-redis-health
  labels:
    app: redis
    chart: redis-10.5.3
    heritage: Helm
    release: release-name
data:
  ping_readiness_local.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_PASSWORD --no-auth-warning \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_PASSWORD --no-auth-warning \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_MASTER_PASSWORD --no-auth-warning \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_MASTER_PASSWORD --no-auth-warning \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: oes/charts/spinnaker/templates/configmap/additional-profile-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-spinnaker-additional-profile-config-maps
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
data:
  echo-local.yml: |-
    microsoftteams:
      enabled: true
    rest:
      enabled: true
      endpoints:
      - url: http://oes-audit-service:8097/auditservice/v1/echo/events/data
        wrap: false
      - url: http://oes-sapor:8085/oes/echo
        wrap: false
  fiat-local.yml: |-
    auth:
      groupMembership:
        ldap:
          groupRoleAttributes: cn
          groupSearchBase: ou=groups,dc=example,dc=org
          groupSearchFilter: member={0}
          managerDn: cn=admin,dc=example,dc=org
          managerPassword: opsmxadmin123
          url: ldap://RELEASE_NAME-openldap:389
          userDnPattern: cn={0},dc=example,dc=org
        service: ldap
  front50-local.yml: |-
    policy:
      opa:
        enabled: true
        url: http://oes-sapor.default:8085
    spinnaker:
      s3:
        versioning: false
  gate-local.yml: |-
    server:
      tomcat:
        httpsServerPort: X-Forwarded-Port
        internalProxies: .*
        protocolHeader: X-Forwarded-Proto
        remoteIpHeader: X-Forwarded-For
    spinnaker:
      extensibility:
        deck-proxy:
          enabled: true
          plugins:
            Opsmx.CustomStagePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.PolicyGatePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.TestVerificationGatePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.VerificationGatePlugin:
              enabled: true
              version: 1.0.1
            Opsmx.VisibilityApprovalPlugin:
              enabled: true
              version: 1.0.1
        plugins: null
        repositories:
          opsmx-repo:
            url: https://raw.githubusercontent.com/opsmx/spinnakerPluginRepository/v3.9.0/plugins.json
  # Custom stage for pipeline promotion;
  # same configuration can be put in a repo for gitops style
  orca-local.yml: |-
    
    policy:
      opa:
        enabled: true
        url: http://oes-sapor:8085
    pollers:
      oldPipelineCleanup:
        enabled: true                  # This enables old pipeline execution cleanup (default: false)
        intervalMs: 3600000            # How many milliseconds between pipeline cleanup runs (default: 1hr or 3600000)
        thresholdDays: 30              # How old a pipeline execution must be to be deleted (default: 30)
        minimumPipelineExecutions: 5   # How many executions to keep around (default: 5)
    
    tasks:
      daysOfExecutionHistory: 180      # How many days to keep old task executions around.
    
    job:
      preconfigured:
        kubernetes:
          - label: pipelineSyncToGit
            cloudProvider: kubernetes
            credentials: default
            description: Update git with pipelines in Spinnaker
            account: default
            application: sampleapp
            type: pipelineSyncToGit
            waitForCompletion: true
            parameters:
              - defaultValue: "app1,app2,..."
                description: "Please enter spinnaker applications separated by comma"
                label: spinnaker applications
                mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
                name: spinnaker_applications
              - defaultValue: "pipeline1,pipeline2..."
                description: "Please enter spinnaker pipelines separated by comma"
                label: pipieline names
                mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
                name: spinnaker_pipelines
            manifest:
                apiVersion: batch/v1
                kind: Job
                metadata:
                  generateName: pipepromot-
                  namespace: SPINNAKER_NAMESPACE
                  labels:
                     stage: opsmx-custom
                     stagetype: pipelinepromotion
                spec:
                  backoffLimit: 0
                  template:
                    spec:
                      containers:
                      - command: ["bash", "scripts/deployer.sh"]
                        image: 'opsmxdev/pipepromot:1.0'
                        imagePullPolicy: IfNotPresent
                        name: pipepromot
                        volumeMounts:
                        - mountPath: /home/opsmx/scripts
                          name: pipe-promot-scripts
                        - mountPath: /home/opsmx/config
                          name: pipe-promot-config
                        - mountPath: /home/opsmx/.spin
                          name: spin-cli-config
                        env:
                          - name: spinnaker_applications
                            value: 'will be replaced'
                          - name: spinnaker_pipelines
                            value: 'will be replaced'
                          - name: command
                            value: 'upload'
                          - name: git_secret_token
                            valueFrom:
                              secretKeyRef:
                                name: git-token
                                key: git_secret_token
                          - name: git_pr_token
                            valueFrom:
                              secretKeyRef:
                                name: git-token
                                key: git_pr_token
                      volumes:
                      - configMap:
                          defaultMode: 420
                          name: pipe-promot-config
                        name: pipe-promot-config
                      - configMap:
                          defaultMode: 420
                          name: pipe-promot-scripts
                        name: pipe-promot-scripts
                      - name: spin-cli-config
                        secret:
                          defaultMode: 420
                          secretName: spin-cli-config
                      restartPolicy: Never
                      serviceAccountName: default
          - label: pipelineSyncToSpinnaker
            cloudProvider: kubernetes
            credentials: default
            description: Sync Spinnaker pipelines from git
            account: default
            application: sampleapp
            type: pipelineSyncToSpinnaker
            waitForCompletion: true
            parameters:
              - defaultValue: "app1,app2,..."
                description: "Please enter spinnaker applications separated by comma"
                label: spinnaker applications
                mapping: 'manifest.spec.template.spec.containers[0].env[0].value'
                name: spinnaker_applications
              - defaultValue: "pipeline1,pipeline2..."
                description: "Please enter spinnaker pipelines separated by comma"
                label: pipieline names
                mapping: 'manifest.spec.template.spec.containers[0].env[1].value'
                name: spinnaker_pipelines
            manifest:
                apiVersion: batch/v1
                kind: Job
                metadata:
                  generateName: pipepromot-
                  namespace: SPINNAKER_NAMESPACE
                  labels:
                     stage: opsmx-custom
                     stagetype: pipelinepromotion
                spec:
                  backoffLimit: 0
                  template:
                    spec:
                      containers:
                      - command: ["bash", "scripts/deployer.sh"]
                        image: 'opsmxdev/pipepromot:1.0'
                        imagePullPolicy: IfNotPresent
                        name: pipepromot
                        volumeMounts:
                        - mountPath: /home/opsmx/scripts
                          name: pipe-promot-scripts
                        - mountPath: /home/opsmx/config
                          name: pipe-promot-config
                        - mountPath: /home/opsmx/.spin
                          name: spin-cli-config
                        env:
                          - name: spinnaker_applications
                            value: 'will be replaced'
                          - name: spinnaker_pipelines
                            value: 'will be replaced'
                          - name: command
                            value: 'download'
                          - name: git_secret_token
                            valueFrom:
                              secretKeyRef:
                                name: git-token
                                key: git_secret_token
                          - name: git_pr_token
                            valueFrom:
                              secretKeyRef:
                                name: git-token
                                key: git_pr_token
                      volumes:
                      - configMap:
                          defaultMode: 420
                          name: pipe-promot-config
                        name: pipe-promot-config
                      - configMap:
                          defaultMode: 420
                          name: pipe-promot-scripts
                        name: pipe-promot-scripts
                      - name: spin-cli-config
                        secret:
                          defaultMode: 420
                          secretName: local-spin-cli-config
                      restartPolicy: Never
                      serviceAccountName: default
    webhook:
      preconfigured:
      - label: "JIRA: Wait for state"
        type: waitJiraState
        enabled: true
        description: Custom stage that waits for a specific state on a Jira Issue
        method: GET
        url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}
        customHeaders:
          ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
          Authorization: Basic base64{<<USER>>:<<Jira-token>>}
          Content-Type: application/json
        failPipeline: true
        progressJsonPath: "fields.status.name"
        payload: ""
        retryStatusCodes:
          - 200
        statusJsonPath: "fields.status.name"
        statusUrlResolution: "getMethod"
        successStatuses: ${parameterValues['success']}
        retryStatuses: ${parameterValue['retry']}
        terminalStatuses: ${parameterValues['terminate']}
        canceledStatuses: ${parameterValues['cancel']}
        waitBeforeMonitor: "1"
        waitForCompletion: true
        parameters:
        - label: JIRA Issue ID
          name: issue
          description: "The JIRA issue, the default relies on JIRA issue ID extraction"
          type: string
          defaultValue: ${jira_issue}
        - label: JIRA Retry States
          name: retry
          description: "JIRA issue states that Retry the stage e.g,: To Do, In Progress, etc."
          type: string
          defaultValue: To Do, In Progress
        - label: JIRA Success States
          name: success
          description: "JIRA issue States that progress the pipeline, e.g,: In Verificaiton etc."
          type: string
          defaultValue: In Verification
        - label: JIRA Temination States
          name: terminate
          description: "JIRA issue states that terminates the pipeline, e.g,: PR Raised etc."
          type: string
          defaultValue: PR Raised
        - label: JIRA Canceled States
          name: cancel
          description: "JIRA issue states that cancel the pipeline e.g,: Done, etc."
          type: string
          defaultValue: Done
      - label: "JIRA: Create Issue"
        type: addJiraIss
        enabled: true
        description: Custom stage that add an Issue in Jira
        method: POST
        url: https://<DOMAIN>/rest/api/2/issue/
        customHeaders:
         ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
         Authorization: Basic base64{<<USER>>:<<Jira-token>>}
         Content-Type: application/json
        payload: |-
          {
            "fields": {
               "project":
                {
                  "key": "${parameterValues['projectid']}"
                },
                "summary": "${parameterValues['summary']}",
                "description": "${parameterValues['description']}",
                "issuetype": {
                  "name": "${parameterValues['issuetype']}"
                },
                "components": [
                    {
                  "id": "${parameterValues['components']}"
                }
                ],
                "priority": {
                  "name": "${parameterValues['priority']}"
                }
            }
          }
        parameters:
        - label: Project ID ("ENG" or "DOCS")
          name: projectid
          description: Which JIRA project do you want to create an item in?
          type: string
        - label: Issue Type ("Improvement", "Task", "New Feature", or "Bug")
          name: issuetype
          description: issuetype
          type: string
        - label: Priority ("Low", "Medium", or "High")
          name: priority
          description: priority
          type: string
        - label: Components ("10103")
          name: components
          description: component of the project
        - label: Issue Summary
          name: summary
          description: summary
          type: string
        - label: Description
          name: description
          description: description
          type: string
      - label: "JIRA: Comment on Issue"
        type: comJiraIss
        enabled: true
        description: Custom stage that posts a comment in a Jira Issue
        method: POST
        url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}/comment
        customHeaders:
          ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
          Authorization: Basic base64{<<USER>>:<<Jira-token>>}
          Content-Type: application/json
        payload: |-
          {
            "body": "${parameterValues['message']}"
          }
        parameters:
        - label: Issue ID
          name: issue
          description: Issue
          type: string
        - label: Message
          name: message
          description: message
          type: string
      - label: "JIRA: Update Issue"
        type: updJiraIss
        enabled: true
        description: Custom stage that updates an Issue in Jira
        method: PUT
        url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}
        customHeaders:
          ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
          Authorization: Basic base64{<<USER>>:<<Jira-token>>}
          Content-Type: application/json
        payload: |-
          {
            "update": {
                "summary": [
                    {
                        "set": "${parameterValues['summary']}"
                    }
                ],
                "description": [
                    {
                       "set": "${parameterValues['description']}"
                    }
                ]
            }
          }
        parameters:
        - label: Issue ID
          name: issue
          description: Issue
          type: string
        - label: Summary
          name: summary
          description: summary
          type: string
        - label: Description
          name: description
          description: description
      - label: "JIRA: Transition Issue"
        type: transJiraIss
        enabled: true
        description: Custom stage that transitions an Issue in Jira
        method: POST
        url: https://<DOMAIN>/rest/api/latest/issue/${parameterValues['issue']}/transitions
        customHeaders:
          ## Provide the JIRA credentails that are in base64 encoded USER:PASSWORD/TOKEN
          Authorization: Basic base64{<<USER>>:<<Jira-token>>}
          Content-Type: application/json
        payload: |-
          {
            "transition": {
              "id": "${parameterValues['targetStageID']}"
            }
          }
        parameters:
        - label: Issue ID
          name: issue
          description: Issue
          type: string
        - label: Target Stage ID
          name: targetStageID
          description: Target Stage ID (11 is "To Do", 21 is "In Progress", 31 is "In Review", 41 is "Done")
          type: string
    spinnaker:
      extensibility:
        plugins-root-path: /tmp/plugins
        plugins:
          Opsmx.VerificationGatePlugin:
            enabled: true
            version: 1.0.1
            config:
          Opsmx.VisibilityApprovalPlugin:
            enabled: true
            version: 1.0.1
            config:
          Opsmx.TestVerificationGatePlugin:
            enabled: true
            version: 1.0.1
            config:
          Opsmx.PolicyGatePlugin:
            enabled: true
            version: 1.0.1
            config:
          Opsmx.RbacPlugin:
            enabled: true
            version: 1.0.1
            config:
        repositories:
          opsmx-repo:
            id: opsmx-repo
            url: file:///opt/spinnaker/plugins/plugins.json
            #url: https://raw.githubusercontent.com/opsmx/spinnakerPluginRepository/v3.10.0/plugins.json
    

  echo-local.yml: |-
    rest:
      enabled: true
      endpoints:
       -
        wrap: false
        url: http://oes-sapor.default:8085/oes/echo
---
# Source: oes/charts/spinnaker/templates/configmap/halyard-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-spinnaker-halyard-config
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
data:
  install.sh: |
    #!/bin/bash

    # Wait for the Hal daemon to be ready
    export DAEMON_ENDPOINT='curl http://release-name-spinnaker-halyard:8064/health'
    export HAL_COMMAND="$DAEMON_ENDPOINT"
    until $HAL_COMMAND ; do sleep 10 ; done # end of if not gitops

    # This is performed by post-start script in halyard pod
    # in case gitopsHalyard is enabled
  clean.sh: |
    export HAL_COMMAND='hal --daemon-endpoint http://release-name-spinnaker-halyard:8064'
    if $HAL_COMMAND --ready; then
      $HAL_COMMAND deploy clean -q
    fi
  config.sh: |
    # Spinnaker version
    
    $HAL_COMMAND config version edit --version 1.30.1
    

    # Storage
    
    echo spinnakeradmin | $HAL_COMMAND config storage s3 edit \
        --endpoint http://release-name-minio:9000 \
        --access-key-id spinnakeradmin \
        --secret-access-key --bucket spinnaker \
        --path-style-access true
    $HAL_COMMAND config storage edit --type s3
    
    
    
    

    # Docker Registry
    $HAL_COMMAND config provider docker-registry enable

    if $HAL_COMMAND config provider docker-registry account get dockerhub; then
      PROVIDER_COMMAND='edit'
    else
      PROVIDER_COMMAND='add'
    fi

    $HAL_COMMAND config provider docker-registry account $PROVIDER_COMMAND dockerhub --address index.docker.io \
       \
      --repositories library/alpine,library/ubuntu,library/centos,library/nginx

    $HAL_COMMAND config provider kubernetes enable

    if $HAL_COMMAND config provider kubernetes account get default; then
      PROVIDER_COMMAND='edit'
    else
      PROVIDER_COMMAND='add'
    fi

    $HAL_COMMAND config provider kubernetes account $PROVIDER_COMMAND default --docker-registries dockerhub \
                --context default --service-account true \
                 \
                --only-spinnaker-managed true \
                 \
                 \
                --omit-namespaces=kube-system,kube-public \
                 \
                 \
                 \
                --provider-version v2
    $HAL_COMMAND config deploy edit --account-name default --type distributed \
                           --location default
    $HAL_COMMAND config deploy ha clouddriver enable
    $HAL_COMMAND config deploy ha echo enable

    # Enable Authentication by default
    $HAL_COMMAND config security authn ldap edit --url ldap://release-name-openldap:389 --user-dn-pattern  'cn={0},dc=example,dc=org'
    $HAL_COMMAND config security authn ldap enable

    # Enable Authorization
    $HAL_COMMAND config security authz disable


    # Use Deck to route to Gate
---
# Source: oes/charts/spinnaker/templates/configmap/halyard-init-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-spinnaker-halyard-init-script
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
data:
  init.sh: |

    echo \"Checking for Gitea services\"
    wait_period=0
    while true
    do
    kubectl get po -n default -o jsonpath='{range .items[*]}{..metadata.name}{"\t"}{..containerStatuses..ready}{"\n"}{end}' > /tmp/inst.status
    GITEA=$(grep gitea-0 /tmp/inst.status |grep -v deck | awk '{print $2}')

    wait_period=$(($wait_period+10))
    if [ "$GITEA" == "true" ];
    then
        echo \"Gitea Pod is ready\"
        break
    else
        if [ $wait_period -gt 1800 ];
        then
            echo \"Script is timed out as the Gitea is not ready in 30 min.......\"
            break
        else
            echo \"Waiting for Gitea to be ready\"
            sleep 1m
        fi
    fi
    done
    rm -rf /tmp/spinnaker/repo.json
    gitea_user=`echo $GITEA_USER | sed 's/ *$//g'`
    gitea_pass=`echo $GITEA_PASS | sed 's/ *$//g'`
    basic_auth=$(echo -n $gitea_user:$gitea_pass |base64)
    DYNAMIC_ACCOUNTS_REPO=http://release-name-gitea-http.$SPINNAKER_NAMESPACE:3000/$gitea_user/gitea-standard-repo.git
    GIT_USER=$gitea_user
    GIT_TOKEN=$gitea_pass

    echo "Checking if the local gitea repo exists....."
    curl -k -X GET "http://release-name-gitea-http.$SPINNAKER_NAMESPACE:3000/api/v1/users/$gitea_user/repos" >/tmp/spinnaker/repo.json
    checkrepo=$(cat /tmp/spinnaker/repo.json | jq '.[] | select(.name=="gitea-standard-repo")')

        if [ -z "$checkrepo" ]
        then
                echo "Creating a New Local Gitea Repo gitea-standard-repo......."
                curl -k -X POST "http://release-name-gitea-http.$SPINNAKER_NAMESPACE:3000/api/v1/user/repos" -H "content-type: application/json" -H "Authorization: Basic $basic_auth" --data '{"name":"'gitea-standard-repo'"}'
                git clone https://github.com/OpsMx/standard-gitops-repo.git -b v4.0.4 /tmp/spinnaker/test/standard-gitops-repo/
                git clone http://$gitea_user:$gitea_pass@release-name-gitea-http.$SPINNAKER_NAMESPACE:3000/$gitea_user/gitea-standard-repo.git /tmp/spinnaker/test/gitea-standard-repo/
                cp -pr /tmp/spinnaker/test/standard-gitops-repo/* /tmp/spinnaker/test/gitea-standard-repo/
                cd /tmp/spinnaker/test/gitea-standard-repo/
                git status
                git add .
                git config user.email support@opsmx.com
                git config user.name $gitea_user
                git commit -m "cloned standard-gitops-repo content"
                git push
                cd
                rm -rf /tmp/spinnaker/test/gitea-standard-repo
                rm -rf /tmp/spinnaker/test/standard-gitops-repo
                rm -rf /tmp/spinnaker/test
                git clone http://$gitea_user:$gitea_pass@release-name-gitea-http.$SPINNAKER_NAMESPACE:3000/$gitea_user/gitea-standard-repo.git /tmp/spinnaker/test/

        else
                echo "Local Repo exits...."
                rm -rf /tmp/spinnaker/test/gitea-standard-repo
                git clone http://$gitea_user:$gitea_pass@release-name-gitea-http.$SPINNAKER_NAMESPACE:3000/$gitea_user/gitea-standard-repo.git /tmp/spinnaker/test
        fi
        #override the repotye to gitea in order to support pipelin-promotion
        sed -i  s/repo_type=git/repo_type=gitea/ /tmp/spinnaker/test/pipeline-promotion/pipe-promot-config-cm.yaml
        sed -i  s/git_user=/git_user=${GIT_USER}/ /tmp/spinnaker/test/pipeline-promotion/pipe-promot-config-cm.yaml
        sed -i  s/root_folder=/root_folder=pipeline-promotion/ /tmp/spinnaker/test/pipeline-promotion/pipe-promot-config-cm.yaml
    #!/bin/bash -x
    rm -rf /tmp/spinnaker/.hal
    cp -r /tmp/spinnaker/test// /tmp/spinnaker/.hal
    if [ -d "/tmp/spinnaker/test/pipeline-promotion/" ]
    then
       cp -r /tmp/spinnaker/test/pipeline-promotion /tmp/spinnaker/pipeline-promotion
    fi
    if [ -d "/tmp/spinnaker/test/clusterconfig/" ]
    then
       cp -r /tmp/spinnaker/test/clusterconfig /tmp/spinnaker/clusterconfig
    fi
    ## If BOM file present in gitops repo consider bom file and replace images in the service-setting folder to the respective services
    if [ -r "/tmp/spinnaker/test/bom" ]
    then
      cp -r /tmp/spinnaker/test/bom /tmp/spinnaker/bom
      rm -rf /tmp/spinnaker/.hal/bom
      ## Updated the halyard config version
      crthalversion=$(yq e '.deploymentConfigurations.[].version' /tmp/spinnaker/.hal/config)
      halversion=$(yq e '.version' /tmp/spinnaker/bom)
      echo "INFO: Updating the halyard version from VERSION $crthalversion to VERSION $halversion"
      yq -i e '.deploymentConfigurations.[].version = "'$halversion'"' /tmp/spinnaker/.hal/config
      ## Read service  as asingle line comma saperated
      echo "INFO: Updating the spinnaker images of service-settings folder using bom file in gitops"
      halservices=$(yq e '(.services | keys)[]' /tmp/spinnaker/bom | xargs | sed -e 's/ /,/g')
      IFS=","
      for i in $halservices
      do
        svcimg=$(yq e '.services.'$i'.image' /tmp/spinnaker/bom)
        svcn=$(find /tmp/spinnaker/.hal/default/service-settings/ -name "$i"* | awk -F"/" '{print $NF}' | xargs | sed -e 's/ /,/g')
        if [[ "$svcn" != "" ]];
        then
          IFS=","
          for svcfile in $svcn
          do
            yq -i e '.artifactId = "'$svcimg'"' /tmp/spinnaker/.hal/default/service-settings/$svcfile
          done
        else
          echo "WARNING: Service file $i is not located in default/service-settings/ to override the artifact image from bom"
        fi
      done
    else
      echo "WARNING: Not specified bom in gitops repo overidden images will be  taken from default/service-settings"
    fi
    rm -rf /tmp/spinnaker/test
    DYNAMIC_ACCOUNTS_REPO=`echo $DYNAMIC_ACCOUNTS_REPO | sed 's/ *$//g'`
    sed -i  s/SPINNAKER_NAMESPACE/${SPINNAKER_NAMESPACE}/ /tmp/spinnaker/.hal/config
    sed -i  s/RELEASE_NAME/release-name/g /tmp/spinnaker/.hal/config
    BRANCH=master
    sed -i s/BRANCH/${BRANCH}/ /tmp/spinnaker/.hal/default/profiles/spinnakerconfig.yml
    KEY=Q7udUkHPuA3VnNlOtksSgQ
    sed -i s/KEY/${KEY}/ /tmp/spinnaker/.hal/default/profiles/spinnakerconfig.yml
    sed -i  s/GIT_USER/${GIT_USER}/g /tmp/spinnaker/.hal/default/profiles/spinnakerconfig.yml
    sed -i  s/GIT_TOKEN/${GIT_TOKEN}/g /tmp/spinnaker/.hal/default/profiles/spinnakerconfig.yml
    sed -i  's|DYNAMIC_ACCOUNTS_REPO|'"${DYNAMIC_ACCOUNTS_REPO}"'|' /tmp/spinnaker/.hal/default/profiles/spinnakerconfig.yml
    sed -i  s%DYN_ACCNT_CONFG_PATH%/%g /tmp/spinnaker/.hal/default/profiles/spinnakerconfig.yml
    sed -i  s/RELEASE_NAME/release-name/g /tmp/spinnaker/.hal/default/profiles/rosco-local.yml
    sed -i  s/RELEASE_NAME/release-name/g /tmp/spinnaker/.hal/default/service-settings/redis.yml
    yq -i e '.deploymentConfigurations.[].security.authz.enabled = "false"' /tmp/spinnaker/.hal/config
    if [ -f /tmp/spinnaker/.hal/default/profiles/fiat-local.yml ]; then
    sed -i  s/RELEASE_NAME/release-name/g /tmp/spinnaker/.hal/default/profiles/fiat-local.yml
    fi
    sed -i  s/SPINNAKER_NAMESPACE/${SPINNAKER_NAMESPACE}/ /tmp/spinnaker/.hal/default/profiles/orca-local.yml
    printf 'server.address: 0.0.0.0\n' > /tmp/config/halyard-local.yml
    if [ -f /tmp/spinnaker/.hal/halyard.yaml ]; then
    cp /tmp/spinnaker/.hal/halyard.yaml /tmp/config
    fi
    yq -i e '.deploymentConfigurations.[].security.authn.saml.enabled = "false"' /tmp/spinnaker/.hal/config
    rm -rf /tmp/spinnaker/.hal/default/profiles/orca-overrides.yml
    rm -rf /tmp/spinnaker/.hal/default/profiles/fiat-overrides.yml
    rm -rf /tmp/spinnaker/.hal/default/profiles/gate-overrides.yml
    rm -rf /tmp/spinnaker/.hal/default/profiles/spinnaker.yml  # git or stash  # Enabled  # End of S3

    # The decrypt token extract
    kubectl get secret bootstrap -o jsonpath='{.data.bootstrap\.yml}' -n ${SPINNAKER_NAMESPACE} | base64 -d > /tmp/decryptkry.txt
    decrypt_key=$(yq e '.jasypt.encryptor.password' /tmp/decryptkry.txt)

    # pipeline promotion configuration setup
    #
    ls -lart /home/spinnaker/java-lib/
    if [ -d "/tmp/spinnaker/pipeline-promotion/" ]
    then
      if [[ $decrypt_key != "" ]];
      then
        for filename in /tmp/spinnaker/pipeline-promotion/*; do
          java -cp "Decryptor.jar:/home/spinnaker/java-lib/*" Decryptor $decrypt_key "$filename"
        done
      mkdir /tmp/spinnaker/pipeline-decrypted/
      mv /tmp/spinnaker/pipeline-promotion/*decrypted.yaml /tmp/spinnaker/pipeline-decrypted/
      kubectl apply -f /tmp/spinnaker/pipeline-promotion/pipe-promot-config-cm.yaml -n ${SPINNAKER_NAMESPACE}
      kubectl apply -f /tmp/spinnaker/pipeline-decrypted/ -n ${SPINNAKER_NAMESPACE}
     fi
    fi
    # decrypt json files for integrations

    ls /tmp/spinnaker/.hal -1 | grep .enc > /tmp/jsonfiles
    if [ -s /tmp/jsonfiles ];
    then
      if [[ $decrypt_key != "" ]];
      then
        echo "Data is available in jsonfiles"
        while read -r line;
        do
         echo "$line" ;
         java -cp "Decryptor.jar:/home/spinnaker/java-lib/*" Decryptor $decrypt_key "/tmp/spinnaker/.hal/$line" json
        done < /tmp/jsonfiles
        rm -rf /tmp/spinnaker/.hal/*.enc
        cp /tmp/spinnaker/.hal/decrypted/* /tmp/spinnaker/.hal/
        rm -rf /tmp/spinnaker/.hal/decrypted/
      fi
    fi
    ############# Auto Configuration for Custom Stages in ORCA #############

    if [ -d "/tmp/spinnaker/clusterconfig/" ]
    then
      if [[ $decrypt_key != "" ]];
      then
        for filename in /tmp/spinnaker/clusterconfig/*; do
          java -cp "Decryptor.jar:/home/spinnaker/java-lib/*" Decryptor $decrypt_key "$filename"
        done
      mkdir /tmp/spinnaker/clusterconfig-decrypted/
      mv /tmp/spinnaker/clusterconfig/*decrypted.yaml /tmp/spinnaker/clusterconfig-decrypted/
      kubectl apply -f /tmp/spinnaker/clusterconfig-decrypted/ -n ${SPINNAKER_NAMESPACE}
        if [ -r "/tmp/spinnaker/clusterconfig/servicenow-secret.yaml" ]
        then
           #### Extracting the Service NOW information from secret ####
           SERVICENOW_USER=$(kubectl get secret servicenow-secret -o jsonpath='{.data.SERVICENOW_USERNAME}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
           SERVICENOW_DNS=$(kubectl get secret servicenow-secret -o jsonpath='{.data.SERVICENOW_URL}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
           SERVICENOW_PASSWD=$(kubectl get secret servicenow-secret -o jsonpath='{.data.SERVICENOW_PASSWORD}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
           SERVICENOW_BASE64_USR_PASSWD=$(echo -n "$SERVICENOW_USER:$SERVICENOW_PASSWD" | base64)
           sed -i s%SERVICENOW_URL%${SERVICENOW_DNS}%g /tmp/spinnaker/.hal/default/profiles/orca-local.yml
           sed -i  s/SERVICENOW_BASE64_USR_PASSWD/${SERVICENOW_BASE64_USR_PASSWD}/g /tmp/spinnaker/.hal/default/profiles/orca-local.yml
        else
           echo "Not able to find the ServiceNow secret file"
        fi
        if [ -r "/tmp/spinnaker/clusterconfig/jira-secret.yaml" ]
        then
           #### Extracting the JIRA information from secret ####
           JIRA_TYPE=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_TYPE}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
           if [ "$JIRA_TYPE" == "onPremJira" ];then
             echo "Using the Jira On Prem Details"
             JIRA_USER=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_USERNAME}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
             JIRA_DNS=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_URL}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
             JIRA_TOKN=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_TOKEN}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
             JIRA_BASE64_USR_PASSWD=$JIRA_TOKN
             sed -i s%JIRA_URL%${JIRA_DNS}%g /tmp/spinnaker/.hal/default/profiles/orca-local.yml
             sed -i 's/Basic JIRA_BASE64_USR_PASSWD/Bearer TOKEN/g' /tmp/spinnaker/.hal/default/profiles/orca-local.yml
             sed -i s/TOKEN/${JIRA_TOKN}/g /tmp/spinnaker/.hal/default/profiles/orca-local.yml
           else
             if [ "$JIRA_TYPE" == "cloudJira" ];then
               echo "Using the Jira Cloud Details"
               JIRA_USER=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_USERNAME}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
               JIRA_DNS=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_URL}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
               JIRA_TOKN=$(kubectl get secret jira-secret -o jsonpath='{.data.JIRA_TOKEN}' -n ${SPINNAKER_NAMESPACE} | base64 -d)
               JIRA_BASE64_USR_PASSWD=$(echo -n "$JIRA_USER:$JIRA_TOKN" | base64 )
               sed -i s%JIRA_URL%${JIRA_DNS}%g /tmp/spinnaker/.hal/default/profiles/orca-local.yml
               sed -i s/JIRA_BASE64_USR_PASSWD/${JIRA_BASE64_USR_PASSWD}/g /tmp/spinnaker/.hal/default/profiles/orca-local.yml
             fi
           fi
        else
          echo "Not able to find the JIRA secret file"
        fi
      fi
    fi
---
# Source: oes/charts/spinnaker/templates/configmap/halyard-overrideurl.yaml
apiVersion: v1
data:
  call_overrides.sh: |
    echo $SPINNAKER_NAMESPACE
    sh /tmp/autoconfig/config_overrideurl.sh spin-gate-overrideurl-gitops
    sh /tmp/autoconfig/config_overrideurl.sh spin-deck-overrideurl-gitops
  config_overrideurl.sh: |
    #!/bin/bash -x

    if [ $# -gt 1 ]
    then
       echo "Invalid input, only one argument expected"
       exit
    fi

    COMPONENT=$1
    EXTERNAL_IP_CHECK_DELAY=1

    check_for_loadBalancer()
    {
        ## Wait for $EXTERNAL_IP_CHECK_DELAY till K8s assins a load Balancer IP to oes-gate
        iter=0
        lapsedTime=0
        while [ $iter -lt 100 ]
        do
          ENDPOINT_IP=$(kubectl get svc $1 -o jsonpath="{.status.loadBalancer.ingress[].ip}")
          if [ ! -z "$ENDPOINT_IP" ];
          then
            echo "Found LoadBalancer IP for" $1
            break
          fi
          sleep 5
          lapsedTime=`expr $lapsedTime + 5`
          if [ $lapsedTime -gt $EXTERNAL_IP_CHECK_DELAY ];
          then
    	echo "Time Lapsed" $lapsedTime
            echo "Timeout! Fetching nodeport IP alternatively"
            break
          fi
          echo "Time Lapsed" $lapsedTime
          iter=`expr $iter + 1`
        done
    }

    case "$COMPONENT" in
      spin-gate)
        ENDPOINT_IP=""
        PORT=8084

        ## Wait for $EXTERNAL_IP_CHECK_DELAY till K8s assins a load Balancer IP to oes-gate
        check_for_loadBalancer spin-gate-lb

        ## If external IP is not available
        if [ -z "$ENDPOINT_IP" ]; then
          ## Fetch the nodePort IP and replace in spinnaker.yaml
          #ENDPOINT_IP=$(kubectl get ep kubernetes -n default -o jsonpath="{.subsets[].addresses[].ip}")
          ENDPOINT_IP=$NODE_IP
          PORT=$(kubectl get svc spin-gate-np -o jsonpath="{.spec.ports[].nodePort}")
          sed -i  s/OVERRIDE_API_URL/$ENDPOINT_IP:$PORT/g /tmp/spinnaker/.hal/config
        else
          ## Substitute spin-gate external IP in hal config
          sed -i  s/OVERRIDE_API_URL/$ENDPOINT_IP:$PORT/g /tmp/spinnaker/.hal/config
        fi
        ;;

      spin-deck)
        ENDPOINT_IP=""
        PORT=9000

        ## Wait for $EXTERNAL_IP_CHECK_DELAY till K8s assins a load Balancer IP to oes-gate
        check_for_loadBalancer spin-deck-lb

        ## If external IP is not available
        if [ -z "$ENDPOINT_IP" ]; then
          ## Fetch the nodePort & nodeport and replace in app-config.js
          ENDPOINT_IP=$NODE_IP
          PORT=$(kubectl get svc spin-deck-np -o jsonpath="{.spec.ports[].nodePort}")
          sed -i  s/OVERRIDE_DECK_URL/$ENDPOINT_IP:$PORT/g /tmp/spinnaker/.hal/config
        else
          ## Substitute spin-deck external IP in hal config
          sed -i  s/OVERRIDE_DECK_URL/$ENDPOINT_IP:$PORT/g /tmp/spinnaker/.hal/config
        fi
        ;;
      override-gate-url)
        ENDPOINT_IP=""
        PORT=8084

        export DAEMON_ENDPOINT=http://release-name-spinnaker-halyard:8064
        export HAL_COMMAND="hal --daemon-endpoint $DAEMON_ENDPOINT"

        ## Wait for $EXTERNAL_IP_CHECK_DELAY till K8s assins a load Balancer IP to oes-gate
        check_for_loadBalancer spin-gate-np

        ## If external IP is not available
        if [ -z "$ENDPOINT_IP" ]; then
          ## Fetch the nodePort IP and replace in spinnaker.yaml
          #ENDPOINT_IP=$(kubectl get ep kubernetes -n default -o jsonpath="{.subsets[].addresses[].ip}")
          ENDPOINT_IP=$NODE_IP
          PORT=$(kubectl get svc spin-gate-np -o jsonpath="{.spec.ports[].nodePort}")
          $HAL_COMMAND config security api edit --no-validate --override-base-url http://$ENDPOINT_IP:$PORT
        else
          ## Run hal config edit command to override gate url
          $HAL_COMMAND config security api edit --no-validate --override-base-url http://$ENDPOINT_IP:$PORT
        fi
        ;;
      override-deck-url)
        ENDPOINT_IP=""
        PORT=9000

        export DAEMON_ENDPOINT=http://release-name-spinnaker-halyard:8064
        export HAL_COMMAND="hal --daemon-endpoint $DAEMON_ENDPOINT"

        ## Wait for $EXTERNAL_IP_CHECK_DELAY till K8s assins a load Balancer IP to oes-gate
        check_for_loadBalancer spin-deck-np

        ## If external IP is not available
        if [ -z "$ENDPOINT_IP" ]; then
          ## Fetch the nodePort & nodeport and replace in app-config.js
          ENDPOINT_IP=$NODE_IP
          PORT=$(kubectl get svc spin-deck-np -o jsonpath="{.spec.ports[].nodePort}")
          $HAL_COMMAND config security ui edit --no-validate --override-base-url http://$ENDPOINT_IP:$PORT
        else
          ## Run hal config edit command to override deck url
          $HAL_COMMAND config security ui edit --no-validate --override-base-url http://$ENDPOINT_IP:$PORT
        fi
        ;;
      spin-gate-overrideurl-gitops)
        ## Configured ingress host url as override url
          echo "Substituting gate url"
          sed -i 's,PROTOCOL,http,g' /tmp/spinnaker/.hal/config
          sed -i 's,OVERRIDE_API_URL,oes.example.ops.com/gate,g' /tmp/spinnaker/.hal/config
        ;;
      spin-deck-overrideurl-gitops)
        ## Configured ingress host url as override url
          echo "Substituting deck url"
          sed -i 's,OVERRIDE_DECK_URL,oes.example.ops.com/deck,g' /tmp/spinnaker/.hal/config
        ;;
      *)
        echo  COMP=$COMPONENT
        echo "Invalid input:$COMPONENT"
        ;;
    esac

kind: ConfigMap
metadata:
  name: release-name-spinnaker-halyard-overrideurl
---
# Source: oes/charts/spinnaker/templates/configmap/secret-decoder.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-spinnaker-spin-secret-decoder
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
data:
  run.sh: |-
    #!/bin/bash
    echo "##########Replacing Secret#########"
    grep -ir encrypted: /tmp/spinnaker/.hal | sort -t: -u -k1,1 |cut -d : -f1 > tmp.list
    while IFS= read -r file; do
    grep encrypted: $file > tmp1.list
    while read line ; do
    echo ${line#*encrypted:} ;
    done < tmp1.list > secret-strings.list
    while read secret ; do
    secretName=${secret%%:*}
    echo "---------$secretName---"
    keyName=${secret#*:}
    keyName=${keyName%%\"*}
    keyName=${keyName%% *}
    echo "----------$keyName--"
    #echo "secret Name= $secretName and key is = $keyName"
    #kubectl get secret -o jis
    #echo kubectl --kubeconfig /home/srini/ibm-cloud/staging/ibmstaging.config -n ninja-srini get secret $secretName -o json  jq -r ".data.$keyName"
    jqParam=".data.\"$keyName\""
    value=$(kubectl get secret $secretName -o json | jq -r $jqParam | base64 -d)
    value=$(echo $value | sed -e 's`[][\\/.*^$]`\\&`g')
    #echo "-----------$value---"
    #echo "secret Name= $secretName and key is = $keyName and value is $value"
    sed -i s/encrypted:$secretName:$keyName/$value/g $file
    done < secret-strings.list
    done < tmp.list

    echo "########### Replacing Kubeconfigs ############"
    grep encryptedFile /tmp/spinnaker/.hal/config > tmp.list
    while read line ; do
    echo ${line#*encryptedFile:} ;
    done < tmp.list  > secret-files.list

    while read secret ; do
    secretName=${secret%%:*}
    keyName=${secret#*:}
    keyName=${keyName%%\"*}
    keyName=${keyName%% *}
    echo "secret Name= $secretName and key is = $keyName"
    jqParam=".data.\"$keyName\""
    mkdir -p /tmp/spinnaker/kubeconfigdir
    kubectl get secret $secretName -o json | jq -r $jqParam | base64 -d > /tmp/spinnaker/kubeconfigdir/$keyName
    #echo "secret Name= $secretName and key is = $keyName and value is in $keyName"
    old_value="encryptedFile:$secretName:$keyName"
    new_value="/home/spinnaker/kubeconfigdir/$keyName"
    #echo $old_value
    #echo $new_value
    sed -i "s/${old_value}/$(echo $new_value | sed 's_/_\\/_g')/g" /tmp/spinnaker/.hal/config
    done < secret-files.list
    rm -rf secret-files.list secret-strings.list tmp.list
---
# Source: oes/charts/spinnaker/templates/configmap/service-settings.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-spinnaker-service-settings
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"

data:
  clouddriver-caching.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-clouddriver:8.0.4-1'
  clouddriver-ro-deck.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-clouddriver:8.0.4-1'
  clouddriver-ro.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-clouddriver:8.0.4-1'
  clouddriver-rw.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-clouddriver:8.0.4-1'
  clouddriver.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-clouddriver:8.0.4-1'
  deck.yml: |-
    artifactId: quay.io/opsmxpublic/ubi8-oes-deck:3.5.1
    env:
      API_HOST: http://spin-gate:8084
  echo-scheduler.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-echo:2.17.1'
  echo-worker.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-echo:2.17.1'
  echo.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-echo:2.17.1'
  fiat.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-fiat:1.16.0'
  front50.yml: 'artifactId: quay.io/opsmxpublic/ubi8-oes-front50:0.27.1-opa'
  gate.yml: |-
    artifactId: quay.io/opsmxpublic/ubi8-oes-spin-gate:1.22.1
    healthEndpoint: /health
    kubernetes:
      useExecHealthCheck: false
  igor.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-igor:1.16.0'
  kayenta.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-kayenta:0.21.0'
  orca.yml: 'artifactId: quay.io/opsmxpublic/ubi8-oes-orca:2.20.4'
  redis.yml: |-
    overrideBaseUrl: redis://<EXTERNAL-REDIS-HOST-NAME>:6379
    skipLifeCycleManagement: true
  rosco.yml: 'artifactId: quay.io/opsmxpublic/ubi8-spin-rosco:0.25.0'
---
# Source: oes/charts/spinnaker/templates/configmap/spin-pipeline-import.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-spinnaker-spin-pipeline-import
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
data:
  spin-pipeline-import.sh: |-
    #!/bin/bash
    echo "Waiting for all Spinnaker Services to come-up"
    wait_period=0
    while true
    do
    kubectl get po -n default -o jsonpath='{range .items[*]}{..metadata.name}{"\t"}{..containerStatuses..ready}{"\n"}{end}' > /tmp/inst.status
    ## NON-HA
    CLOUDDRIVER=$(grep spin-clouddriver /tmp/inst.status |grep -v deck | awk '{print $2}')
    ECHO=$(grep spin-echo /tmp/inst.status | awk '{print $2}')
    ## HA
    CLOUDRO=$(grep spin-clouddriver-ro /tmp/inst.status |grep -v deck | awk '{print $2}')
    CLOUDRODECK=$(grep spin-clouddriver-ro-deck /tmp/inst.status | awk '{print $2}')
    CLOUDRW=$(grep spin-clouddriver-rw /tmp/inst.status | awk '{print $2}')
    CLOUDCACHING=$(grep spin-clouddriver-caching /tmp/inst.status | awk '{print $2}')
    DECK=$(grep spin-deck /tmp/inst.status | awk '{print $2}')
    ECHOWORKER=$(grep spin-echo-worker /tmp/inst.status | awk '{print $2}')
    ECHOSCHEDULER=$(grep spin-echo-scheduler  /tmp/inst.status | awk '{print $2}')
    FRONT=$(grep spin-front /tmp/inst.status  | awk '{print $2}')
    #GATE=$(grep spin-gate /tmp/inst.status | awk '{print $2}')
    IGOR=$(grep spin-igor /tmp/inst.status | awk '{print $2}')
    ORCA=$(grep spin-orca /tmp/inst.status | awk '{print $2}')
    FIAT=$(grep spin-fiat /tmp/inst.status | awk '{print $2}')
    #ROSCO=$(grep spin-rosco /tmp/inst.status | awk '{print $2}')
    ## AUTOPILOT
    SAPORGATE=$(grep sapor-gate /tmp/inst.status | awk '{print $2}')
    OESGATE=$(grep oes-gate /tmp/inst.status | awk '{print $2}')
    wait_period=$(($wait_period+10))
    READYBASIC=$( [ "$DECK" == "true" ] && [ "$CLOUDCACHING" == "true" ] && [ "$CLOUDRO" == "true" ] && [ "$CLOUDRW" == "true" ] && [ "$CLOUDRODECK" == "true" ] && [ "$FRONT" == "true" ] && [ "$ORCA" == "true" ] && [ "$ECHOWORKER" == "true" ] && [ "$ECHOSCHEDULER" == "true" ] && [ "$SAPORGATE" == "true" ] && [ "$OESGATE" == "true" ];  echo $(($? == 0)) )
    READY=$READYBASIC
    if [ $READY == 1 ];
    then
        echo "Spinnaker and OES is Installed and ready"
        mkdir -p /tmp/config/git/
        git -c http.sslVerify=false clone https://github.com/OpsMx/sample-pipelines.git /tmp/config/git/
        if [[ $? != 0 ]]; then
        echo "ERROR: Failed while cloning the repo https://github.com/OpsMx/sample-pipelines.git"
          exit 1
        fi
        echo "processing.........."
        sleep 100
        cd /tmp/config/git
        cp -p /tmp/config/spin/config .
        ### remove commected line in file
        grep -v "#" create-app.sh > removecomment.sh
        sed 's/$/ --config config/' removecomment.sh > create-app1.sh
        #### Loop begins to save the json if fails it tries for 3 times
        INPUT=$(sed -n '$=' create-app1.sh)
        for i in $(seq 1 $INPUT); do
        command=$(sed -n "$i"p create-app1.sh);
        $command > /dev/null 2>&1
        if [[ $? != 0 ]]; then
          n=0
          until [ "$n" -ge 3 ]
          do
           echo Retrying.....
           $command > /dev/null 2>&1
            if [[ $? != 0 ]]; then
              echo "ERROR: Failed to save the Application/Pipeline using the spincli. Please check the spincli configuration in release-name-spinnaker-spin-config  secret or check the pipelinejson"
              echo "$command"
              #exit 1
              if [[ "$i" == 3 ]]; then
              echo "ERROR: Failed to save the Application/Pipeline using the spincli. Please check the spincli configuration in release-name-spinnaker-spin-config  secret or check the pipelinejson"
              echo "$command"
              exit 1
              fi
            else
              echo "$command"
              echo "Saved successfully"
            fi
           n=$((n+1))
           sleep 5
         done
        else
          echo "$command"
          echo "Saved successfully"
        fi
        done
        break
    else
        if [ $wait_period -gt 1800 ];
        then
            echo "Script is timed out as the Spinnaker is not ready in 30 min......."
            break
        else
            echo "Waiting for Spinnaker services to be ready"
            sleep 1m
        fi
    fi
    done
---
# Source: oes/templates/configmaps/datasource-creation.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-oes-datasource-creation
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
data:
  datasource-api.sh: |-
    #!/bin/bash
    set -x
    echo \"Waiting for all Spinnaker and OES Services to come-up\"
    wait_period=0
    while true
    do
    kubectl get po -n default -o jsonpath='{range .items[*]}{..metadata.name}{"\t"}{..containerStatuses..ready}{"\n"}{end}' > /tmp/inst.status
    ## NON-HA
    CLOUDDRIVER=$(grep spin-clouddriver /tmp/inst.status |grep -v deck | awk '{print $2}')
    ECHO=$(grep spin-echo /tmp/inst.status | awk '{print $2}')
    ## HA
    CLOUDRO=$(grep spin-clouddriver-ro /tmp/inst.status |grep -v deck | awk '{print $2}')
    CLOUDRODECK=$(grep spin-clouddriver-ro-deck /tmp/inst.status | awk '{print $2}')
    CLOUDRW=$(grep spin-clouddriver-rw /tmp/inst.status | awk '{print $2}')
    CLOUDCACHING=$(grep spin-clouddriver-caching /tmp/inst.status | awk '{print $2}')
    DECK=$(grep spin-deck /tmp/inst.status | awk '{print $2}')
    ECHOWORKER=$(grep spin-echo-worker /tmp/inst.status | awk '{print $2}')
    ECHOSCHEDULER=$(grep spin-echo-scheduler  /tmp/inst.status | awk '{print $2}')
    FRONT=$(grep spin-front /tmp/inst.status  | awk '{print $2}')
    #GATE=$(grep spin-gate /tmp/inst.status | awk '{print $2}')
    IGOR=$(grep spin-igor /tmp/inst.status | awk '{print $2}')
    ORCA=$(grep spin-orca /tmp/inst.status | awk '{print $2}')
    FIAT=$(grep spin-fiat /tmp/inst.status | awk '{print $2}')
    #ROSCO=$(grep spin-rosco /tmp/inst.status | awk '{print $2}')
    ## AUTOPILOT
    SAPOR=$(grep oes-sapor /tmp/inst.status | awk '{print $2}')
    PLATFORM=$(grep oes-platform /tmp/inst.status | awk '{print $2}')
    AUTOPILOT=$(grep oes-autopilot /tmp/inst.status | awk '{print $2}')


    wait_period=$(($wait_period+10))
    READYBASIC=$([ "$DECK" == "true" ] && [ "$CLOUDCACHING" == "true" ] && [ "$CLOUDRO" == "true" ] && [ "$CLOUDRW" == "true" ] && [ "$CLOUDRODECK" == "true" ] && [ "$FRONT" == "true" ] && [ "$ORCA" == "true" ]  && [ "$ECHOWORKER" == "true" ] && [ "$ECHOSCHEDULER" == "true" ] && [ "$SAPOR" == "true" ] && [ "$PLATFORM" == "true" ] && [ "$AUTOPILOT" == "true" ] && [ "$IGOR" == "true" ]; echo $(($? == 0)) )
    READY=$READYBASIC


    if [ $READY == 1 ] ;
        then
            echo \"Spinnaker and OES services are Up and Ready..\"
            sleep 5
            curl -X POST "http://sapor-gate:8084/login?username=admin&password=saporadmin&submit=Login"
            curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST  --data '{"datasourceType": "OPA", "name": "OPA", "configurationFields": {"endPoint": "http://opa:8181"}}'   http://oes-platform:8095/platformservice/v2/datasources
            curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST  --data '{"datasourceType": "AUTOPILOT", "name": "Autopilot", "configurationFields": {"username": "admin"} }'   http://oes-platform:8095/platformservice/v2/datasources
            #curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST  --data '{"datasourceType": "ELASTICSEARCH", "name": "elastic-default", "configurationFields": {"endPoint": "https://newoeselastic.opsmx.com", "username": "opsmxuser", "password": "OpsMx@123", "kibanaEndPoint": "https://newoeskibana.opsmx.com", "kibanaPassword": "OpsMx@123", "kibanaUsername": "opsmxuser" }}'   http://oes-platform:8095/platformservice/v2/datasources
            #curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST  --data '{"datasourceType": "PROMETHEUS", "name": "prometheus-default", "configurationFields": {"endPoint": "http://prometheus:9090"} }'   http://oes-platform:8095/platformservice/v2/datasources
            echo "Creating OPA Policies"
            curl --header 'Content-Type: application/json' --header 'x-spinnaker-user: admin' --request POST http://oes-sapor:8085/oes/v2/policy/save --data '{"name":"AppMustHaveRbac","type":"Static","accountType":"OPA","accountName":"OPA","description":"Enforce Application in Spinnakr to have Roles defined.","status":"INACTIVE","rego":"# Static Policy to enforce assigning roles when creating an application\n# Once enforced, it is not possible to create an application that is visible to all\n# by mistake\n\npackage opsmx.spinnaker.authorization\n\ndeny[\"Permissions must be specified\"] {\n   not(appHasWritePermissions)\n   input.new.job[_].type==\"updateApp\"\n }{\n   not(appHasWritePermissions)\n   input.new.job[_].type==\"createApp\"\n}\nappHasWritePermissions {\n  count(input.new.job[0].application.permissions.WRITE) > 0\n}"}'
            curl --header 'Content-Type: application/json' --header 'x-spinnaker-user: admin' --request POST http://oes-sapor:8085/oes/v2/policy/save --data '{"name":"StageLevelRBAC","type":"Static","accountType":"OPA","accountName":"OPA","description":"Restrict a group of users from modifying certain stages","status":"INACTIVE","rego":"package opsmx.spinnaker.stage_rbac\nimport future.keywords.in\n\n# The permissions json is to be defined to restrict some users from making changes to a specific stage\n# in the pipeline. The parameters for each stage are \"name\" of the pipeline, \"type\" of the pipeline and \"grant\" privilege\n# which can hold 2 values: allow and deny\npermissions = {\n  \"role_grants\": {\n    \"demo-users\": [\n      {\n        \"name\": \"Build\",\n        \"type\": \"jenkins\",\n        \"grant\": \"deny\"\n      },\n      { \n        \"name\": \"Deploy \",\n        \"type\": \"deployManifest\",\n        \"grant\": \"deny\"\n      },\n      { \n        \"name\": \"Manual Judgment \",\n        \"type\": \"manualJudgment\",\n        \"grant\": \"deny\"\n      },\n      {\n        \"name\": \"Wait\",\n        \"type\": \"wait\",\n        \"grant\": \"deny\"\n      }\n    ]\n  }\n}\n\n\n# modified_stages is the set of stages which carry \"modified\", \"new\" and \"deleted\" stageStatus. \n# only the stages with stageStatus = unmodified are excluded.\n\nmodified_stages = [input.pipeline.stages[idx] | input.pipeline.stages[idx].stageStatus != \"unmodified\"]\n#modified_stage_name = [input.pipeline.stages[idx].name | input.pipeline.stages[idx].stageStatus != \"unmodified\"]\n\n\n# The operation is denied if there is no modified/new/deleted stage in the pipeline\ndeny[\"No modified stages found\"]{\n  count(input.pipeline.stages) > 0         # only because we still have fron50 plugin; this will be removed in 3.12.x release\n  count(modified_stages) <= 0\n}\n\n# If there are modifications in the pipeline, the privileges of users to operate on a set of stages\n# is evaluated on the basis of\n\n# 1. If the user is admin, allow the user to do anything\n# 2. If the permissions json does not carry definition of privileges for any group assigned to the user,\n# then the user is to be allowed to make any changes\n# 3. If there are no denials in the permissions definition, then the user is to be allowed to make any changes\n# 4. If there are denials for some stages in any of the role assigned to user, then\n#\t4a. Checking if the same stages is allowed for any other role assigned to user\n#   4b. If a respective allow privilege is available, then allow.\n#   4c. If not then deny\n# 5. If there are any denials w.r.t. modified stages, simply deny the user from saving.\n# Rule 4 and 5 are contradicting, one of them is to be enabled. Comment line 92-100 to disable rule 4.\n\ndeny[msg]{\n  #not user_is_admin\n  \n  some i\n  role_def = permissions.role_grants[i]\n  role_def_flag = i in input.pipeline.user.groups\n  role_def_flag == true\n  \n  denial_set = user_is_denied\n  denial_size = count(denial_set) \n  to_number(denial_size) > 0\n\n# Comment rest of the statements in this rule if rule 4 is to be enabled\n  acceptance_set = user_is_allowed\n\n  some j\n  accepted_stages = [acceptance_set[j].name | acceptance_set[j].grant == \"allow\"]\n  \n  some k\n  denied_stages = [denial_set[k].name | denial_set[k].grant == \"deny\"; not denial_set[k].name in accepted_stages]\n  denial_size_after_acceptance = count(denied_stages)\n  denial_size_after_acceptance > 0\n  \n  denial_stage_msg = concat(\",\" , denied_stages)\n  msg = sprintf(\"Denied for stages: %v\", [denial_stage_msg])\n}\n\n\n# Check if user is admin\n#user_is_admin {\n # \"admin\" in input.pipeline.user.groups\n#}\n\n# Obtain list of denied and allowed stages for the groups assigned to user\nmake_grant_decision{  \n  some grant_idx\n  user_is_denied[grant_idx]\n\n  some grant_idx2\n  user_is_allowed[grant_idx2]\n}\n\nuser_is_denied[grant_idx] {\n  some stage in modified_stages\n  some role in input.pipeline.user.groups\n  some grant_idx in permissions.role_grants[role]\n  \n  grant_idx.name == stage.name\n  grant_idx.type == stage.type\n  grant_idx.grant == \"deny\" \n}\n\nuser_is_allowed[grant_idx2] {\n  some stage in modified_stages\n  some role in input.pipeline.user.groups\n  some grant_idx2 in permissions.role_grants[role]\n  \n  grant_idx2.name == stage.name\n  grant_idx2.type == stage.type\n  grant_idx2.grant == \"allow\" \n}"}'
            curl --header 'Content-Type: application/json' --header 'x-spinnaker-user: admin' --request POST http://oes-sapor:8085/oes/v2/policy/save --data '{"name":"BlackOutWindow","type":"Runtime","accountType":"OPA","accountName":"OPA","description":"Policy to Prevent deployment during a specified date/time range.","status":"INACTIVE","rego":"# Sample Runtime policy\n  # This policy blocks deployments in the blackout window period\n  \n  package opsmx.blackoutwindow\n  \n  deny[\"No deploys between 25th - 31st Dec 2020\"] {\n    [year, month, day] := time.date([time.now_ns(), \"America/Los_Angeles\"])\n    year == 2020\n    month == 12\n    day >= 25\n    day <= 31\n  }"}'

            STORAGE_TYPE=gitea
            GITEA_USERNAME=opsmx
            GITEA_PASSWORD=opsmxadmin123
            USERNAME=admin
            PASSWORD=saporadmin
            response=$(curl -s http://oes-sapor:8085/oes/accountsConfig/v3/spinnaker)
            name=$(echo $response | jq '.[].name')
            if [ -z "$name" ];
            then
              if [[ "$STORAGE_TYPE"  ==  "gitea" ]];
              then

              curl -X POST -H "Content-Type: application/json"  -k -d '{"name":"'"$GITEA_USERNAME"'"}' -u $GITEA_USERNAME:$GITEA_PASSWORD http://release-name-gitea-http.default:3000/api/v1/users/$GITEA_USERNAME/tokens >token.json
              TOKEN=$(cat token.json | jq '.sha1' -r)

              response=$(curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-platform:8095/platformservice/v6/datasource --data '{"datasourceType": "GITHUB", "name": "gitops", "spinEnabled": "false", "configurationFields": {"token": "'$TOKEN'", "username": "", "hostUrl": "http://release-name-gitea-http:3000", "url": "http://release-name-gitea-http:3000/api/v1/users/opsmx" } }')

              id=$(echo $response | jq '.id')
              curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v4/spinnaker --data '{"name":"preview-saas","url":"http://sapor-gate:8084","authenticationType":"LDAP","externalAccountFlag":true,"pipelinePromotionFlag":true,"syncAccountFlag":false,"externalAccountConfiguration":{"accountId": "'"${id}"'","accountName":"gitops","provider":"GITHUB","config":{"bucketName":"","region":"","endPoint":"http://release-name-gitea-http:3000/'$GITEA_USERNAME'/gitea-standard-repo.git","sourcePath":""}},"pipelinePromotionConfiguration":{"accountId": "'"${id}"'","accountName":"gitops","provider":"GITHUB","config":{"bucketName":"","region":"","endPoint":"http://release-name-gitea-http:3000/'$GITEA_USERNAME'/gitea-standard-repo.git","sourcePath":""}},"password":"'"${PASSWORD}"'","userName":"'"${USERNAME}"'"}'

              sleep 5
              kubectl delete po release-name-spinnaker-halyard-0 -n default
              #curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v4/spinnaker --data '{"name":"preview-saas","url":"http://sapor-gate:8084","authenticationType":"LDAP","externalAccountFlag":true,"pipelinePromotionFlag":false,"syncAccountFlag":false,"externalAccountConfiguration":{"accountId": "'"${id}"'","accountName":"gitops","provider":"GITHUB","config":{"bucketName":"","region":"","endPoint":"http://release-name-gitea-http:3000/'$GITEA_USERNAME'/gitea-standard-repo.git","sourcePath":""}},"pipelinePromotionConfiguration":null,"password":"'"${PASSWORD}"'","userName":"'"${USERNAME}"'"}'
                 break
              fi
            fi

            STORAGE_TYPE=git
            BASEURL_HOST=github.com
            USERNAME=admin
            PASSWORD=saporadmin
            TOKEN=$(echo -n "$USERNAME":"$PASSWORD" | base64)
            response=$(curl -s http://oes-sapor:8085/oes/accountsConfig/v3/spinnaker)
            name=$(echo $response | jq '.[].name')
            if [ -z "$name" ];
            then
              if [[ "$STORAGE_TYPE"  ==  "git" && "$BASEURL_HOST" == "github.com" ]];
              then
              response=$(curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-platform:8095/platformservice/v6/datasource --data '{"datasourceType": "GITHUB", "name": "gitops", "spinEnabled": "false", "configurationFields": {"token": "git/stash_token", "username": "git/stash_username", "hostUrl": "https://github.com/", "url": "https://api.github.com" } }')
              id=$(echo $response | jq '.id')
              curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v4/spinnaker --data '{"name":"preview-saas","url":"http://sapor-gate:8084","authenticationType":"LDAP","externalAccountFlag":true,"pipelinePromotionFlag":false,"syncAccountFlag":false,"externalAccountConfiguration":{"accountId": "'"${id}"'","accountName":"gitops","provider":"GITHUB","config":{"bucketName":"","region":"","endPoint":"https://github.com/OpsMx/standard-gitops-repo.git","sourcePath":""}},"pipelinePromotionConfiguration":null,"password":"'"${PASSWORD}"'","userName":"'"${USERNAME}"'"}'
              #curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v3/spinnaker --data '{"name": "preview-saas", "url": "http://oes-gate.example.ops.com", "authenticationType": "LDAP", "token": "'"${TOKEN}"'", "externalAccountFlag": "true","pipelinePromotionFlag": "false","syncAccountFlag": "false", "externalAccountConfiguration": {"accountId": "'"${id}"'","accountName": "gitops", "provider": "GITHUB", "config": {"bucketName": "", "region": "","endPoint": "https://github.com/OpsMx/standard-gitops-repo.git", "sourcePath": "" }}}'
                  break
              fi
              if [[ "$STORAGE_TYPE"  ==  "git" && "$BASEURL_HOST" == "gitlab.com" ]];
              then
              response=$(curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-platform:8095/platformservice/v6/datasource --data '{"datasourceType": "GITLAB", "name": "gitops", "spinEnabled": "false", "configurationFields": {"token": "git/stash_token", "hostUrl": "https://gitlab.com/" } }')
              id=$(echo $response | jq '.id')
              curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v4/spinnaker --data '{"name":"preview-saas","url":"http://sapor-gate:8084","authenticationType":"LDAP","externalAccountFlag":true,"pipelinePromotionFlag":false,"syncAccountFlag":false,"externalAccountConfiguration":{"accountId": "'"${id}"'","accountName":"gitops","provider":"GITLAB","config":{"bucketName":"","region":"","endPoint":"https://gitlab.com/OpsMx/standard-gitops-repo.git","sourcePath":""}},"pipelinePromotionConfiguration":null,"password":"'"${PASSWORD}"'","userName":"'"${USERNAME}"'"}'
                  break
              fi
              if [[ "$STORAGE_TYPE"  ==  "stash" ]];
              then
                if [[ "" ]]
                then
                  response=$(curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-platform:8095/platformservice/v2/datasources --data '{"datasourceType": "BITBUCKET", "name": "gitops-bitbucket", "spinEnabled": "false", "configurationFields": {"authType":"bearer","username": "git/stash_username","token": "git/stash_token","read":"","write":"",  "hostUrl": "https://github.com/OpsMx//standard-gitops-repo.git", "url": "https://api.bitbucket.org/2.0/" } }')
                  id=$(echo $response | jq '.id')
                   curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v3/spinnaker --data '{"name": "preview-saas", "url": "http://sapor-gate:8084", "authenticationType": "LDAP", "token": "'"${TOKEN}"'", "externalAccountFlag": "true", "pipelinePromotionFlag": "false","syncAccountFlag": "false", externalAccountConfiguration": {"accountId": "'"${id}"'","accountName": "gitops-bitbucket", "provider": "BITBUCKET", "config": {"bucketName": "", "region": "","endPoint": "https://github.com/OpsMx//standard-gitops-repo.git", "sourcePath": " " }}}'

                  break
                else
                  response=$(curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-platform:8095/platformservice/v2/datasources --data '{"datasourceType": "BITBUCKET", "name": "gitops-bitbucket", "spinEnabled": "false", "configurationFields": {"authType":"bearer","username": "git/stash_username","token": "git/stash_token","read":"","write":"", "hostUrl": "https://github.com/OpsMx//standard-gitops-repo.git", "url": "https://api.bitbucket.org/2.0/" } }')
                  id=$(echo $response | jq '.id')
                  curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v3/spinnaker --data '{"name": "preview-saas", "url": "http://sapor-gate:8084", "authenticationType": "LDAP", "token": "'"${TOKEN}"'", "externalAccountFlag": "true", "pipelinePromotionFlag":"false","syncAccountFlag":"false", externalAccountConfiguration": {"accountId": "'"${id}"'","accountName": "gitops-bitbucket", "provider": "BITBUCKET", "config": {"bucketName": "", "region": "","endPoint": "https://github.com/OpsMx//standard-gitops-repo.git", "sourcePath": "" }}}'
                  break
                fi
              fi
              if [[ "$STORAGE_TYPE"  ==  "s3" ]];
              then
                 curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-platform:8095/platformservice/v2/datasources --data '{"datasourceType":"AMAZONS3","name":"gitops-s3","configurationFields":{"access_id":"AWS_ACCESS_KEY_ID","secret_key":"AWS_SECRET_ACCESS_KEY"},"spinnakerNames":[""],"spinEnabled": "false"} }'
                 curl --header "Content-Type: application/json"  --header "x-spinnaker-user: admin" --request POST http://oes-sapor:8085/oes/accountsConfig/v3/spinnaker --data '{"name": "preview-saas", "url": "http://sapor-gate:8084", "authenticationType": "LDAP", "token": "'"${TOKEN}"'" , "externalAccountFlag": "true", "pipelinePromotionFlag":"false", "syncAccountFlag":"false", externalAccountConfiguration": {"accountName": "gitops-s3","config":{"bucketName":"bucket name.e.g-testbucket","region":"regionofbucket","endPoint":""},"provider": "AMAZONS3"}}'
              fi
            else
              echo "Spinnaker is already Integrated"
              break
            fi
        

    else
        if [ $wait_period -gt 2000 ];
        then
            echo \"Script is timed out as the Spinnaker is not ready yet.......\"
            break
        else
            echo \"Waiting for Spinnaker services to be ready\"
            sleep 1m
        fi
    fi
    done
---
# Source: oes/templates/configmaps/isd-feature-flag-config.yml
apiVersion: v1
data:
  feature.yml: |
     feature:
       auth-provider:
         flag: true
         jira: OP-18050
       db-cleanup:
         flag: true
         jira: OP-19921
kind: ConfigMap
metadata:
  labels:
    app: oes
  name: isd-feature-flag-config
---
# Source: oes/templates/forwarder/oes-forwarder-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: opsmx-controller-controller1
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
data:
  configFile: |
    serviceHostname: opsmx-controller-controller1
    agentHostname: controller.exampleopsmx.net
    remoteCommandHostname: controller.exampleopsmx.net
    controlHostname: opsmx-controller-controller1
    #agentAdvertisePort: "443"
    serviceAuth:
      currentKeyName: "public.pem"
      headerMutationKeyName: "public.pem"
    services:
      outgoingServices:
        - name: front50
          type: front50
          enabled: true
          config:
            url: http://spin-front50:8080
        - name: fiat
          type: fiat
          enabled: true
          config:
            url: http://spin-fiat:7003
      incomingServices:  # This part is to be automated in the next version. For now, the agent MUST be called opsmx-agent
        - name: agent-clouddriver
          serviceType: clouddriver
          port: 7002
          useHTTP: true
          destination: opsmx-agent
          destinationService: agent-clouddriver
---
# Source: oes/templates/oes-ssd-opa/oes-ssd-opa-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: oes-ssd-opa
  labels:
    app: ssd
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
    component: oes-ssd-opa
data:
  ssd-opa.yaml: |-
    httpListenPort: 8200
    graphQLAddr: http://graphql-server:8080/query
    reScheduleDays: 20
    reScheduleTime: 00:00
    databases:
      ssd:
        connectString: host=oes-db user='postgres' password='networks123' database=ssddb port=5432
---
# Source: oes/templates/oes-supplychain-api/oes-supplychain-api-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: supplychain-api
  labels:
    app: oes
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
    component: oes-supplychain-api
data:
  supplychain-api.yaml: |-
    graphqlsvc:
        host: http://graphql-server
        port: 8080
    postgresql:
        ssd:
        connectString: host=oes-db user='postgres'  password='networks123' database=ssddb
    toolchain:
        host: http://tool-chain
        port: 8100
---
# Source: oes/templates/oes-supplychain-preprocessor/oes-supplychain-preprocessor-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: supplychain-preprocessor
  labels:
    app: oes 
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
    component: oes-supplychain-preprocessor
data:
  globalConfig.yml: |
    plugins:
      - jenkins
      - spinnaker
    loglevel: info
  jenkinsConfig.yml: |-
    rabbitmq:
      username: 'rabbitmq'
      password: 'Networks123'
      host: rabbitmq-service
      port: 5672
      queue: jenkins-ssd
      exchange: jenkins.events
      bindingKey: jenkins-ssd
  
    postgresql:
      ssddb:
        connectString: host=oes-db user='postgres' password='networks123' database=ssddb port=5432
  spinnakerConfig.yml: "rabbitmq:\n  username: 'rabbitmq'\n  password:
    'Networks123'\n  host: rabbitmq-service\n  port: 5672\n  queue:
    preview-saas-ssd\n  exchange: echo.events\n  bindingKey: preview-saas-ssd\npostgresql:\n
    \ ssddb:\n    connectString: host=oes-db user='postgres' password='networks123' database=ssddb port=5432\n\nguacsvc:\n  host: http://tool-chain\n
    \ port: 8100  \n\npolicysvc:\n  host: http://ssd-opa\n  port: 8200    \n"
---
# Source: oes/templates/oes-toolchain/oes-toolchain-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tool-chain
  labels:
    app: oes
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
    component: oes-toolchain
data:
  tool-chain.yaml: |
    httpListenPort: 8100
    sbomPath: /tools/sbom
    graphQLAddr: http://graphql-server:8080/query
---
# Source: oes/templates/oes-ui/oes-ui-configmap.yaml
apiVersion: v1
data:
  app-config.json: |
    {
        "endPointUrl": "/gate/",
        "setApplicationInterval": 300000,
        "triggerPipeline": false
    }
  help-text.json: "{\n  \"POLICY_LISTING\": {\n    \"HEADER\": \"Policies not found!\",\n
    \   \"BODY\": \"<div><p>Policy Management feature allows you to create policies
    to set guardrails for safe and fine grained controls in CI/CD pipelines.</p> <p>Static
    Policy lets users validate the conditions when creating a pipeline, whereas Runtime
    Policy enables users for automated decision making during pipeline execution.</p>
    <p>A policy defines a set of conditions that must be met.</p> <p>As an example,
    a policy could be created to define a blackout window period (or a moratorium period)
    for performing production deployments. A moratorium period defines the time period
    within which no production deployments should be performed. Any deployment to the
    production environment during this period will automatically be rejected/stopped.</p>
    <p>ISD uses Open Policy Engine(OPA) for policy definition & execution. OPA is a
    open source, general-purpose policy engine that unifies policy enforcement across
    the stack. It uses a high-level declarative language called Rego that lets you specify
    policy as code.</p> <p>Click on <b>New Policy</b> button to create a new policy.</p></div>\"\n
    \ },\n  \"AGENT_LISTING\": {\n    \"HEADER\": \"No Agents found!\",\n    \"BODY\":
    \"<div><p>The Agent allows ISD to reach through firewalls in a secure manner, allowing
    access to private Kubernetes clusters as well as reach internal services such as
    Jenkins and Artifactory. The agent is typically used with OpsMx's SaaS ISD offering,
    where OpsMx hosts the ISD Platform, but services used by the platform are within
    a secure area owned by the customer. One of the core advantages of using an agent
    is that the credentials do not need to be disclosed to anyone i.e. credentials remain
    with-in the cluster where deployment is done.</p> <p>The Agent is a two part system:
    a <b>Controller</b> runs near ISD, and the <b>Agent</b> runs in the target secure
    cluster. The Agent is configured to communicate with specific services (Kubernetes,
    Jenkins etc) within a customer's security domain, while the Controller is in ISD's
    domain.</p> <p>The Agent is deployed using a manifest generated by ISD. This manifest
    has per-installation credentials to authenticate to the controller, controller address
    etc. Services are configured in the Agent by the customer. URL endpoints, CD account
    names and credentials are provided to the agent using a service configuration. The
    credentials never leave the agent's security domain.</p> <p>Click on <b>New Agent</b>
    to create the Agent for your environment. This button is enabled when CD Instance
    is configured in <b>Setup->CD Integration</b>.\"\n  },\n  \"AGENT_CREATION\": {\n
    \   \"HEADER\": \"Agent\",\n    \"BODY\": \"<div><p>Adding an agent involves the
    following steps:</p><ul class='helpTextUI'><li>Enter the details (name, cluster
    and description) and click save</li> <li>Click <b>Download Manifest</b> which appears
    after save</li><li>In the remote Kubernetes cluster, create service configmap in
    the default namespace. Examples are available here: https://github.com/OpsMx/standard-gitops-repo/tree/master/SAMPLES/agent-config</li>
    <li>Apply the downloaded manifest in the default namespace using <b>kubectl apply
    -f <downloaded file></b> ; Note that the agent should be able to reach the Load
    Balancer configured for the agent-grpc service,</li><li>Check the Setup->Agents
    screen for the agent connection status</li></ul></div>\",\n    \"AGENT_NAME\": {\n
    \     \"TOOLTIP\": \"Name of the agent with which it will referred to\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Agent Name cannot be empty\",\n        \"cannotContainSpace\":
    \"Agent Name cannot contain space\",\n        \"noSpecialCharacters\": \"Allowed
    special character is '-'\",\n        \"startingFromNumber\": \"Agent Name should
    not start with number\",\n        \"agentNameExist\": \"Agent Name already exists\"\n
    \     }\n    },\n    \"CLUSTER_NAME\": {\n      \"TOOLTIP\": \"Name of the remote
    cluster on which agent will be installed on\",\n      \"VALIDATION_MESSAGE\": {\n
    \       \"required\": \"Cluster Name cannot be empty\",\n        \"cannotContainSpace\":
    \"Cluster Name cannot contain space\",\n        \"noSpecialCharacters\": \"Allowed
    special character is '-'\",\n        \"startingFromNumber\": \"Cluster Name should
    not start with number\"\n      }\n    },\n    \"DESCRIPTION\": {\n      \"TOOLTIP\":
    \"Short description about the agent\",\n      \"VALIDATION_MESSAGE\": {}\n    },\n
    \   \"CONNECT_TO_SPINNAKER\": {\n      \"TOOLTIP\": \"The spinnaker instance you
    want to associate this account to\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Please select Spinnaker\"\n      }\n    }\n  },\n  \"CLOUDPROVIDER_LISTING\":
    {\n  \"HEADER\": \"No Cloud Targets found!\",\n  \"BODY\": \"<div><p>Cloud Targets
    are integrations to Cloud platforms you deploy your applications to.</p> <p>In this
    section, you’ll register credentials for your Cloud platforms. Those credentials
    are known as Accounts. ISD allows you to create & manage Accounts for different
    Cloud Providers such as AWS, GCP, Kubernetes, etc.</p> <p>When CD instance (Spinnaker)
    is configured for <b>Direct Sync</b>, <b>New Accounts</b> button will not be visible.</p>
    <p><b>New Accounts</b> button will be enabled when CD instance (Spinnaker) is configured
    to use External Accounts in <b>Setup->CD Integration</b>.Click on <b>New Accounts</b>
    button to create an account for your cloud provider. You can create multiple accounts
    for the same provider.</p> <p>Click on <b>Sync Accounts</b> button to sync Cloud
    target accounts with CD Tool</p></div>\"\n  },\n    \"CLOUDPROVIDER_CREATION\":
    {\n      \"HEADER\": \"Cloud Target\",\n      \"BODY\": \"<div><p>Cloud Targets
    are integrations to cloud platforms you deploy your applications to. In this section,
    you’ll register credentials for your cloud platforms. Those credentials are known
    as accounts. ISD allows you to create & manage accounts for different cloud providers
    such as AWS, GCP, Kubernetes, etc.</p><p>You can create multiple accounts for the
    same provider.</p> <p>After saving this configuration, click on 'Sync Accounts'
    button to sync cloud target accounts with CD Tool.</p></div>\",\n      \"AGENT_NAME\":
    {\n        \"TOOLTIP\": \"\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Agent name cannot be empty\",\n          \"cannotContainSpace\": \"Agent name
    cannot contain space\",\n          \"noSpecialCharacters\": \"Allowed special character
    are ',-'\"\n        }\n      },\n      \"CLOUD_PROVIDER\": {\n        \"TOOLTIP\":
    \"The Cloud Target type for which you want to add the account\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Please select Cloud Target\"\n        }\n      },\n
    \     \"SPINNAKER\": {\n        \"TOOLTIP\": \"The Spinnaker instance with which
    this account would be tied to\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Please select Spinnaker\"\n        }\n      },\n      \"ENVIRONMENT\": {\n        \"TOOLTIP\":
    \"The environment name for the account. Many accounts can share the same environment
    (e.g. dev, test, prod)\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Please select Environment\"\n        }\n      },\n      \"CUSTOM_ENVIRONMENT\":
    {\n        \"TOOLTIP\": \"\",\n        \"VALIDATION_MESSAGE\": {\n          \"noSpecialCharacters\":
    \"Environment Name cannot contain special characters\",\n          \"cannotContainSpace\":
    \"Environment Name cannot contain space\",\n          \"required\": \"Environment
    Name cannot be empty\",\n          \"startingFromNumber\": \"Environment Name cannot
    start with number\",\n          \"maxlength\": \"Environment name should not have
    more than 63 characters!\",\n          \"exists\": \"Environment name already exists\"\n
    \       }\n      },\n      \"ACCOUNT_NAME\": {\n        \"TOOLTIP\": \"Name of the
    account to operate on\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Account name cannot be empty\",\n          \"cannotContainSpace\": \"Account name
    cannot contain space\",\n          \"noSpecialCharacters\": \"Allowed special character
    is '-'\",\n          \"startingFromNumber\": \"Account Name cannot start with numbers\"\n
    \       }\n      },\n      \"NAMESPACE\": {\n        \"TOOLTIP\": \"A list of namespaces
    this Spinnaker account can deploy to and will cache (namespaces should be 'coma'
    separated ex: default,dev\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Namespace cannot be empty\",\n          \"cannotContainSpace\": \"Namespace cannot
    contain space\",\n          \"noSpecialCharacters\": \"Special characters not allowed
    except ',-'\"\n        }\n      },\n      \"OMIT_NAMESPACE\": {\n        \"TOOLTIP\":
    \"A list of namespaces this Spinnaker account cannot deploy to or cache\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"\",\n          \"noSpecialCharacters\": \"Special characters
    not allowed except ',-'\"\n        }\n      },\n      \"UPLOAD_KUBECONFIG_FILE\":
    {\n        \"TOOLTIP\": \"The path to your kubeconfig file. By default, it will
    be under the Spinnaker user’s home directory in the typical .kube/config location.\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"File cannot be empty\"\n
    \       }\n      },\n      \"EXECUTE\": {\n        \"TOOLTIP\": \"\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"cannotContainSpace\": \"Execute Permissions cannot contain space\"\n
    \       }\n      },\n      \"ACCOUNT_ID\": {\n        \"TOOLTIP\": \"Your AWS account
    ID to manage. Refer http://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html
    for more information\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Account Id cannot be empty\",\n          \"cannotContainSpace\": \"Account Id
    cannot contain space\"\n        }\n      },\n      \"ROLE\": {\n        \"TOOLTIP\":
    \"If set, Halyard will configure a credentials provider that uses AWS Security Token
    Service to assume the specified role\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Role cannot be empty\",\n          \"cannotContainSpace\": \"Role cannot contain
    space\"\n        }\n      },\n      \"REGIONS\": {\n        \"TOOLTIP\": \"The AWS
    regions this Spinnaker account will manage\",\n        \"VALIDATION_MESSAGE\": {\n
    \         \"required\": \"Region cannot be empty\",\n          \"cannotContainSpace\":
    \"Region cannot contain space\"\n        }\n      },\n      \"PRIMARY_ACCOUNT\":
    {\n        \"TOOLTIP\": \"Whether this account is the primary account? If yes then
    provide the access & secret key details.\",\n        \"VALIDATION_MESSAGE\": {}\n
    \     },\n      \"DYNAMIC_ACCOUNT\": {\n        \"TOOLTIP\": \"If Enabled, this
    account will be added to the spinnaker using External Account Configuration, which
    allows you to load the configurations dynamically without requiring redeployment
    of Clouddriver.\",\n        \"VALIDATION_MESSAGE\": {}\n        },\n      \"ACCESS_KEY\":
    {\n        \"TOOLTIP\": \"The default access key used to communicate with AWS\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"Access key cannot be
    empty\"\n        }\n      },\n      \"ACCESS_KEY_BAKERY\": {\n        \"TOOLTIP\":
    \"The default access key used for AWS bakery configuration\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Access Key (Bakery) cannot be empty\"\n        }\n
    \     },\n      \"SECRET_KEY\": {\n        \"TOOLTIP\": \"The secret key used to
    communicate with AWS\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Secret key cannot be empty\"\n        }\n      },\n      \"SECRET_KEY_BAKERY\":
    {\n        \"TOOLTIP\": \"The default secret key used for AWS baskery configuration\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"Secret Key (Bakery)
    cannot be empty\"\n        }\n      },\n      \"APP_KEY\": {\n        \"TOOLTIP\":
    \"The App Key (password) of your service principal\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"App key cannot be empty\",\n          \"cannotContainSpace\":
    \"App key cannot contain space\"\n        }\n      },\n      \"CLIENT_ID\": {\n
    \       \"TOOLTIP\": \"The Client Id (also called appId) of your service principal\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"Client Id cannot be
    empty\",\n          \"cannotContainSpace\": \"Client Id cannot contain space\"\n
    \       }\n      },\n      \"AZURE_REGIONS\": {\n        \"TOOLTIP\": \"The Azure
    regions this Spinnaker account will manage\",\n        \"VALIDATION_MESSAGE\": {\n
    \         \"required\": \"Region cannot be empty\",\n          \"cannotContainSpace\":
    \"Region cannot contain space\"\n        }\n      },\n      \"DEFAULT_KEYVALUT\":
    {\n        \"TOOLTIP\": \"The name of a Key Vault that contains the user name, password,
    and ssh public key used to create VMs\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Default Keyvault cannot be empty\",\n          \"cannotContainSpace\": \"Default
    Keyvault cannot contain space\"\n        }\n      },\n      \"SUBSCRIPTION_ID\":
    {\n        \"TOOLTIP\": \"The subscriptionId that your service principal is assigned
    to\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\": \"Subscription
    Id cannot be empty\",\n          \"cannotContainSpace\": \"Subscription Id cannot
    contain space\"\n        }\n      },\n      \"TENANT_ID\": {\n        \"TOOLTIP\":
    \"The tenantId that your service principal is assigned to\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Tenant Id cannot be empty\",\n          \"cannotContainSpace\":
    \"Tenant Id cannot contain space\"\n        }\n      },\n      \"DEFAULT_RESOURCE_GROUP\":
    {\n        \"TOOLTIP\": \"The default resource group to contain any non-application
    specific resources.\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Default Resouce Group cannot be empty\",\n          \"cannotContainSpace\": \"Default
    Resouce Group cannot contain space\"\n        }\n      },\n      \"OBJECT_ID\":
    {\n        \"TOOLTIP\": \"The objectId of your service principal. This is only required
    if using Packer to bake Windows images.\",\n        \"VALIDATION_MESSAGE\": {\n
    \         \"required\": \"Object Id cannot be empty\",\n          \"cannotContainSpace\":
    \"Object Id cannot contain space\"\n        }\n      },\n      \"PACKER_RESOURCE_GROUP\":
    {\n        \"TOOLTIP\": \"The resource group to use if baking images with Packer\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"Packer Resouce Group
    cannot be empty\",\n          \"cannotContainSpace\": \"Packer Resouce Group cannot
    contain space\"\n        }\n      },\n      \"PACKER_STORAGE_ACCOUNT\": {\n        \"TOOLTIP\":
    \"The storage account to use if baking images with Packer.\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Packer Storage Account cannot be empty\",\n          \"cannotContainSpace\":
    \"Packer Storage Account cannot contain space\"\n        }\n      },\n      \"SSH_PUBLIC_KEY\":
    {\n        \"TOOLTIP\": \"Whether to use SSH public key to provision the linux vm.
    The default value is true which means using the ssh public key.\",\n        \"VALIDATION_MESSAGE\":
    {\n        }\n      },\n      \"GCP_FILE\": {\n        \"TOOLTIP\": \"Upload the
    kubeconfig file. By default, it will be under the user’s home directory in the typical
    .kube/config location\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"File cannot be empty\"\n        }\n      },\n      \"AWS_ACCOUNT_NAME\": {\n        \"TOOLTIP\":
    \"Please select a valid AWS account. Do note that the Amazon ECS account will use
    credentials from the corresponding AWS account. If you do not see a valid AWS account
    in the dropdown, please create one from Cloud targets -> New Account\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Please Select AWS Account\"\n        }\n      },\n
    \     \"PROJECT_NAME\": {\n        \"TOOLTIP\": \"Name of your Google Cloud project\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"Project Name cannot
    be empty\"\n        }\n      }\n    },\n  \"SPINNAKER_LISTING\": {\n    \"HEADER\":
    \"No Spinnaker Configured!\",\n    \"BODY\": \"<div><p>CD Integration page allows
    you to connect to a CD instance. This enables ML based verification, Policy enforcement,
    Informed Approvals, etc.</p><p>Click on the <b>New CD Integration</b> button to
    connect to a CD instance. Only one instance is supported.</p></div>\"\n  },\n  \"SPINNAKER_SETUP\":
    {\n    \"HEADER\": \"Spinnaker\",\n    \"BODY\": \"<p>In this page you can add /
    update information about your CD instance.</p> <p><strong>Fields:</strong></p> <ul
    class='helpTextUI'> <li><strong>CD Name</strong>: User defined name for CD instance.<br><span>
    Example: opsmx-spinnaker</span></li> <li><strong>CD URL</strong>: Gate URL of the
    CD instance.<br> <span>Example: https://spinnaker-gate.xyz.com or http://oes-gate:8084</span></li>
    <li><strong>Authentication Type:</strong>: Can be LDAP or X509; for AD, use LDAP</li>
    <li><strong>Token: </strong> This is used when Authentication Type is LDAP; username
    & password to LDAP server separated by <b>:</b> in base64 format; Output of 'echo
    -ne 'username:password' | base64 -w0'</li> <li><strong>Password: </strong>This is
    used when Authentication Type is X509; Password for P12 File</li> <li><strong>P12
    File:</strong> This is used when Authentication Type is X509; P12 File needed for
    X509 Authentication</li></ul><p>GitOps style Spinnaker is suported where in all
    configuration is maintained in a repository such as git. These optional sections
    help configure gitOps style Spinnaker:</p><ul class='helpTextUI'><li><strong>Source
    Control for Accounts: </strong>You can specify the repository for External configuration
    in Spinnaker</li> <li><strong>Source Control for Pipeline: </strong>You can specify
    the repository for pipeline gitOps that allows you to save and restore pipelines
    from a git repository</li></ul>\",\n    \"ACCOUNT_CREATION_INFO\": \"The CD name
    should be the same as the Spinnaker name configured in echo-local.yml\",\n    \"ACCOUNT_CREATION_ADDITIONAL_INFO\":
    \"<p></p><p>Adding a Spinnaker instance with CD Name different than the Spinnaker
    name configured in <i>echo-local.yml</i> will require a manual update to the <i>echo-local.yml</i>
    and a <i>hal deploy apply</i>. This change is required to allow publishing Spinnaker
    events to RabbitMQ.</p>\",\n    \"SPINNAKER_NAME\": {\n      \"TOOLTIP\": \"Name
    of the Spinnaker instance\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"CD Name cannot be empty\",\n        \"cannotContainSpace\": \"CD Name cannot contain
    space\",\n        \"noSpecialCharacters\": \"Allowed special character is '-'\",\n
    \       \"startingFromNumber\": \"CD Name should not start with number\"\n      }\n
    \   },\n    \"SPINNAKER_GATE_URL\": {\n      \"TOOLTIP\": \"Gate Url of the Spinnaker
    instance\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"CD Gate URL
    cannot be empty\",\n        \"cannotContainSpace\": \"CD Gate URL cannot contain
    space\",\n        \"invalidUrl\": \"CD Gate URL is invalid\"\n      }\n    },\n
    \   \"AUTHENTICATION_TYPE\": {\n      \"TOOLTIP\": \"Select the type of authentication
    for the spinnaker being added\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Please select Authentication Type\"\n      }\n    },\n    \"LDAP_USERNAME\": {\n
    \     \"TOOLTIP\": \"User Name\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"User Name cannot be empty\",\n        \"minlength\": \"User Name should be more
    than 4 characters\"\n      }\n    },\n    \"LDAP_PASSWORD\": {\n      \"TOOLTIP\":
    \"Password\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Password
    cannot be empty\",\n        \"minlength\": \"Password should be more than 8 characters\"\n
    \     }\n    },\n    \"TOKEN\": {\n      \"TOOLTIP\": \"Token for Spinnaker authentication\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Token cannot be empty\",\n
    \       \"minlength\": \"Token should be more than 8 characters\"\n      }\n    },\n
    \   \"PASSWORD\": {\n      \"TOOLTIP\": \"Password\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Password cannot be empty\",\n        \"minlength\": \"Password
    should be more than 8 characters\"\n      }\n    },\n    \"P12_FILE\": {\n      \"TOOLTIP\":
    \"P12 File\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"P12 File
    cannot be empty\"\n      }\n    },\n    \"SYNC_ACCOUNTS\": {\n      \"TOOLTIP\":
    \"Select Mode of synchronisation of Cloud Targets between Autopilot & Spinnaker\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Please select Sync Accounts
    type\"\n      }\n    },\n    \"ACCOUNTS_PROVIDER\": {\n      \"TOOLTIP\": \"Source
    Control for Halyard Configuration and / or External Account Configuration\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Please select provider\"\n      }\n    },\n    \"ACCOUNTS_ACCOUNT_NAME\":
    {\n      \"TOOLTIP\": \"Account name of the Source Control\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Please select Account Name\"\n      }\n    },\n    \"ACCOUNTS_REPOSITORY\":
    {\n      \"TOOLTIP\": \"Repository name with full path in the selected Source Control
    Eg., https://github.com/OpsMx/Opsmx-Saas.git\",\n      \"VALIDATION_MESSAGE\": {\n
    \       \"required\": \"Repository cannot be empty\",\n        \"cannotContainSpace\":
    \"Repository cannot contain space\",\n        \"invalidUrl\": \"Repository is invalid\"\n
    \     }\n    },\n    \"ACCOUNTS_SOURCE_PATH\": {\n      \"TOOLTIP\": \"Existing
    path in the repository\",\n      \"VALIDATION_MESSAGE\": {}\n    },\n    \"ACCOUNTS_REGION\":
    {\n      \"TOOLTIP\": \"The AWS regions this Spinnaker account will manage\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Region cannot be empty\",\n
    \       \"cannotContainSpace\": \"Region cannot contain space\",\n        \"startingFromNumber\":
    \"Region should not start with number\"\n      }\n    },\n    \"ACCOUNTS_BUCKET_NAME\":
    {\n      \"TOOLTIP\": \"Bucket Name\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Bucket Name cannot be empty\",\n        \"cannotContainSpace\": \"Bucket Name
    cannot contain space\",\n        \"startingFromNumber\": \"Bucket Name should not
    start with number\"\n      }\n    },\n    \"PIPELINE_PROVIDER\": {\n      \"TOOLTIP\":
    \"Use this Spinnaker for pipeline promotion.\",\n      \"VALIDATION_MESSAGE\": {\n
    \       \"required\": \"Please select provider\"\n      }\n    },\n    \"PIPELINE_ACCOUNT_NAME\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Please select Account Name\"\n      }\n    },\n    \"PIPELINE_REPOSITORY\": {\n
    \     \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Repository cannot be empty\",\n        \"cannotContainSpace\": \"Repository cannot
    contain space\",\n        \"invalidUrl\": \"Repository is invalid\"\n      }\n    },\n
    \   \"PIPELINE_SOURCE_PATH\": {\n      \"TOOLTIP\": \"Existing path in the repository\",\n
    \     \"VALIDATION_MESSAGE\": {}\n    },\n    \"PIPELINE_REGION\": {\n      \"TOOLTIP\":
    \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Region cannot be
    empty\",\n        \"cannotContainSpace\": \"Region cannot contain space\",\n        \"startingFromNumber\":
    \"Region should not start with number\"\n      }\n    },\n    \"PIPELINE_BUCKET_NAME\":
    {\n      \"TOOLTIP\": \"Bucket Name\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Bucket Name cannot be empty\",\n        \"cannotContainSpace\": \"Bucket Name
    cannot contain space\",\n        \"startingFromNumber\": \"Bucket Name should not
    start with number\"\n      }\n    }\n  },\n  \"INTEGRATOR_LISTING\": {\n    \"HEADER\":
    \"No Integrator found!\",\n    \"BODY\": \"<div><p>ISD offers integration with many
    CI/CD Tools. Integrations are grouped under the following categories - Artifact,
    CI, Governance, Monitoring Tools, Notifications, Policy and SAST/DAST.</p> <p>Integrations
    are used to</p> <ul><li>pull logs & metrics for Continuous Verification</li><li>pull
    meta data from CI/CD Tools for Informed Approvals</li><li>enforce organizational
    policies at the time of creation or execution of a pipeline</li><li>configure Artifacts,
    Cloud Providers etc.</li><p>Click on the <b<New Integration</b> button to start
    integrating your tools </p></div>\",\n    \"SYNC_SPINNAKER_ACCOUNTS\": {\n      \"TOOLTIP\":
    \"Push Integration changes to Spinnaker\",\n      \"VALIDATION_MESSAGE\": \"\"\n
    \   }\n  },\n  \"PIPELINE_EXECUTION_AUDIT_LISTING\": {\n    \"HEADER\": \"Pipeline
    executions not found!\",\n    \"BODY\": \"<div>This page shows pipeline executions
    coming from a CD Tool such as Spinnaker in a list view. It also contains the summary
    view showing the total number of Pipeline Runs, Successful Runs, Failed Runs, Cancelled
    Runs.</p> <p> Only important fields including Application, Service, Pipeline, Status,
    Start Time and End Time are shown by default. Additional fields can be enabled using
    the Hamburger menu towards the right corner.</p></div>\",\n    \"TOOLTIP\": {\n
    \     \"EXECUTION_DATA\": \"Pipeline is in Running State\",\n      \"CONNECTOR_DATA\":
    \"Pipeline is in Running State\",\n      \"STAGE_DURATION\": \"Pipeline is in Running
    State\"\n    },\n    \"VALIDATION_MESSAGE\": {\n      \"STAGE_DURATION\": \"No Data
    available to view Stage Duration\",\n      \"PIPELINE_NOT_EXISTS\" : \"Execution
    details not found.\"\n    }\n  },\n  \"PIPELINE_AUDIT_LISTING\": {\n    \"HEADER\":
    \"Pipeline updates not found!\",\n    \"BODY\": \"<div>This page shows pipeline
    updates coming from a CD Tool such as Spinnaker in a list view.</div>\"\n  },\n
    \ \"POLICY_AUDIT_LISTING\": {\n    \"HEADER\": \"Policy updates / executions not
    found!\",\n    \"BODY\": \"<div><p>This page shows policy updates and policy executions,
    along with allowed/denied information, in a list view. Possible uses, apart from
    audit and compliance, includes helping users understand the policies that they might
    be inadvertently trying to break.</p><p>For policy updates, ensure that a policy
    is created/updated under <strong><a routerLink='/policymanagement'>Setup -> Policies</a></strong>.
    For policy execution events, please add a policy stage in a pipeline and execute
    it.</div>\"\n  },\n  \"POLICY_CREATION\": {\n    \"HEADER\": \"Policy\",\n    \"BODY\":
    \"<p>In this page, you can define & manage policies.</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li> <strong>Name:</strong> User defined name for the policy</li><li><strong>Policy
    Type:</strong> Static Policy lets users validate the conditions when creating a
    pipeline, whereas Runtime Policy enables users for automated decision making during
    pipeline execution.</li><li> <strong>Policy Engine:</strong> Policy Engine to be
    used; currently, only OPA is supported</li> <li><strong>Policy Engine Account:</strong>
    Policy Engine Account for the Credentials. You can manage accounts from Setup ->
    Integrations -> Policy </li> <li><strong>Policy File:</strong> File containing the
    Policy You can upload the file by clicking on <strong>Choose File</strong> button.
    This is optional. If not present, you can enter the policy directly in the <strong>Policy
    Details</strong> field</li><li> <strong>Policy Details:</strong> Policy definition</li>
    <li><strong>Policy Permissions:</strong>Enable/disable access to the policy in Autopilot
    to specific usergroups</li></ul>\",\n    \"NAME\": {\n      \"TOOLTIP\": \"Policy
    Name\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Name cannot be
    empty\",\n        \"cannotContainSpace\": \"Name cannot contain space\",\n        \"exists\":
    \"Name already exists\"\n      }\n    },\n    \"POLICY_DETAILS\": {\n      \"TOOLTIP\":
    \"Define your policy using the rego language\",\n      \"VALIDATION_MESSAGE\": {\n
    \       \"required\": \"Policy Details cannot be empty\"\n      }\n    },\n    \"POLICY_ENGINE\":
    {\n      \"TOOLTIP\": \"Supported Policy Account Types\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Please select Policy Account Type\"\n      }\n    },\n
    \   \"POLICY_ENGINE_ACCOUNT\": {\n      \"TOOLTIP\": \"Policy Account Names\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Please select Policy Engine
    Account\"\n      }\n    },\n    \"POLICY_TYPE\": {\n      \"TOOLTIP\": \"A static
    policy lets users validate conditions before the start of execution, whereas a Runtime
    policy enables users for automated decision making during execution.\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Please select Policy Engine Type\"\n      }\n    },\n
    \   \"POLICY_DESCRIPTION\": {\n      \"TOOLTIP\": \"Optional Description for the
    policy\"\n    },\n    \"POLICY_FILE\": {\n      \"TOOLTIP\": \"File containing the
    Policy. You can upload the file by clicking on 'Choose File' button. This is optional.
    If not present, you can enter the policy directly in the 'Policy Details' field\"\n
    \   }\n  },\n  \"VERIFICATION\": {\n    \"HEADER\": \"Verification Gate executions
    not found!\",\n    \"BODY\": \"<div><p>This page shows Verification Gate executions
    in a list view.</p> <p>The Continuous Verification performs automated log and metrics
    analysis for new releases with built-in unsupervised and supervised machine learning
    algorithms for risk analysis and canary deployments.</p><p>Continuous Verification
    is a release verification process that provides Dev and Ops engineers an intelligent
    automated real-time actionable risk assessment of a new release deployed. The Continuous
    Verification verifies the latest version of the service comparing to the baseline
    or prior release after production rollout. The baseline can be a deployment done
    prior or the current deployment during rollout using canary or blue/green or rolling
    update strategies.</p> <p>It leverages unsupervised and supervised machine learning
    techniques to analyze 100s of metrics and logs data to perform in-depth analysis
    of architectural regressions, performance, scalability and security violations of
    new releases in a scalable way for enterprises.</p> <p>ISD provides a Verification
    Gate to analyze logs from your Target Application and this can be inserted as a
    Stage in your CI/CD Pipeline. Note that one must configure the metric and log datasources,
    such as Prometheus and Elastic before using this functionality.</p> <p>Insert Verification
    Gate to a pipeline in your application using <b>Pipeline Builder -> Add Stage</b>.
    When the pipeline is run, the Gate executions will start appearing in this page.</p></div>\",\n
    \   \"LOG_ANALYSIS\": {\n      \"BODY\": \"\",\n      \"SENSITIVITY\": {\n        \"TOOLTIP\":
    \"Impact of Unexpected Issues on the log scoring\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"PERCEIVED_RISK\": {\n        \"TOOLTIP\": \"The overall risk
    associated with changes made in this verification run\",\n        \"VALIDATION_MESSAGE\":
    {}\n      }\n    },\n    \"ANALYSIS_SUMMARY\": {\n      \"LOG_TEMPLATE\": {\n        \"TOOLTIP\":
    \"Log template for the verification run\",\n        \"VALIDATION_MESSAGE\": {}\n
    \     },\n      \"METRIC_TEMPLATE\": {\n        \"TOOLTIP\": \"Metric template for
    the verification run\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"LOG_BASELINE_START_TIME\":
    {\n        \"TOOLTIP\": \"Start time of the canary analysis for Baseline\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"LOG_BASELINE_END_TIME\": {\n        \"TOOLTIP\": \"End  time
    of the canary analysis for Baseline\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"LOG_NEW_RELEASE_START_TIME\": {\n        \"TOOLTIP\": \"Start time of the
    canary analysis for New Release\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"LOG_NEW_RELEASE_END_TIME\": {\n        \"TOOLTIP\": \"End  time of the canary
    analysis for New Release\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"ANALYSIS_TYPE\":
    {\n        \"TOOLTIP\": \"The type of verification analysis done, can be metric,
    log or both metric and log analysis\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"LOG_STATUS\": {\n        \"TOOLTIP\": \"The current status of the log analysis\",\n
    \       \"VALIDATION_MESSAGE\": {}\n      },\n      \"LOG_SCORE\": {\n        \"TOOLTIP\":
    \"The overall score of the current log analysis report\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"METRIC_STATUS\": {\n        \"TOOLTIP\": \"The current status
    of the metric analysis\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"METRIC_SCORE\":
    {\n        \"TOOLTIP\": \"The overall score of the current metric analysis report\",\n
    \       \"VALIDATION_MESSAGE\": {}\n      },\n      \"BASELINE_SIZE\": {\n        \"TOOLTIP\":
    \"The size of the file with the Baseline logs\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"NEW_RELEASE_SIZE\": {\n        \"TOOLTIP\": \"The size of
    the file with the New Release logs\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"BASELINE_LINES\": {\n        \"TOOLTIP\": \"The number of log lines for
    the Baseline\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"NEW_RELEASE_LINES\":
    {\n        \"TOOLTIP\": \"The number of log lines for the New Release\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"ANALYSIS_DURATION\": {\n        \"TOOLTIP\": \"The time taken
    to perform the current verification run\",\n        \"VALIDATION_MESSAGE\": {}\n
    \     },\n      \"LIFETIME_HOURS\": {\n        \"TOOLTIP\": \"The duration for which
    the canary analysis was performed, 1 lifetime hour is equal to 1 hour.\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"LIFETIME_MINUTES\": {\n        \"TOOLTIP\": \"Minutes to let
    the analysis run before making a final determination\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"RECLASSIFICATION_DURATION\": {\n        \"TOOLTIP\": \"The
    time taken to perform reclassification\",\n        \"VALIDATION_MESSAGE\": {}\n
    \     },\n      \"INTERVAL_MINUTES\": {\n        \"TOOLTIP\": \"The Lifetime hours
    in minutes\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"REGULAR_EXPRESSION\":
    {\n        \"TOOLTIP\": \"A sequence of characters to specify the search pattern\",\n
    \       \"VALIDATION_MESSAGE\": {}\n      },\n      \"RESPONSE_KEY\": {\n        \"TOOLTIP\":
    \"Field name in the index where the regular expression is to be searched\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"SCORING_ALGORITHM\": {\n        \"TOOLTIP\": \"Scoring Algorithm
    for the risk analysis\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"BASELINE_LOGS\":
    {\n        \"TOOLTIP\": \"View the Baseline logs\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"NEW_RELEASE_LOGS\": {\n        \"TOOLTIP\": \"View the New
    Release logs\",\n        \"VALIDATION_MESSAGE\": {}\n      }\n    },\n    \"METRIC_ANALYSIS\":
    {\n      \"BODY\": \"\"\n    },\n    \"CORRELATION\": {\n      \"BODY\": \"\"\n
    \   }\n  },\n  \"MANUAL_TRIGGER\": {\n    \"BODY\": \"<p>Continuous Verification
    is a REST service that can be deployed on premise or use managed cloud service for
    analysis. Continuous Verification interfaces with monitoring systems for logs and
    metrics and uses the metadata provided in start analysis phase to retrieve the logs
    and metrics for deployment verification. Continuous Verification does not interface
    with the services deployed directly for its analysis.            Deployment Pipeline
    can be based on Spinnaker or Jenkins for Enterprise Continuous Delivery. Verification
    can also be triggered manually by providing the required parameters in this dialog
    box.</p>\",\n    \"APPLICATION\": {\n      \"TOOLTIP\": \"Name of the application\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"BASELINE_START_TIME\": {\n      \"TOOLTIP\":
    \"Time to enable warming up of the container\",\n      \"VALIDATION_MESSAGE\": \"\"\n
    \   },\n    \"NEW_RELEASE_START_TIME\": {\n      \"TOOLTIP\": \"Intervals in which
    metric-data is fetched and analysed\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n
    \   \"SUCCESSFUL_SCORE\": {\n      \"TOOLTIP\": \"The score under which the Analysis
    should fail\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"UNHEALTHY_SCORE\":
    {\n      \"TOOLTIP\": \"The score above which the Analysis should be a pass\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"ANALYSIS_LIFETIME\": {\n      \"TOOLTIP\":
    \"The time in hours for which the Canary Analysis should be run\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"RUN_INFO\": {\n      \"TOOLTIP\": {\n        \"Build Info\":
    \"http://jenkins.opsmx.net:8181/jenkins/job/Dev-visibilityservice-build-branch/770/\",\n
    \       \"Code Repository\": \"https://github.com/OpsMx/visibility-service\",\n
    \       \"Version\": \"v1.09\"\n      },\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n
    \   \"SERVICE\": {\n      \"TOOLTIP\": \"Service\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"TEMPLATE_NAME\": {\n      \"TOOLTIP\": \"Template Name\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"GATE\": {\n      \"TOOLTIP\":
    \"Gate\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"FILTER_KEY\": {\n      \"TOOLTIP\":
    \"Filter Key\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"BASELINE\": {\n
    \     \"TOOLTIP\": \"Baseline\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"NEW_RELEASE\":
    {\n      \"TOOLTIP\": \"New Release\",\n      \"VALIDATION_MESSAGE\": \"\"\n    }\n
    \ },\n  \"TEST_VERIFICATON\": {\n    \"HEADER\": \"Test Verification Gate executions
    not found!\",\n    \"BODY\": \"<div> <p>The Continuous Verification performs automated
    log and metric analysis for new releases with built-in unsupervised and supervised
    machine learning algorithms for risk analysis. Autopilot provides a Test Verification
    Gate to analyse logs from your Test Harness and this can be inserted as a Stage
    in your CI/CD Pipeline. </p>     <p>This page shows Test Verification Gate executions
    in a list view. </p> <p>Insert Test Verification Gate to a pipeline in your application
    using <a [routerLink]='['/setup/applications']'><strong>Setup -> Applications</strong></a>.When
    the pipeline is run, the Gate executions will start appearing in this page.</p>
    </div>\"\n  },\n  \"TEST_CASE\": {\n    \"HEADER\": \"Test Cases not found!\",\n
    \   \"BODY\": \"<div> <p>The Continuous Verification performs automated log and
    metric analysis for new releases with built-in unsupervised and supervised machine
    learning algorithms for risk analysis. Autopilot provides a Test Verification Gate
    to analyse logs from your Test Harness and this can be inserted as a Stage in your
    CI/CD Pipeline. </p>     <p>This page shows Test Cases in a list view. </p> <p>Insert
    Test Verification Gate to a pipeline in your application using <a [routerLink]='['/setup/applications']'><strong>Setup
    -> Applications</strong></a>.When the pipeline is run, the Gate executions will
    start appearing in this page.</p> </div>\"\n  },\n  \"VISIBILITY_LISTING\": {\n
    \   \"HEADER\": \" <div><span style='font-size: 16px; font-weight: bold;'>Approval
    Gate executions not found!</span></div>\",\n    \"BODY\": \"<div><p>This page shows
    Approval Gate executions in a list view.</p> <p>ISD provides <b>approval</b> mechanism
    for deployments. To make an informed decision regarding pipeline execution, an approver
    may need to check the data from multiple data sources, such as CI Systems, Repositories,
    SAST/DAST Tools etc. ISD provides Approval Gate feature which fetches relevant information
    from multiple CI/CD Tools and presents the data in one place, to enable the user
    to make an quick and informed decision on pipeline execution. This Gate can be inserted
    as a Stage in your CI/CD Pipeline.</p> <p>Note that appropriate data sources must
    be configured in the <b>Setup -> Integration</b> view before Approval stage can
    be used.</p> <p>Insert Approval Gate to a pipeline in your application using <b>Pipeline
    Builder -> Add Stage</b>. When the pipeline is run, the Gate executions will start
    appearing in this page.</p></div>\"\n  },\n  \"VISIBILITY_DETAILS\": {\n    \"APPLICATION_NAME\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"SERVICE_NAME\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"APPROVAL_BTN_TITLE\":
    {\n      \"TOOLTIP\": \"Insufficient Permission to execute\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"GATE_NAME\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"STATUS\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"COMMENT\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"TRIGGER_URL\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"APPROVAL_GROUP\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"CONNECTORS\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"ACTIVATED_TIME\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"REVIEWED_AT\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"REVIEWER\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"COMMENTS\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    }\n  },\n  \"FORM_GRID\": {\n    \"ADD_NEW_ROW\": {\n      \"TOOLTIP\":
    \"Add New Row\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"DELETE_ROW\":
    {\n      \"TOOLTIP\": \"Delete row\",\n      \"VALIDATION_MESSAGE\": \"\"\n    }\n
    \ },\n  \"APPLICATION_DASHBOARD\": {\n    \"VERIFICATION_FAILURES\": {\n      \"TOOLTIP\":
    \"Total number of Verification Failures including Test Verification Failures\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    }\n  },\n  \"APPLICATION_LISTING\": {\n
    \   \"HEADER\": \"No applications were found to match your filter!\",\n    \"BODY\":
    \"\",\n    \"PLACEHOLDER\": \"You don't have access to this Page. Please contact
    your Administrator\",\n    \"SYNC_SPINNAKER\": {\n      \"TOOLTIP\": \"To be able
    to work on applications created in Spinnaker, you need to import them here\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"SYNC_SPINNAKER_NOT_CONFIGURED\":
    {\n      \"TOOLTIP\": \"Configure Spinnaker to Sync Spinnaker Applications from
    here\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"SYNC_SPINNAKER_ERROR\":
    {\n      \"TOOLTIP\": \"Could not fetch Spinnaker Details. Please contact Administrator\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"DISABLE_CREATE_APPLICATION_BTN\":
    {\n      \"TOOLTIP\": \"You do not have permission to create Application\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    }\n  },\n  \"START_DEPLOYMENT\": {\n    \"APPLICATION_NAME\": {\n      \"TOOLTIP\":
    \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Application Name
    is required\",\n        \"empty\": \"Please create Spinnaker Application to continue\"\n
    \     }\n    },\n    \"SERVICE_NAME\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Service Name is required\",\n        \"empty\": \"Pipelines
    are not present for this Application\"\n      }\n    },\n    \"START_DEPLOYMENT_BTN\":
    {\n      \"TOOLTIP\": \"Please create Spinnaker Application to 'Start New Deployment'\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Service Name is required\"\n
    \     }\n    }\n  },\n  \"APPLICATION_DETAILS\": {\n    \"HEADER\": \"Application
    Details\",\n    \"BODY\": \"<ul class='helpTextUI'><li><strong>Application Name</strong>:
    User defined name of the application</li> <li><strong>Description</strong>: Application
    description</li> <li><strong>Email ID</strong>: Your email id</li></ul>\",\n    \"APPLICATION_NAME\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"exists\":
    \"Application already exists\",\n        \"noSpecialCharacters\": \"Application
    Name cannot contain special characters\",\n        \"cannotContainSpace\": \"Application
    Name cannot contain space\",\n        \"required\": \"Application Name cannot be
    empty\",\n        \"startingFromNumber\": \"Application Name cannot start with numbers\",\n
    \       \"maxlength\": \"Application name should not have more than 63 characters!\"\n
    \     }\n    },\n    \"APPLICATION_DESCRIPTION\": {\n      \"TOOLTIP\": \"\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"EMAIL_ID\": {\n      \"TOOLTIP\":
    \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"email\": \"Email Id is invalid\",\n
    \       \"required\": \"Email Id cannot be empty\"\n      }\n    }\n  },\n  \"SERVICE_DETAILS\":
    {\n    \"HEADER\": \"Services\",\n    \"BODY\": \"<p>An Application can contain
    multiple services. A service can contain multiple pipelines. When a Service is created,
    a Pipeline with the same name is created automatically. You can add more pipelines
    by clicking on '+' symbol in <strong>Service Pipeline</strong></p>\",\n    \"SERVICE_NAME\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"exists\":
    \"Service already exists\",\n        \"noSpecialCharacters\": \"Service Name cannot
    contain special characters\",\n        \"cannotContainSpace\": \"Service Name cannot
    contain space\",\n        \"required\": \"Service Name cannot be empty\",\n        \"startingFromNumber\":
    \"Service Name cannot start with number\",\n        \"maxlength\": \"Service name
    should not have more than 63 characters!\"\n      }\n    },\n    \"SERVICE_PIPELINE\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"ADD_NEW_SERVICE\":
    {\n      \"TOOLTIP\": \"Add a new Service\",\n      \"VALIDATION_MESSAGE\": \"\"\n
    \   },\n    \"SHOW_OR_HIDE_SERVICE\": {\n      \"TOOLTIP\": \"Show/Hide this service
    in the deployment dashboard\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"DELETE_PIPELINE_ICON\":
    {\n      \"TOOLTIP\": \"Delete Pipeline from Service\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"DELETE_PERMISSION\": {\n      \"TOOLTIP\": \"Insufficient Permission
    to Delete this Service\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"DELETE_SERVICE\":
    {\n      \"TOOLTIP\": \"Service can be deleted on deleting pipelines\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    }\n  },\n  \"GROUP_PERMISSION\": {\n    \"APP_PERMISSIONS\": {\n      \"TOOLTIP\":
    \"Authorization definition for this Application\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"groupValid\": \"Groups cannot be empty\",\n        \"permissionsValid\":
    \"Atleast 1 permission should be assigned to the groups\",\n        \"allPermissionForOneGroup\":
    \"Atleast 1 group should have all permissions\"\n      }\n    },\n    \"INTEGRATORS_PERMISSIONS\":
    {\n      \"TOOLTIP\": \"Configure specific user group’s access to this integration.\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"CLOUD_PROVIDER_PERMISSIONS\":
    {\n      \"TOOLTIP\": \"Authorization definition for this Cloud Targets\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"AGENT_PERMISSIONS\": {\n      \"TOOLTIP\": \"Authorization definition
    for this Agent\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"POLICY_PERMISSIONS\":
    {\n      \"TOOLTIP\": \"Authorization definition for this Policy\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"ADD_GROUP\": {\n      \"TOOLTIP\": \"Add New Group\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"DELETE\": {\n      \"TOOLTIP\": \"Delete\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    }\n  },\n  \"GATE_DETAILS\": {\n    \"HEADER\": \"Gate Configuration\",\n
    \   \"BODY\": \"<p>Select Gates from <strong>Existing Gates</strong> dropdown to
    load Gate Configuration and to add new Gate Configuration click the <strong>Add
    New Gate</strong> button</p> <p>Autopilot has the following Gate Types</p> <ul class='helpTextUI'>
    <li><strong>Approval</strong>: Fetches relevant information from multiple CI/CD
    Tools, presents the data in one place, to enable the user to make quick and informed
    decision on pipeline execution</li> <li><strong>Verification</strong>: Analyze logs
    & metrics from your target application to evaluate the risk in software delivery</li>
    <li><strong>Test Verification</strong>: Analyze logs from your Test Harness to evaluate
    the risk in software delivery</li>  <li><strong>Policy</strong>: Defines a set of
    conditions that need to be verified while creating or executing a CI/CD pipeline</li>
    </ul>\",\n    \"PIPELINE\": {\n      \"TOOLTIP\": \"Shows the structure of how the
    Gates are stacked in the Pipeline\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n
    \   \"TYPE\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": \"\"\n
    \   },\n    \"EXISITING_GATE\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"ENVIRONMENT\": {\n      \"TOOLTIP\": \"Specify Environment for
    this Gate\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Environment
    Name is Invalid\"\n      }\n    },\n    \"CUSTOM_ENVIRONMENT_NAME\": {\n      \"TOOLTIP\":
    \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"noSpecialCharacters\": \"Environment
    Name cannot contain special characters\",\n        \"cannotContainSpace\": \"Environment
    Name cannot contain space\",\n        \"required\": \"Environment Name cannot be
    empty\",\n        \"startingFromNumber\": \"Environment Name cannot start with number\",\n
    \       \"maxlength\": \"Environment name should not have more than 63 characters!\",\n
    \       \"exists\": \"Environment name already exists\"\n      }\n    },\n    \"GATE_NAME\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"exists\":
    \"Gate already exists\",\n        \"noSpecialCharacters\": \"Gate Name cannot contain
    special characters\",\n        \"cannotContainSpace\": \"Gate Name cannot contain
    space\",\n        \"required\": \"Gate Name cannot be empty\",\n        \"startingFromNumber\":
    \"Gate Name cannot start with number\",\n        \"maxlength\": \"Gate name should
    not have more than 63 characters!\"\n      }\n    },\n    \"DEPENDS_ON\": {\n      \"TOOLTIP\":
    \"This field determines the placement of the current Gate in the Pipeline. This
    field is not required if there are no Stages in the Pipeline\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Depends On cannot be empty\"\n      }\n    },\n    \"CONNECTOR\":
    {\n      \"TOOLTIP\": \"Tool to gather information for informed Approvals\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Please select Connector\"\n      }\n    },\n    \"ACCOUNT\":
    {\n      \"TOOLTIP\": \"Account name of the connector\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Please select Account\"\n      }\n    },\n    \"TEMPLATE\":
    {\n      \"TOOLTIP\": \"Define the specific fields of interest from connector\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Please select Template\"\n
    \     }\n    },\n    \"ADD_NEW_TEMPLATE\": {\n      \"TOOLTIP\": \"Add New Connector\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"EDIT_TEMPLATE\": {\n      \"TOOLTIP\":
    \"Edit Template\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"VIEW_TEMPLATE\":
    {\n      \"TOOLTIP\": \"View Template\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n
    \   \"DELETE_TEMPLATE\": {\n      \"TOOLTIP\": \"Delete Template\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"TEMPLATE_TOOL_TYPE\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"TEMPLATE_NAME\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"noSpecialCharacters\": \"Template Name cannot contain special characters\",\n
    \       \"required\": \"Template Name cannot be empty\",\n        \"startingFromNumber\":
    \"Template Name cannot start with number\",\n        \"maxlength\": \"Template Name
    should not have more than 63 characters!\"\n      }\n    },\n    \"TEMPLATE_DESCRIPTION\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"AUTOMATED_APPROVAL\":
    {\n      \"TOOLTIP\": \"Use predefined conditions to Approve or Reject a request.
    You can configure conditions using Policies.\",\n      \"VALIDATION_MESSAGE\": {\n
    \       \"required\": \"Please select Approval Condition\"\n      }\n    },\n    \"APPROVAL_GROUPS\":
    {\n      \"TOOLTIP\": \"Selected groups will be able to review this Approval Gate\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Please select Approval
    Groups to continue\"\n      }\n    },\n    \"APPROVAL_GROUP_MSG\": {\n      \"TOOLTIP\":
    \"Selected groups should have atleast view access to the application\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"GATE_SECURITY_SOURCE_URL\": {\n      \"TOOLTIP\": \"Source Url\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"GATE_SECURITY_SOURCE_URL_COPY\":
    {\n      \"TOOLTIP\": \"Copy Source Url\",\n      \"VALIDATION_MESSAGE\": \"\"\n
    \   },\n    \"PAYLOAD_CONSTRAINTS\": {\n      \"TOOLTIP\": \"Payload Constraints
    for Gate Security\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"PAYLOAD_CONSTRAINTS_KEY\":
    {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\": {\n        \"cannotContainSpace\":
    \"Key cannot contain space\",\n        \"required\": \"Invalid Key\"\n      }\n
    \   },\n    \"LOG_TEMPLATE\": {\n      \"TOOLTIP\": \"A collection of all the information
    needed to run the log analysis\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n
    \   \"CREATE_GATE_CONFIG_TEMPLATE\": {\n      \"TOOLTIP\": \"Create New Template\",\n
    \     \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"EDIT_GATE_CONFIG_TEMPLATE\": {\n
    \     \"TOOLTIP\": \"Edit Template\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n
    \   \"VIEW_GATE_CONFIG_TEMPLATE\": {\n      \"TOOLTIP\": \"View Template\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"DELETE_GATE_CONFIG_TEMPLATE\": {\n      \"TOOLTIP\": \"Delete
    Template\",\n      \"VALIDATION_MESSAGE\": \"\"\n    },\n    \"METRIC_TEMPLATE\":
    {\n      \"TOOLTIP\": \"Information needed to run the metric analysis\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"POLICY\": {\n      \"TOOLTIP\": \"\",\n      \"VALIDATION_MESSAGE\":
    \"\"\n    },\n    \"DELETE_PERMISSION\": {\n      \"TOOLTIP\": \"Insufficient Permission
    to Delete this Gate\",\n      \"VALIDATION_MESSAGE\": \"\"\n    }\n  },\n  \"LOGGED_INUSER_DETAILS\":
    {\n    \"HEADER\": \"No Users found\",\n    \"BODY\": \"\"\n  },\n  \"APPLICATION_DEPLOYMENT\":
    {\n    \"DEPLOYMENT_GRID_SYNC\": {\n      \"TOOLTIP\": \"When the cluster deployment
    matches with the latest pipeline execution it is 'In Sync'; if not, it is 'Out of
    Sync'\"\n    }\n  },\n\"INTEGRATION\": {\n\"AMAZONS3\":{\n  \"HEADER\": \"Amazon
    S3\",\n  \"BODY\":\"<span><p>Spinnaker can be configured to use AWS S3 bucket as
    Spinnaker's persistent storage or Artifact source</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name
    for your AWS S3 access. The account name appears in Spinnaker as an input source
    for artifact selection.<span class='noBr'></span></li><li><strong>Access Key Id</strong>:
    AWS IAM user access key who has access to the identified S3 bucket. Not required,
    If Spinnaker is running in EC2 or EKS with an associated IAM role. In that case,
    the IAM instance role is used for S3 connectivity.</li><li><strong>Secret Access
    Key</strong>: AWS IAM user Secret Key. Not required, If Spinnaker is running in
    EC2 or EKS with an associated IAM role. In that case, the IAM instance role is used
    for S3 connectivity.</li><li><strong>Region</strong>: AWS region where the AWS S3
    bucket is located</li><li><strong>API Region</strong>: AWS S3 API region, only required
    when using an S3 clone such as Minio</li><li><strong>API Endpoint</strong>: AWS
    S3 API endpoint, only required when using an S3 clone such as Minio</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to CD</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>:
    Enable/disable access to the Amazon S3 account in Autopilot to specific user groups</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your AWS S3
    access. The account name appears in Spinnaker as an input source for artifact selection.\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name cannot
    contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"ACCESS_ID\":{\n    \"TOOLTIP\":\"AWS IAM user's access key who has access
    to the identified S3 bucket. Not required, If Spinnaker is running in EC2 or EKS
    with an associated IAM role. In that case, the IAM instance role is used for S3
    connectivity.\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Access Key
    Id cannot be empty\"\n    }\n  },\n  \"SECRET_KEY\":{\n    \"TOOLTIP\":\"AWS IAM
    user Secret Key. Not required, If Spinnaker is running in EC2 or EKS with an associated
    IAM role. In that case, the IAM instance role is used for S3 connectivity.\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Secret Access Key cannot be empty\"\n
    \   }\n  },\n  \"REGION\":{\n    \"TOOLTIP\":\"AWS region where the AWS S3 bucket
    is located\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Region cannot
    be empty\"\n    }\n  },\n  \"APIENDPOINT\":{\n    \"TOOLTIP\":\"AWS S3 API endpoint,
    only required when using an S3 clone such as Minio\",\n    \"VALIDATION_MESSAGE\":{\n
    \   }\n  },\n  \"APIREGION\":{\n    \"TOOLTIP\":\"AWS S3 API region, only required
    when using an S3 clone such as Minio\",\n    \"VALIDATION_MESSAGE\":{\n    }\n  },\n
    \ \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Switch On this toggle to configure the
    resource in a gitops enabled Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"ARTIFACTORY\":{\n
    \ \"HEADER\": \"Artifactory\",\n  \"BODY\":\"<span><p>JFrog Artifactory integration
    can be used as an Artifact source in Spinnaker and also a Data source for Approval-Gate.</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name
    for your Jfrog Artifactory access. The account name appears in Spinnaker as an Artifactory
    trigger type input.</li><li><strong>Endpoint</strong>: The base URL of your Artifactory
    search is reachable at. <span class='noBr'>(Example: https://xyz.my-jfrog.com)</span></li><li><strong>Repo</strong>:
    The Artifactory repo which needs to be searched</li><li><strong>Repo Type</strong>:
    The package type of repo in your Artifactory is to be searched. Default is Maven.</li><li><strong>Group
    Id</strong>: The group id in your Artifactory is to be searched</li><li><strong>Username</strong>:
    The Artifactory user's username for authentication</li><li><strong>Password</strong>:
    The Artifactory user's password for authentication</li><li><strong>Token</strong>:
    Artifactory personal access token. You can find <a href='https://www.jfrog.com/confluence/display/JFROG/Access+Tokens'
    target='_blank'>here</a> how to generate personal access tokens. <span class='autolinebreak'>(Example:
    ZlQDAwMFwvdXNlcnNcL21hZGh1a2FyIiwic2NwIjoiYXBwbGllZC1wZXJtaXNzaW9uc1wvYWRtaW4gYXBpOioiLCJhdWQiOlsiamZydEAqIiwiamZhY0AqIiwiamZldnmbWRAKiJdLCJpc3MiOiJqZmZlQDAAzNzY3MiwiaWF0IjoxNjI5ODY0ODcyLCJqdGkiOiI1ZWFiNjlhYi1hZDY0LTRjOGItOTMyZC0wMDAxMWZiZWU5YWIifQ.tzBgL3fQgZ1dwlLLS2UAT7G)</span></li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>:
    Enable or disable specific user groups' access to the Artifactory account in ISD.</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your Jfrog
    Artifactory access. The account name appears in Spinnaker as an Artifactory trigger
    type input.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"ENDPOINT\":{\n    \"TOOLTIP\":\"The base URL of your Artifactory search
    is reachable at\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Endpoint
    cannot be empty\",\n      \"invalidUrl\": \"Endpoint URL is invalid\"\n    }\n  },\n
    \ \"REPO\":{\n    \"TOOLTIP\":\"The repo in your artifactory to be searched\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Repo cannot be empty\"\n    }\n
    \ },\n  \"REPOTYPE\":{\n    \"TOOLTIP\":\"The package type of repo in your Artifactory
    is to be searched. Default is Maven.\",\n    \"VALIDATION_MESSAGE\":{\n    }\n  },\n
    \ \"GROUPID\":{\n    \"TOOLTIP\":\"The group id in your Artifactory is to be searched.\",\n
    \   \"VALIDATION_MESSAGE\":{\n    }\n  },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select
    how the external resource confirms the user credentials\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Authentication cannot be empty\"\n    }\n  },\n  \"TOKEN\":{\n
    \   \"TOOLTIP\":\"The Token of the artifactory user to authenticate as\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Token cannot be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"The
    Artifactory user's username for authentication\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"User Name cannot be empty\"\n    }\n  },\n  \"PASSWORD\":{\n
    \   \"TOOLTIP\":\"The Artifactory user's password for authentication\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Password cannot be empty\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Toggle on to propagate the change into the CD Tool.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"BITBUCKET\":{\n
    \ \"HEADER\": \"Bitbucket Cloud\",\n  \"BODY\":\"<span><p>BitBucket Cloud integration
    can be used as a datasource for Approval Gate as well as to configure Spinnaker
    for BitBucket Cloud.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User-defined account name for your BitBucket Cloud access. <span
    class='noBr'>(Example: opsmx-bitbucket)</span></li><li><strong>Host URL</strong>:
    BitBucket Cloud (SaaS) Web URL. <span class='noBr'>It is usually https://bitbucket.org
    </span></li><li><strong>API URL</strong>: This is needed by Autopilot to access
    Bitbucket Cloud resources such as accounts & repositories through API calls <span
    class='noBr'>(Example: https://api.bitbucket.org/2.0/repositories)</span></li><li><strong>Authentication
    Type</strong>: Select one of the available options. If you are unsure, consult your
    BitBucket administrator to determine which authentication mechanism is used.</li><li><strong>Anonymous</strong>:
    No username or password is used. Access identity is anonymous.</li><li><strong>User
    Name</strong>: The BitBucket Cloud Service username </li><li><strong>Token</strong>:
    The user's username and access token This token is obtained from the Bitbucket user
    profile page here. <span class='noBr'>(Example: xCPkVZfxaE9iULmfYYkK)</span></li>
    <li><strong>Password</strong>: The BitBucket Cloud Service password</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>:
    Enable/disable access to the Bitbucket Account in Autopilot to specific user groups</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your BitBucket
    Cloud access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"HOSTURL\":{\n    \"TOOLTIP\":\"BitBucket Cloud (SaaS) Web URL. It is usually
    https://bitbucket.org\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Host
    URL cannot be empty\",\n      \"invalidUrl\": \"Host URL is invalid\"\n    }\n  },\n
    \ \"APIURL\":{\n    \"TOOLTIP\":\"Bitbucket API base URL. Eg. https://api.github.com\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"API URL cannot be empty\",\n
    \     \"invalidUrl\": \"API URL is invalid\"\n    }\n  },\n  \"AUTHENTICATIONTYPE\":{\n
    \   \"TOOLTIP\":\"Select one of the available options. If you are unsure, consult
    your BitBucket administrator to determine which authentication mechanism is used.\",\n
    \   \"VALIDATION_MESSAGE\":{}\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"The user's
    access token. This token is obtained from the Bitbucket user profile page.\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token cannot be empty\"\n    }\n
    \ },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"The BitBucket Cloud Service username\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"User Name cannot
    contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\":{\n    \"TOOLTIP\":\"The BitBucket Cloud Service password\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Password cannot be empty\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Switch On this toggle to configure the resource in a gitops enabled
    Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n
    \   \"TOOLTIP\":\"This button controls the validation of the configuration. If it
    is on, ISD will check the configuration for errors before saving it. If it is off,
    ISD will save the configuration as it is, without any validation. We recommend keeping
    the button on unless you are sure that the configuration is correct and does not
    need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"BITBUCKET_SERVER\":{\n
    \ \"HEADER\": \"Bitbucket Server\",\n  \"BODY\":\"<span><p>BitBucket Server integration
    can be used as a datasource for Approval Gate as well as to configure Spinnaker
    for BitBucket Server.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User-defined account name for your BitBucket Cloud access. <span
    class='noBr'>(Example: opsmx-bitbucket)</span></li><li><strong>Host URL</strong>:
    BitBucket Cloud (SaaS) Web URL. <span class='noBr'> It is usually https://bitbucket.org</span></li><li><strong>Authentication
    Type</strong>: Select one of the available options. If you are unsure, consult your
    BitBucket administrator to determine which authentication mechanism is used.</li><li><strong>Anonymous</strong>:
    No username or password is used. Access identity is anonymous.</li><li><strong>Token</strong>:
    The user's username and access token This token is obtained from the Bitbucket user
    profile page. You can find <a href='https://confluence.atlassian.com/bitbucketserver/personal-access-tokens-939515499.html'
    target='_blank'>here</a> how to generate personal access tokens. <span class='noBr'>(Example:
    DjpMgHmwqUnIvvmljFgqGQ)</span></li><li><strong>Username & Password </strong>: Accepts
    the user's username and password to connect to Bitbucket. Deprecated and not recommended.</li><li><strong>User
    Name</strong>: Bitbucket Server User Name</li><li><strong>Password</strong>: Bitbucket
    Server Password</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate
    the change into the CD Tool.</li><li><strong>Permissions</strong>: Enable/disable
    access to the Bitbucket Server account in Autopilot to specific user groups</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your BitBucket
    Cloud access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"HOSTURL\":{\n    \"TOOLTIP\":\"BitBucket Cloud (SaaS) Web URL. It is usually
    https://bitbucket.org\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Host
    URL cannot be empty\",\n      \"invalidUrl\": \"Host URL is invalid\"\n    }\n  },\n
    \ \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select one of the available options.
    If you are unsure, consult your BitBucket administrator to determine which authentication
    mechanism is used.\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"The
    user's access token. This token is obtained from the Bitbucket user profile page.\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token cannot be empty\"\n    }\n
    \ },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"The BitBucket Server username\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"User Name cannot contain special characters other
    than - and _\",\n      \"cannotContainSpace\":\"User Name cannot contain space\",\n
    \     \"required\":\"User Name cannot be empty\",\n      \"startingFromNumber\":
    \"User Name cannot start with numbers\"\n    }\n  },\n  \"PASSWORD\":{\n    \"TOOLTIP\":\"The
    BitBucket server password\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Password
    cannot be empty\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Switch
    On this toggle to configure the resource in a gitops enabled Spinnaker instance\",\n
    \   \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"DOCKERHUB\":{\n  \"HEADER\": \"Docker
    Registry\",\n  \"BODY\":\"<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User-defined account name for your Docker registry access.</li><li><strong>Registry
    URL</strong>: The registry URL from which you want to pull and deploy images. <span
    class='noBr'> DockerHub example: https://hub.docker.com</span></li><li><strong>Email</strong>:
    Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io
    will be used.</li><li><strong>Repositories</strong>: An optional list of repositories
    to cache images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. <span class='noBr'> Example:
    library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Group
    Membership</strong>: Select an authentication type that corresponds to the connection
    credential parameter.</li><li><strong>Validate</strong>: This button controls the
    validation of the configuration. If it is on, ISD will check the configuration for
    errors before saving it. If it is off, ISD will save the configuration as it is,
    without any validation. We recommend keeping the button on unless you are sure that
    the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your Docker
    registry access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"URL\":{\n    \"TOOLTIP\":\"The registry URL from which you want to pull
    and deploy images. DockerHub example: https://hub.docker.com\",\n    \"VALIDATION_MESSAGE\":
    {\n  \"required\": \"Registry URL cannot be empty\"\n}\n  },\n\"EMAIL\":{\n  \"TOOLTIP\":\"Users
    docker registry email. If no value is specified, the default value of fake.email@spinnaker.io
    will be used.\"\n},\n\"REPOSITORIES\":{\n\"TOOLTIP\":\"An optional list of repositories
    to cache images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. Example: library/ubuntu (Public
    repositories are prefixed with library/)\"\n},\n\"GROUPMEMBERSHIP\":{\n  \"TOOLTIP\":\"\"\n
    \ },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select an authentication type
    that corresponds to the connection credential parameter.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"The token of the Docker Registry user to
    authenticate as\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token cannot
    be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"The username of the
    Docker Registry user to authenticate as\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"User Name cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\":{\n    \"TOOLTIP\":\"The password of the Docker Registry user to
    authenticate as\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Password
    cannot be empty\"\n    }\n  },\n  \"HOSTURL\":{\n    \"TOOLTIP\":\"Docker Registry
    Host URL\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Host URL cannot
    be empty\",\n      \"invalidUrl\": \"Host URL is invalid\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Switch On this toggle to configure the resource in a gitops enabled
    Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n
    \   \"TOOLTIP\":\"This button controls the validation of the configuration. If it
    is on, ISD will check the configuration for errors before saving it. If it is off,
    ISD will save the configuration as it is, without any validation. We recommend keeping
    the button on unless you are sure that the configuration is correct and does not
    need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"OCR\":{\n  \"HEADER\":
    \"Generic Docker Registries (ACR, Quay, JFrog)\",\n  \"BODY\":\"<span><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name
    for your GCR Docker registry access.</li><li><strong>Registry URL</strong>: The
    registry URL from which you want to pull and deploy images. <span class='noBr'>
    For example: https://quay.io - RedHat quay.io</span></li><li><strong>Email</strong>:
    Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io
    will be used.</li><li><strong>Repositories</strong>: An optional list of repositories
    to cache images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. <span class='noBr'> Example:
    library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Authentication
    Type</strong>: Select an authentication type that corresponds to the connection
    credential parameter.</li><li><strong>Validate</strong>: This button controls the
    validation of the configuration. If it is on, ISD will check the configuration for
    errors before saving it. If it is off, ISD will save the configuration as it is,
    without any validation. We recommend keeping the button on unless you are sure that
    the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your GCR Docker
    registry access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"REPOSITORIES\":{\n    \"TOOLTIP\":\"An optional list of repositories to
    cache images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. Example: library/ubuntu (Public
    repositories are prefixed with library/)\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Repository
    cannot contain space\",\n      \"startingFromNumber\": \"Repository cannot start
    with numbers\"\n    }\n  },\n  \"URL\":{\n    \"TOOLTIP\":\"The registry URL from
    which you want to pull and deploy images. For example: https://quay.io - RedHat
    quay.io\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Registry URL cannot
    be empty\"\n    }\n  },\n  \"EMAIL\":{\n    \"TOOLTIP\":\"Users docker registry
    email. If no value is specified, the default value of fake.email@spinnaker.io will
    be used.\"\n  },\n  \"GROUPMEMBERSHIP\":{\n    \"TOOLTIP\":\"A user must be a member
    of at least one specified group in order to make changes to this account’s cloud
    resources\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Repository
    cannot contain space\"\n    }\n  },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select
    an authentication type that corresponds to the connection credential parameter.\",\n
    \   \"VALIDATION_MESSAGE\":{}\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"Your docker
    registry token\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token cannot
    be empty\"\n    }\n  },\n  \"PASSWORD\":{\n    \"TOOLTIP\":\"Your docker registry
    password\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Password cannot
    be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"Your docker registry
    username\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"User
    Name cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"HOSTURL\":{\n    \"TOOLTIP\":\"Container Registry Host URL\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Host URL cannot be empty\",\n      \"invalidUrl\": \"Host URL
    is invalid\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Toggle on
    to propagate the change into the CD Tool.\"\n  },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This
    button controls the validation of the configuration. If it is on, ISD will check
    the configuration for errors before saving it. If it is off, ISD will save the configuration
    as it is, without any validation. We recommend keeping the button on unless you
    are sure that the configuration is correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ }\n},\n\"GITHUB\":{\n  \"HEADER\": \"GitHub\",\n  \"BODY\":\"<span><p>GITHUB integration
    can be used as a datasource for Approval Gate as well as to configure Spinnaker
    for GitHub.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User-defined account name for your GitHub access.<span class='noBr'>(Example:
    opsmx-github)</span></li><li><strong>URL</strong>: Github's host address, such as
    https://github.com</li><li><strong>API URL</strong>: Github's API endpoint host
    address, <span class='noBr'>such as https://api.github.com</span></li><li><strong>Token</strong>:
    GitHub personal access token. You can find <a href='https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token'
    target='_blank'>here</a> how to generate personal access tokens. <span class='noBr'>(Example:
    ghp_ln1eJK4yuomnY6JREp72IDJC4Hq6Sm)</span></li><li><strong>User Name</strong>: The
    GitHub username</li><li><strong>Validate</strong>: This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.</li><li><strong>Connect to Spinnaker</strong>:
    Toggle to configure Spinnaker for GitHub</li><li><strong>Permissions</strong>: Enable/disable
    access to the GITHUB account in Autopilot to specific user groups</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your GitHub
    access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"HOSTURL\":{\n    \"TOOLTIP\":\"Github's host address, such as https://github.com\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Host URL cannot be empty\",\n
    \     \"invalidUrl\": \"Host URL is invalid\"\n    }\n  },\n  \"URL\":{\n    \"TOOLTIP\":\"Github's
    API endpoint host address, such as https://api.github.com\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"API URL cannot be empty\",\n      \"invalidUrl\": \"API URL
    is invalid\"\n    }\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"The user's token\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token cannot be empty\"\n    }\n
    \ },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"The GitHub username\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"User Name cannot contain special characters other
    than - and _\",\n      \"cannotContainSpace\":\"User Name cannot contain space\",\n
    \     \"required\":\"User Name cannot be empty\",\n      \"startingFromNumber\":
    \"User Name cannot start with numbers\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Switch On this toggle to configure the resource in a gitops enabled
    Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n
    \   \"TOOLTIP\":\"This button controls the validation of the configuration. If it
    is on, ISD will check the configuration for errors before saving it. If it is off,
    ISD will save the configuration as it is, without any validation. We recommend keeping
    the button on unless you are sure that the configuration is correct and does not
    need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"GITLAB\":{\n  \"HEADER\":
    \"GitLab\",\n  \"BODY\":\"<span><ul><li><strong>Account Name</strong>: User-defined
    account name for your GitLab access.</li><li><strong>Host URL</strong>: GitLab's
    host address, such as https://gitlab.com</li><li><strong>Token</strong>: The user's
    personal access token. Please refer <a href='https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html'
    target='_blank'>this document</a> for generating tokens.</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to CD</strong>: Switch On this toggle to configure the resource in a gitops enabled
    Spinnaker instance</li><li><strong>Permissions</strong>: Configure specific user
    groups’ access to this integration.</li></ul></span>\",\n  \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined
    account name for your GitLab access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"HOSTURL\":{\n    \"TOOLTIP\":\"GitLab's host address, such as https://gitlab.com\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Host URL cannot be empty\",\n
    \     \"invalidUrl\": \"Host URL is invalid\"\n    }\n  },\n  \"APIBASEURL\":{\n
    \   \"TOOLTIP\":\"\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"API URL
    cannot be empty\",\n      \"invalidUrl\": \"API URL is invalid\"\n    }\n  },\n
    \ \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select how the external resource confirms
    the user credentials\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"GitLab
    token\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token cannot be empty\"\n
    \   }\n  },\n  \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Switch On this toggle to
    configure the resource in a gitops enabled Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"GITREPO\":{\n
    \ \"HEADER\": \"Git Repo\",\n  \"BODY\": \"<span><li><strong>Account Name</strong>:
    User-defined account name for your Git Repo access.</li><li><strong>API URL</strong>:
    The API URL of the Git repository URL.<p><strong>Examples</strong>:</p><ul><li>https://api.github.com</li><li>https://api.bitbucket.org/2.0/respositories</li><li>https://gitlab.com/api/v4/</li></ul></li><li><strong>Authentication
    Type</strong>: Select an authentication type that corresponds to the connection
    credential parameter. Recommended using the user token method.</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your Git Repo
    access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"APIURL\":{\n    \"TOOLTIP\":\"<div><div>The API URL of the Git repository
    URL.</div><strong>Examples</strong>:<ul><li>https://api.github.com</li><li>https://api.bitbucket.org/2.0/respositories</li><li>https://gitlab.com/api/v4/</li></ul></div>\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"API URL cannot be empty\",\n
    \     \"invalidUrl\": \"API URL is invalid\"\n    }\n  },\n  \"DEPLOYMENT\":{\n
    \   \"TOOLTIP\":\"This Halyard deployment will be used for Account creation / update\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"deployment URL cannot be empty\",\n
    \     \"invalidUrl\": \"deployment URL is invalid\"\n    }\n  },\n  \"AUTHENTICATIONTYPE\":{\n
    \   \"TOOLTIP\":\"Select an authentication type that corresponds to the connection
    credential parameter. Recommended using the user token method.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"URL\":{\n    \"TOOLTIP\":\"\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"API
    URL cannot be empty\",\n      \"invalidUrl\": \"API URL is invalid\"\n    }\n  },\n
    \ \"TOKEN\":{\n    \"TOOLTIP\":\"Git token\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token
    cannot be empty\"\n    }\n  },\n  \"PASSWORD\":{\n    \"TOOLTIP\":\"Git password\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Password cannot be empty\"\n
    \   }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"Git username\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"User Name cannot contain special characters other
    than - and _\",\n      \"cannotContainSpace\":\"User Name cannot contain space\",\n
    \     \"required\":\"User Name cannot be empty\",\n      \"startingFromNumber\":
    \"User Name cannot start with numbers\"\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Switch On this toggle to configure the resource in a gitops enabled
    Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n
    \   \"TOOLTIP\":\"This button controls the validation of the configuration. If it
    is on, ISD will check the configuration for errors before saving it. If it is off,
    ISD will save the configuration as it is, without any validation. We recommend keeping
    the button on unless you are sure that the configuration is correct and does not
    need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"HELM\":{\n  \"HEADER\":
    \"Helm\",\n  \"BODY\": \"<span><li><strong>Account Name</strong>: User-defined account
    name for target Helm repository access.</li><li><strong>Repository</strong>: Helm
    Chart Repository’s HTTP endpoint.</li><li><strong>Authentication Type</strong>:
    Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle ON to propagate the change to Spinnaker Toggle on
    to propagate the change into the CD Tool.</li></span>\",\n  \"ACCOUNTNAME\":{\n
    \   \"TOOLTIP\":\"User-defined account name for target Helm repository access\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name cannot
    contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"REPOSITORY\":{\n    \"TOOLTIP\":\"Helm Chart Repository’s HTTP endpoint\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\":\"Repository cannot be empty\",\n
    \     \"invalidUrl\": \"Repository URL is invalid\"\n    }\n  },\n  \"DEPLOYMENT\":{\n
    \   \"TOOLTIP\":\"This Halyard deployment will be used for Account creation / update\",\n
    \   \"VALIDATION_MESSAGE\":{\n    \n    }\n  },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select
    an authentication type that corresponds to the connection credential parameter.\",\n
    \   \"VALIDATION_MESSAGE\":{}\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Token cannot be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"User
    Name\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"User Name
    cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\": {\n    \"TOOLTIP\": \"Password\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\" : \"Password cannot be empty\"\n    }\n  },\n  \"PASSWORDCOMMAND\":
    {\n    \"TOOLTIP\": \"Command to retrieve docker token/password, commands must be
    available in environment\",\n    \"VALIDATION_MESSAGE\":{\n    }\n  },\n  \"FILE\":
    {\n    \"TOOLTIP\": \"The path to a file containing your docker password in plaintext
    (not a docker/config.json file)\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n
    \ \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Toggle on to propagate the change into
    the CD Tool.\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This
    button controls the validation of the configuration. If it is on, ISD will check
    the configuration for errors before saving it. If it is off, ISD will save the configuration
    as it is, without any validation. We recommend keeping the button on unless you
    are sure that the configuration is correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ }\n},\n\"HTTP\":{\n  \"HEADER\": \"Http\",\n  \"BODY\": \"<span><li><strong>Account
    Name</strong>: User-defined account name for HTTP protocol-based artifacts</li><li><strong>Authentication
    Type</strong>: Select an authentication type that corresponds to the connection
    credential parameter.</li><li><strong>Validate</strong>: This button controls the
    validation of the configuration. If it is on, ISD will check the configuration for
    errors before saving it. If it is off, ISD will save the configuration as it is,
    without any validation. We recommend keeping the button on unless you are sure that
    the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for HTTP protocol-based
    artifacts\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select an authentication type
    that corresponds to the connection credential parameter.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token
    cannot be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"HTTP basic auth
    User Name\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"User
    Name cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\": {\n    \"TOOLTIP\": \"Password\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\" : \"Password cannot be empty\"\n    }\n  },\n  \"PASSWORDCOMMAND\":
    {\n    \"TOOLTIP\": \"Command to retrieve docker token/password, commands must be
    available in environment\",\n    \"VALIDATION_MESSAGE\":{\n    }\n  },\n  \"FILE\":
    {\n    \"TOOLTIP\": \"The path to a file containing your docker password in plaintext
    (not a docker/config.json file)\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n
    \ \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Toggle on to propagate the change into
    the CD Tool.\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This
    button controls the validation of the configuration. If it is on, ISD will check
    the configuration for errors before saving it. If it is off, ISD will save the configuration
    as it is, without any validation. We recommend keeping the button on unless you
    are sure that the configuration is correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ }\n},\n\"GCS\":{\n  \"HEADER\": \"GCS\",\n  \"BODY\": \"<span><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'></ul><li><strong>Account Name</strong>: User-defined account
    name for your Google Cloud Storage access.</li><li><strong>Authentication Type</strong>:
    Select an authentication type that corresponds to the connection credential parameter.
    </li><li><strong>Json-Key file</strong>: Configures Google service account’s json
    file </li><li><strong>Validate</strong>: This button controls the validation of
    the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.</li><li><strong>Connect to Spinnaker</strong>:
    Toggle on to propagate the change into the CD Tool. </li></ul></span>\",\n  \"ACCOUNTNAME\":{\n
    \   \"TOOLTIP\":\"User-defined account name for your Google Cloud Storage access.\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name cannot
    contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select an authentication type
    that corresponds to the connection credential parameter.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"FILE\": {\n    \"TOOLTIP\": \"Configures Google service account’s json
    file\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Toggle
    on to propagate the change into the CD Tool.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"ECR\":{\n
    \ \"HEADER\": \"ECR\",\n  \"BODY\": \"<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User-defined account name for your ECR Docker registry access.</li><li><strong>Registry
    URL</strong>: The registry URL from which you want to pull and deploy images. <span
    class='noBr'> For example:https://aws_account_id.dkr.ecr.region.amazonaws.com</span></li><li><strong>Email</strong>:
    Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io
    will be used.</li><li><strong>Repositories</strong>: An optional list of repositories
    to cache images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. <span class='noBr'> Example:
    library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Authentication
    Type</strong>: Select an authentication type that corresponds to the connection
    credential parameter.</li><li><strong>Validate</strong>: This button controls the
    validation of the configuration. If it is on, ISD will check the configuration for
    errors before saving it. If it is off, ISD will save the configuration as it is,
    without any validation. We recommend keeping the button on unless you are sure that
    the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your ECR Docker
    registry access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"REPOSITORIES\":{\n    \"TOOLTIP\":\"Users docker registry email. If no
    value is specified, the default value of fake.email@spinnaker.io will be used.\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Repository cannot contain
    space\",\n      \"startingFromNumber\": \"Repository cannot start with numbers\"\n
    \   }\n  },\n  \"URL\":{\n    \"TOOLTIP\":\"The registry URL from which you want
    to pull and deploy images. For example:https://aws_account_id.dkr.ecr.region.amazonaws.com\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"required\" : \"Registry URL cannot be empty\"\n
    \   }\n  },\n  \"GROUPMEMBERSHIP\":{\n    \"TOOLTIP\":\"A user must be a member
    of at least one specified group in order to make changes to this account’s cloud
    resources\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Repository
    cannot contain space\"\n    }\n  },\n  \"REGION\": {\n    \"TOOLTIP\": \"AWS region\"\n
    \ },\n  \"EMAIL\":{\n    \"TOOLTIP\":\"An optional list of repositories to cache
    images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. Example: library/ubuntu (Public
    repositories are prefixed with library/)\",\n    \"VALIDATION_MESSAGE\":{\n      \"email\":\"Email
    Id is invalid\",\n      \"required\":\"Email Id cannot be empty\"\n    }\n  },\n
    \ \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select an authentication type that
    corresponds to the connection credential parameter.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\":\"Token
    cannot be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"Your docker
    registry username\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"User Name cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\": {\n    \"TOOLTIP\": \"Your docker registry password\",\n    \"VALIDATION_MESSAGE\":{\n
    \   }\n  },\n  \"PASSWORDCOMMAND\": {\n    \"TOOLTIP\": \"Command to retrieve docker
    token/password, commands must be available in environment\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\" : \"Password-command cannot be empty\"\n    }\n  },\n  \"FILE\":
    {\n    \"TOOLTIP\": \"The path to a file containing your docker password in plaintext
    (not a docker/config.json file)\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n
    \ \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Toggle on to propagate the change into
    the CD Tool.\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This
    button controls the validation of the configuration. If it is on, ISD will check
    the configuration for errors before saving it. If it is off, ISD will save the configuration
    as it is, without any validation. We recommend keeping the button on unless you
    are sure that the configuration is correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ }\n},\n\"PUBSUB\":{\n  \"HEADER\": \"PUBSUB\",\n  \"BODY\": \"<span><li><strong>Account
    Name</strong>: User-defined account name for your Google Cloud Pub/Sub access.</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your Google
    Cloud Pub/Sub access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"PROJECTNAME\": {\n    \"TOOLTIP\": \"The name of the GCP project your
    subscription lives in\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Project
    Name cannot contain space\",\n      \"required\":\"Project Name cannot be empty\"\n
    \   }\n  },\n  \"SUBSCRIPTIONNAME\": {\n    \"TOOLTIP\": \"The name of the subscription
    to listen to and it should have PubsSub Viewer and PubSub Subscriber Roles as mandatory.
    This identifier does not include the name of the project, and must already be configured
    for Spinnaker to work.\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Subscription
    Name cannot contain space\",\n      \"required\":\"Subscription Name cannot be empty\"\n
    \   }\n  },\n  \"MESSAGEFORMAT\": {\n    \"TOOLTIP\":\"Supporting Message Formats:
    GCB,GCS,GCR,CUSTOM\",\n    \"VALIDATION_MESSAGE\": {}\n  },\n  \"TEMPLATEFILE\":
    {\n    \"TOOLTIP\": \"To translate the Pub/Sub payload into a Spinnaker artifact,
    you need to create a Jinja template that defines how to transform the payload data.
    The Jinja template should produce a JSON list of Spinnaker artifacts as its output.
    You can use any valid Jinja syntax in your template. Example : https://spinnaker.io/docs/guides/user/pipeline/triggers/pubsub/#example\",\n
    \   \"VALIDATION_MESSAGE\": {}\n  },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select
    how the external resource confirms the user credentials\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"FILE\": {\n    \"TOOLTIP\": \"JSON service account that Spinnaker will
    use as credentials\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Switch On this toggle to configure the resource in a gitops enabled
    Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n  \"VALIDATETOGGLE\":{\n
    \   \"TOOLTIP\":\"This button controls the validation of the configuration. If it
    is on, ISD will check the configuration for errors before saving it. If it is off,
    ISD will save the configuration as it is, without any validation. We recommend keeping
    the button on unless you are sure that the configuration is correct and does not
    need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"GCB\":{\n  \"HEADER\":
    \"GCB\",\n  \"BODY\": \"<div><p>This page allows you to connect Google Cloud Build
    with ISD. Google cloud build can be used as an automated trigger as well as a stage
    in the pipeline.</p><p>To configure a pipeline to be triggered by a completed GCB
    build, after this integration is succefully created, go to your application's pipeline
    menu. Click on the configuration stage of a pipeline, then select Pub/Sub as the
    automated trigger. Select Pub/Sub System type as Google and select your subscribtion
    name.</p><p>To run GCB Build as part of a pipeline, create a stage of type Google
    Cloud Build, select your GCB Account and configure the build definition.In the Produces
    Artifacts section, you may supply any artifacts that you expect the build to create
    in order to make these artifacts available to downstream stages</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li><strong>Account Name</strong>: The user defined name of this
    account.<span></span></li><li><strong>Project Name</strong>: <span>The name of the
    GCP project in which to trigger and monitor builds</span></li><li><strong>Subscription
    Name</strong>: <span> The name of the PubSub subscription on which to listen for
    build changes</span></li><li><strong>Authentication Type</strong>: <span>Select
    how the external resource confirms the user credentials</span></li><li><strong>Json
    key file (File) </strong>: <span>JSON service account that Spinnaker will use as
    credentials</span></li><li><strong>Validate</strong>: This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.</li><li><strong>Connect to CD</strong>: <span>Switch
    On this toggle to configure the resource in a gitops enabled CD tool</span></li><li><strong>Permissions</strong>:
    <span>Configure specific user groups’ access to this integration.</li></ul></div>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"The name of the account to operate on\",\n
    \   \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name cannot
    contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"PROJECTNAME\": {\n    \"TOOLTIP\": \"The name of the GCP project in which
    to trigger and monitor builds\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Project
    Name cannot contain space\",\n      \"required\":\"Project Name cannot be empty\"\n
    \   }\n  },\n  \"SUBSCRIPTIONNAME\": {\n    \"TOOLTIP\": \"The name of the PubSub
    subscription on which to listen for build changes and it should have PubsSub Viewer
    and PubSub Subscriber Roles as mandatory.\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Subscription
    Name cannot contain space\",\n      \"required\":\"Subscription Name cannot be empty\"\n
    \   }\n  },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select how the external
    resource confirms the user credentials\",\n    \"VALIDATION_MESSAGE\":{}\n  },\n
    \ \"FILE\": {\n    \"TOOLTIP\": \"JSON service account that Spinnaker will use as
    credentials\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"GCB
    User Name\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"User
    Name cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\": {\n    \"TOOLTIP\": \"Password\",\n    \"VALIDATION_MESSAGE\":{\n
    \   }\n  },\n  \"SPINNAKERTOGGLE\":{\n    \"TOOLTIP\":\"Switch On this toggle to
    configure the resource in a gitops enabled Spinnaker instance\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"GCR\":{\n
    \ \"HEADER\": \"GCR\",\n  \"BODY\": \"<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User-defined account name for your GCR Docker registry access.</li><li><strong>Registry
    URL</strong>: The registry URL from which you want to pull and deploy images. <span
    class='noBr'> For example: https://gcr.io - Global GCR, https://[us|eu|asia].gcr.io
    - Regional GCR</span></li><li><strong>Email</strong>: Users docker registry email.
    If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>:
    An optional list of repositories to cache images from. If not provided, Spinnaker
    will try to read the list of accessible repositories from the registries _catalog
    endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed
    with library/)</span></li><li><strong>Authentication Type</strong>: Select an authentication
    type that corresponds to the connection credential parameter.</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>\",\n
    \ \"ACCOUNTNAME\":{\n    \"TOOLTIP\":\"User-defined account name for your GCR Docker
    registry access.\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \ },\n  \"AUTHENTICATIONTYPE\":{\n    \"TOOLTIP\":\"Select an authentication type
    that corresponds to the connection credential parameter.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"REPOSITORIES\":{\n    \"TOOLTIP\":\"An optional list of repositories to
    cache images from. If not provided, Spinnaker will try to read the list of accessible
    repositories from the registries _catalog endpoint. Example: library/ubuntu (Public
    repositories are prefixed with library/)\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Repository
    cannot contain space\",\n      \"startingFromNumber\": \"Repository cannot start
    with numbers\"\n    }\n  },\n  \"REQUIREDGROUPMEMBERSHIP\":{\n    \"TOOLTIP\":\"A
    user must be a member of at least one specified group in order to make changes to
    this account’s cloud resources\",\n    \"VALIDATION_MESSAGE\":{\n      \"cannotContainSpace\":\"Repository
    cannot contain space\"\n    }\n  },\n  \"EMAIL\":{\n    \"TOOLTIP\":\"Users docker
    registry email. If no value is specified, the default value of fake.email@spinnaker.io
    will be used.\",\n    \"VALIDATION_MESSAGE\":{\n      \"email\":\"Email Id is invalid\",\n
    \     \"required\":\"Email Id cannot be empty\"\n    }\n  },\n  \"URL\":{\n    \"TOOLTIP\":\"The
    registry URL from which you want to pull and deploy images. For example: https://gcr.io
    - Global GCR, https://[us|eu|asia].gcr.io - Regional GCR\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Registry URL cannot be empty\",\n      \"invalidUrl\": \"Registry
    URL is invalid\"\n    }\n  },\n  \"TOKEN\":{\n    \"TOOLTIP\":\"\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\":\"Token cannot be empty\"\n    }\n  },\n  \"USERNAME\":{\n    \"TOOLTIP\":\"GCR
    User Name\",\n    \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"User
    Name cannot contain special characters other than - and _\",\n      \"cannotContainSpace\":\"User
    Name cannot contain space\",\n      \"required\":\"User Name cannot be empty\",\n
    \     \"startingFromNumber\": \"User Name cannot start with numbers\"\n    }\n  },\n
    \ \"PASSWORD\": {\n    \"TOOLTIP\": \"Your docker registry password\",\n    \"VALIDATION_MESSAGE\":{\n
    \     \"required\" : \"Password cannot be empty\"\n    }\n  },\n  \"PASSWORDCOMMAND\":
    {\n    \"TOOLTIP\": \"Command to retrieve docker token/password, commands must be
    available in environment\",\n    \"VALIDATION_MESSAGE\":{\n      \"required\" :
    \"Password-command cannot be empty\"\n    }\n  },\n  \"FILE\": {\n    \"TOOLTIP\":
    \"The path to a file containing your docker password in plaintext (not a docker/config.json
    file)\",\n    \"VALIDATION_MESSAGE\": {\n    }\n  },\n  \"SPINNAKERTOGGLE\":{\n
    \   \"TOOLTIP\":\"Toggle on to propagate the change into the CD Tool.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This button controls the validation
    of the configuration. If it is on, ISD will check the configuration for errors before
    saving it. If it is off, ISD will save the configuration as it is, without any validation.
    We recommend keeping the button on unless you are sure that the configuration is
    correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n},\n\"BAMBOO\":{\n
    \   \"HEADER\": \"Bamboo CI\",\n    \"BODY\":\" <span><p>Bamboo CI integration can
    be used as a datasource for Approval Gate.</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'> <li><strong>Name</strong>: User defined name for the Bamboo
    CI Account <span class='noBr'>(Example: opsmx-bamboo)</span></li><li><strong>Endpoint</strong>:
    Bamboo CI URL <span class='noBr'>(Example: https://xyz.mybamboo.com)</span></li><li><strong>Token</strong>:
    Bamboo CI personal access token. You can find <a href='https://confluence.atlassian.com/bamboo/personal-access-tokens-976779873.html'
    target='_blank'>here</a> how to generate personal access tokens. <span>(Example:
    YmFrwqw0w9r90skfsOk9wcdd014p98kklw==)</span></li><li><strong>User Name</strong>:
    Bamboo CI User Name</li><li><strong>Password</strong>: Bamboo CI Password</li><li><strong>Permissions</strong>:
    Enable/disable access to the Bamboo CI account in Autopilot to specific usergroups</li></ul></span>\",\n
    \   \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"The name of the account to operate on\",\n
    \     \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name cannot
    contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"ENDPOINT\":{\n      \"TOOLTIP\":\"Bamboo URL\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Bamboo End Point cannot be empty\",\n        \"invalidUrl\":
    \"Bamboo End Point URL is invalid\"\n      }\n    },\n    \"AUTHENTICATIONTYPE\":{\n
    \     \"TOOLTIP\":\"Select how the external resource confirms the user credentials\",\n
    \     \"VALIDATION_MESSAGE\":{}\n    },\n    \"TOKEN\":{\n      \"TOOLTIP\":\"Your
    Bamboo token\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Token cannot
    be empty\"\n      }\n    },\n    \"USERNAME\":{\n      \"TOOLTIP\":\"Your Bamboo
    username\",\n      \"VALIDATION_MESSAGE\":{\n        \"noSpecialCharacters\": \"User
    Name cannot contain special characters other than - and _\",\n        \"cannotContainSpace\":\"User
    Name cannot contain space\",\n        \"required\":\"User Name cannot be empty\",\n
    \       \"startingFromNumber\": \"User Name cannot start with numbers\"\n      }\n
    \   },\n    \"PASSWORD\":{\n      \"TOOLTIP\":\"Your Bamboo password\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Password cannot be empty\"\n      }\n    }\n  },\n  \"JENKINS\":{\n
    \   \"HEADER\":\"Jenkins\",\n    \"BODY\":\"<span><p>Jenkins integration can be
    used as a datasource for Approval Gate as well as to configure Spinnaker for Jenkins.</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name
    for your Jenkins access. <span class='noBr'>(Example: opsmx-jenkins)</span></li><li><strong>Host
    URL</strong>: Jenkins host address, <span class='noBr'>such as https://jenkins.opsmx.net</span></li><li><strong>Authentication
    Type</strong>: Select an authentication type that corresponds to the connection
    credential parameter. It is preferable to use token authentication with username
    and token. </li><li><strong>Token</strong>: Jenkins personal access token. You can
    find <a href='https://www.jenkins.io/doc/book/using/using-credentials/' target='_blank'>here</a>
    how to generate personal access tokens. <span>(Example: 77d67609a841b1811a114b7fbfa109b3c2)</span></li><li><strong>CSRF</strong>:
    Recommended to toggle on the CSRF (Cross-Site Request Forgery) flag</li><li><strong>User
    Name</strong>: Jenkins User Name</li><li><strong>Password</strong>: Jenkins Password</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li><li><strong>Connect
    to Spinnaker</strong>: Toggle to configure Spinnaker for Jenkins</li><li><strong>Permissions</strong>:
    Enable/disable access to the Jenkins account in Autopilot to specific user groups</li></ul></span>\",\n
    \   \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User-defined account name for your Jenkins
    access.\",\n      \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"HOSTURL\":{\n      \"TOOLTIP\":\"Jenkins host address, such as https://jenkins.opsmx.net\",\n
    \     \"VALIDATION_MESSAGE\":{\n        \"required\":\"Host URL cannot be empty\",\n
    \       \"invalidUrl\": \"Host URL is invalid\"\n      }\n    },\n    \"AUTHENTICATIONTYPE\":{\n
    \     \"TOOLTIP\":\"Select an authentication type that corresponds to the connection
    credential parameter. It is preferable to use token authentication with username
    and token.\",\n      \"VALIDATION_MESSAGE\":{}\n    },\n    \"CSRFFLAG\":{\n      \"TOOLTIP\":\"Recommended
    to toggle on the CSRF (Cross-Site Request Forgery) flag.\",\n      \"VALIDATION_MESSAGE\":{}\n
    \   },\n    \"TOKEN\":{\n      \"TOOLTIP\":\"Your Jenkins token\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Token cannot be empty\"\n      }\n    },\n    \"USERNAME\":{\n
    \     \"TOOLTIP\":\"Your Jenkins username\",\n      \"VALIDATION_MESSAGE\":{\n        \"noSpecialCharacters\":
    \"User Name cannot contain special characters other than - and _\",\n        \"cannotContainSpace\":\"User
    Name cannot contain space\",\n        \"required\":\"User Name cannot be empty\",\n
    \       \"startingFromNumber\": \"User Name cannot start with numbers\"\n      }\n
    \   },\n    \"PASSWORD\":{\n      \"TOOLTIP\":\"Your Jenkins password\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Password cannot be empty\"\n      }\n    },\n    \"SPINNAKERTOGGLE\":{\n
    \     \"TOOLTIP\":\"Switch On this toggle to configure the resource in a gitops
    enabled Spinnaker instance\",\n      \"VALIDATION_MESSAGE\":{}\n    },\n  \"VALIDATETOGGLE\":{\n
    \   \"TOOLTIP\":\"This button controls the validation of the configuration. If it
    is on, ISD will check the configuration for errors before saving it. If it is off,
    ISD will save the configuration as it is, without any validation. We recommend keeping
    the button on unless you are sure that the configuration is correct and does not
    need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n  }\n  },\n  \"JIRA\":{\n    \"HEADER\":
    \"Jira\",\n    \"BODY\":\"<span><ul><li><strong>Account Name</strong> : User defined
    name for the Jira account</li><li><strong>Email</strong> : Jira Email Id</li><li><strong>Token</strong>
    : Jira Personal Access Token</li><li><strong>Host URL</strong> : Jira Host URL</li><li><strong>Connect
    to CD</strong> : Switch On this toggle to configure the resource in a gitops enabled
    spinnaker instance</li><li><strong>Permissions</strong> : Authorization for the
    account</li></ul></span>\",\n    \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User defined
    name for the Jira account\",\n      \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"EMAIL\":{\n      \"TOOLTIP\":\"Jira Email Id\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"email\":\"Email Id is invalid\",\n        \"required\":\"Email Id cannot
    be empty\"\n      }\n    },\n    \"TOKEN\":{\n      \"TOOLTIP\":\"Jira Personal
    Access Token\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Token cannot
    be empty\"\n      }\n    },\n    \"HOSTURL\":{\n      \"TOOLTIP\":\"Jira Host URL\",\n
    \     \"VALIDATION_MESSAGE\":{\n        \"required\":\"Host URL cannot be empty\",\n
    \       \"invalidUrl\": \"Host URL is invalid\"\n      }\n    },\n    \"ACCOUNTTYPE\":{\n
    \     \"TOOLTIP\": \"Cloud Jira: Please use this option if you are using cloud instance
    of Jira. On-Prem Jira: Please use this option if you are using Jira on-prem\",\n
    \     \"VALIDATION_MESSAGE\": {\n      }\n    },\n    \"SPINNAKERTOGGLE\":{\n      \"TOOLTIP\":\"Switch
    On this toggle to configure the resource in a gitops enabled Spinnaker instance\",\n
    \     \"VALIDATION_MESSAGE\":{}\n    }\n  },\n  \"SERVICENOW\":{\n    \"HEADER\":
    \"Service Now\",\n    \"BODY\":\"<span><p>Service integration can be used to configure
    ServiceNow Custom stages in Spinnaker. In addition, it can also be used as a datasource
    for Approval Gate.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User defined name for the Service Account <span class='noBr'>(Example:
    myservicenow)</span></li><li><strong>Host URL</strong>: ServiceNow URL <span class='noBr'>(Example:
    https://servicenow.opsmx.com)</span></li><li><strong>User Name</strong>: ServiceNow
    User Name, for authentication</li><li><strong>Password</strong>: ServiceNow Password
    for the User who is authenticated</li><li><strong>Connect to Spinnaker</strong>:
    Toggle to configure Spinnaker for ServiceNow</li><li><strong>Permissions</strong>:
    Enable/disable access to the ServiceNow account in Autopilot to specific usergroups</li></ul></span>\",\n
    \   \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User defined name for the Service Now
    account\",\n      \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"USERNAME\":{\n      \"TOOLTIP\":\"Service Now User Name\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"noSpecialCharacters\": \"User Name cannot contain special characters other
    than - and _\",\n        \"cannotContainSpace\":\"User Name cannot contain space\",\n
    \       \"required\":\"User Name cannot be empty\",\n        \"startingFromNumber\":
    \"User Name cannot start with numbers\"\n      }\n    },\n    \"PASSWORD\":{\n      \"TOOLTIP\":\"Service
    Now Password\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Password
    cannot be empty\"\n      }\n    },\n    \"HOSTURL\":{\n      \"TOOLTIP\":\"Service
    Now Host URL\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Host URL
    cannot be empty\",\n        \"invalidUrl\": \"Host URL is invalid\"\n      }\n    }\n
    \ }\n  ,\n  \"APPDYNAMICS\":{\n    \"HEADER\": \"APPDYNAMICS\",\n    \"BODY\":\"<span><ul><li><strong>Account
    Name</strong> : User defined name for the APPDYNAMICS account</li><li><strong>Controller
    Host</strong> : APPDYNAMICS Controller Host</li><li><strong>Temporary Access Token</strong>
    : APPDYNAMICS Personal Temporary Access Token</li></ul></span>\",\n    \"ACCOUNTNAME\":{\n
    \     \"TOOLTIP\":\"User defined name for the APPDYNAMICS account\",\n      \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n    },\n    \"CONTROLLERHOST\":{\n
    \     \"TOOLTIP\":\"APPDYNAMICS Controller Host\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Controller Host  cannot be empty\",\n        \"invalidUrl\":
    \"Controller Host URL is invalid\"\n      }\n    },\n    \"TEMPORARYACCESSTOKEN\":{\n
    \     \"TOOLTIP\":\"APPDYNAMICS Personal Temporary Access Token\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Temporary Access Token cannot be empty\"\n      }\n    }\n
    \ },\n  \"CLOUDWATCH\":{\n    \"HEADER\": \"AWS-CLOUDWATCH\",\n    \"BODY\":\"<span><p>Amazon
    CloudWatch Can be used as a monitoring provider in the verification gates</p><p><strong>Fields</strong>:</p><ul
    class='helpTextUl'><li><strong>Account Name</strong>: User defined name for the
    AWS-CLOUDWATCH account</li><li><strong>Access Key Id</strong>: AWS-CLOUDWATCH Access
    Key Id</li><li><strong>Secret Access Key</strong>: AWS-CLOUDWATCH Secret Access
    Key</li><li><strong>Permissions</strong>: Configure specific user groups’ access
    to this integration.</li></ul></span>\",\n    \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User
    defined name for the AWS-CLOUDWATCH account\",\n      \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n    },\n    \"ACCESS_ID\":{\n
    \     \"TOOLTIP\":\"AWS-CLOUDWATCH Access Key Id\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Access Key Id cannot be empty\"\n      }\n    },\n    \"SECRET_KEY\":{\n
    \     \"TOOLTIP\":\"AWS-CLOUDWATCH Secret Access Key\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Secret Access Key cannot be empty\"\n      }\n    }\n  },\n
    \ \"DATADOG\":{\n    \"HEADER\": \"DATADOG\",\n    \"BODY\":\"<span><ul><li><strong>Account
    Name</strong> : User defined name for the DATADOG account</li><li><strong>API Key</strong>
    : DATADOG API Key</li><li><strong>Application Key</strong> : DATADOG Application
    Key</li><li><strong>Permissions</strong> : Authorization for the account</li></ul></span>\",\n
    \   \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User defined name for the DATADOG account\",\n
    \     \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name cannot
    contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"API_KEY\":{\n      \"TOOLTIP\":\"DATADOG Api Key\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"API key cannot be empty\"\n      }\n    },\n    \"APPLICATION_KEY\":{\n
    \     \"TOOLTIP\":\"DATADOG Application Key\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Application Key cannot be empty\"\n      }\n    }\n  },\n
    \ \"DYNATRACE\":{\n    \"HEADER\": \"Dynatrace\",\n    \"BODY\":\"<span><ul><li><strong>Account
    Name</strong> : User defined name for the Dynatrace account</li><li><strong>Url</strong>
    : Dynatrace URL. For example, https://www.dynatrace.com</li><li><strong>Api Token</strong>
    : Dynatrace Personal Access Token</li><li><strong>Permissions</strong> : Authorization
    for the account</li></ul></span>\",\n    \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User
    defined name for the Dynatrace account\",\n      \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"END_POINT\":{\n      \"TOOLTIP\":\"Dynatrace URL\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Endpoint Url cannot be empty\",\n        \"invalidUrl\":
    \"Endpoint URL is invalid\"\n      }\n    },\n    \"API_TOKEN\":{\n      \"TOOLTIP\":\"Dynatrace
    Personal Access Token\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Api
    Token cannot be empty\"\n      }\n    }\n  },\n  \"ELASTICSEARCH\":{\n    \"HEADER\":
    \"Elasticsearch\",\n    \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined
    account name for your Elasticsearch access.</li><li><strong>Endpoint</strong>: Elasticsearch
    host address, from which you access the Elasticsearch</li><li><strong>Username</strong>:
    Elasticsearch username </li><li><strong>Password</strong>: Elasticsearch password</li><li><strong>Kibana
    Endpoint</strong>: Elasticsearch Kibana host address, from which you access the
    Elasticsearch Kibana</li><li><strong>Kibana username</strong>: Elasticsearch Kibana
    username</li><li><strong>Kibana Password</strong>: Elasticsearch Kibana password</li><span>\",\n
    \   \"ACCOUNTNAME\":{\n      \"TOOLTIP\":\"User-defined account name for your Elasticsearch
    access.\",\n      \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account
    Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \   },\n    \"ENDPOINT\":{\n      \"TOOLTIP\":\"Elasticsearch host address, from
    which you access the Elasticsearch\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Elastic
    End Point cannot be empty\",\n        \"invalidUrl\": \"Elastic End Point URL is
    invalid\"\n      }\n    },\n    \"USERNAME\":{\n      \"TOOLTIP\":\"Elasticsearch
    username \",\n      \"VALIDATION_MESSAGE\":{\n        \"noSpecialCharacters\": \"User
    Name cannot contain special characters other than - and _\",\n        \"cannotContainSpace\":\"User
    Name cannot contain space\",\n        \"startingFromNumber\": \"User Name cannot
    start with numbers\"\n      }\n    },\n    \"PASSWORD\":{\n      \"TOOLTIP\":\"Elasticsearch
    password\",\n      \"VALIDATION_MESSAGE\":{\n        \"required\":\"Password cannot
    be empty\"\n      }\n    },\n    \"KIBANAENDPOINT\":{\n      \"TOOLTIP\":\"Elasticsearch
    Kibana host address, from which you access the Elasticsearch Kibana\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Kibana End Point cannot be empty\",\n        \"invalidUrl\":
    \"Kibana End Point URL is invalid\"\n      }\n    },\n    \"KIBANAUSERNAME\":{\n
    \     \"TOOLTIP\":\"Elasticsearch Kibana username\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"noSpecialCharacters\": \"Kibana User Name cannot contain special characters
    other than - and _\",\n        \"cannotContainSpace\":\"Kibana User Name cannot
    contain space\",\n        \"required\":\"Kibana User Name cannot be empty\",\n        \"startingFromNumber\":
    \"Kibana User Name cannot start with numbers\"\n      }\n    },\n    \"KIBANAPASSWORD\":{\n
    \     \"TOOLTIP\":\"Elasticsearch Kibana password\",\n      \"VALIDATION_MESSAGE\":{\n
    \       \"required\":\"Kibana Password cannot be empty\"\n      }\n    }\n  },\n
    \   \"GRAPHITE\":{\n      \"HEADER\": \"Graphite\",\n      \"BODY\":\"<span><li><strong>Account
    Name</strong>: User-defined account name for your Graphite access.</li><li><strong>Endpoint</strong>:
    Graphite host address, from which you access the Graphite </li></span>\",\n      \"ACCOUNTNAME\":{\n
    \       \"TOOLTIP\":\"User-defined account name for your Graphite access.\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"URL\":{\n        \"TOOLTIP\":\"Graphite
    host address, from which you access the Graphite \",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"End Point cannot be empty\",\n          \"invalidUrl\":
    \"End Point URL is invalid\"\n        }\n      }\n    },\n    \"GRAYLOG\":{\n      \"HEADER\":
    \"GRAYLOG\",\n      \"BODY\":\"<span><ul><li><strong>Account Name</strong>: User-defined
    account name for your Graylog access.</li><li><strong>Endpoint</strong>: Graylog
    host address, from which you access the Graylog </li><li><strong>Token</strong>:
    GrayLog Personal Access Token. To generate a token, go to Greylog -> System / Users
    -> Users Overview, select a user and click on Edit tokens  </li></ul></span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined account name for your
    Graylog access.\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"ENDPOINT\":{\n        \"TOOLTIP\":\"Graylog host address, from
    which you access the Graylog \",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"End
    Point cannot be empty\",\n          \"invalidUrl\": \"End Point URL is invalid\"\n
    \       }\n      },\n      \"TOKEN\":{\n        \"TOOLTIP\":\"GrayLog Personal Access
    Token. To generate a token, go to Greylog -> System / Users -> Users Overview, select
    a user and click on Edit tokens\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Token
    cannot be empty\"\n        }\n      }\n    },\n    \"NEWRELIC\":{\n      \"HEADER\":
    \"New Relic\",\n      \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined
    account name for your NewRelic access.</li><li><strong>API Key</strong>: Provide
    your Newrelic User Key. This can be generated from New Relic's API keys UI</li><li><strong>Application
    Key</strong>: The application key identifies which account the incoming data belongs
    to.</li><li><strong>Account ID</strong>: Provide account ID to identify the account
    </li><li><strong>Query Key</strong>: Provide a query key to filter the data </li></span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined account name for your
    NewRelic access.\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"APIKEY\":{\n        \"TOOLTIP\":\"Provide your Newrelic User Key.
    This can be generated from New Relic's API keys UI\",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"API key cannot be empty\"\n        }\n      },\n      \"APPLICATIONKEY\":{\n
    \       \"TOOLTIP\":\"The application key identifies which account the incoming
    data belongs to.\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Application
    Key cannot be empty\"\n        }\n      },\n      \"ACCOUNTID\":{\n        \"TOOLTIP\":\"Provide
    account ID to identify the account \",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Account
    Id cannot be empty\"\n        }\n      },\n      \"QUERYKEY\":{\n        \"TOOLTIP\":\"Provide
    a query key to filter the data \",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Query
    Key cannot be empty\"\n        }\n      },\n      \"TOKEN\":{\n        \"TOOLTIP\":\"The
    user's token\"\n      }\n    },\n    \"PROMETHEUS\":{\n      \"HEADER\": \"Prometheus\",\n
    \     \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined account name
    for your Prometheus access.</li><li><strong>Endpoint</strong>: Prometheus host address,
    from which you access the Prometheus</li><li><strong>Username</strong>: Prometheus
    username</li><li><strong>Password</strong>: Prometheus password</li></span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined account name for your
    Prometheus access.\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"ENDPOINT\":{\n        \"TOOLTIP\":\"Prometheus host address, from
    which you access the Prometheus\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"End
    Point cannot be empty\",\n          \"invalidUrl\": \"End Point URL is invalid\"\n
    \       }\n      },\n      \"USERNAME\":{\n        \"TOOLTIP\":\"Prometheus username\",\n
    \       \"VALIDATION_MESSAGE\":{\n          \"noSpecialCharacters\": \"User Name
    cannot contain special characters other than - and _\",\n          \"cannotContainSpace\":\"User
    Name cannot contain space\",\n          \"required\":\"User Name cannot be empty\",\n
    \         \"startingFromNumber\": \"User Name cannot start with numbers\"\n        }\n
    \     },\n      \"PASSWORD\":{\n        \"TOOLTIP\":\"Prometheus password\",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"Password cannot be empty\"\n        }\n      }\n    },\n
    \   \"SPLUNK\":{\n      \"HEADER\": \"Splunk\",\n      \"BODY\":\"<span><li><strong>Account
    Name</strong>: User-defined account name for your Splunk access.</li><li><strong>Splunk
    Url</strong>: Splunk host address, from which you access the Splunk</li><li><strong>Username</strong>:
    The Splunk's username</li><li><strong>Password</strong>: Splunk's password</li><li><strong>Splunk
    DashBoard Url </strong>: Splunk Dashboard URL that you want to access </li><span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined account name for your
    Splunk access.\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"END_POINT\":{\n        \"TOOLTIP\":\"Splunk host address, from
    which you access the Splunk\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Splunk
    Url  cannot be empty\",\n          \"invalidUrl\": \"Splunk URL is invalid\"\n        }\n
    \     },\n      \"PASSWORD\":{\n        \"TOOLTIP\":\"Splunk's password\",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"Password cannot be empty\"\n        }\n      },\n      \"USER_NAME\":{\n
    \       \"TOOLTIP\":\"Splunk's user name\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"DASHBOARD_ENDPOINT\":{\n
    \       \"TOOLTIP\":\"Splunk Dashboard URL that you want to access \",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"Splunk DashBoard Url cannot be empty\",\n          \"invalidUrl\":
    \"Splunk DashBoard URL is invalid\"\n        }\n      }\n    },\n    \"STACKDRIVER\":{\n
    \     \"HEADER\": \"Stackdriver\",\n      \"BODY\":\"<span><ul><p>Google Cloud's
    operations suite (formerly Stackdriver) provides Integrated monitoring, logging,
    and trace managed services for applications and systems running on Google Cloud
    and beyond.</p><li><strong>Account Name</strong> : User defined name for the Stackdriver
    account</li><li><strong>Encrypted Key</strong> : Stackdriver Encrypted Key file</li><li><strong>Permissions</strong>:
    Authorization for the account</li></ul></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User
    defined name for the Stackdriver account\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"KEY_FILE\":{\n
    \       \"TOOLTIP\":\"Stackdriver Encrypted Key file\",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"Encrypted Key File cannot be empty\"\n        }\n      }\n
    \   },\n    \"SUMOLOGIC\":{\n      \"HEADER\": \"Sumo Logic\",\n      \"BODY\":\"<span><ul><li><strong>Account
    Name</strong>: User defined name for the Sumologic account</li><li><strong>Access
    ID</strong>: Sumologic Access Id. You can generate Access Id (Administration > Security
    > Access Keys)</li><li><strong>Access Key</strong>: Sumologic Access Key. You can
    generate Access Id (Administration > Security > Access Keys)</li><li><strong>Zone</strong>:
    Sumologic Zone</li></ul></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User
    defined name for the Sumologic account\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"ACCESSID\":{\n        \"TOOLTIP\":\"sumologic Access Id. You can
    generate Access Id (Administration > Security > Access Keys)\",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"Access Id cannot be empty\"\n        }\n      },\n      \"ACCESSKEY\":{\n
    \       \"TOOLTIP\":\"sumologic Access Key. You can generate Access Id (Administration
    > Security > Access Keys)\",\n        \"VALIDATION_MESSAGE\":{\n      \"required\":\"Access
    key cannot be empty\"\n        }\n      },\n      \"ZONE\":{\n        \"TOOLTIP\":\"sumologic
    Zone\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Zone
    cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Zone
    cannot contain space\",\n      \"required\":\"Zone cannot be empty\",\n      \"startingFromNumber\":
    \"Zone cannot start with numbers\"\n    }\n      }\n    },\n    \n    \"VMWARETANZU\":{\n
    \     \"HEADER\": \"VMWare Tanzu Observability\",\n      \"BODY\":\"<span><ul><li><strong>Account
    Name</strong>: User-defined account name for your VMWare Tanzu access</li><li><strong>Endpoint</strong>:
    VMWare Tanzu host address, from which you access the VMWare Tanzu</li><li><strong>Email</strong>:
    Provide the user's registered and authorized email</li><li><strong>API token</strong>:
    The user's API token. To generate an API token, log in to your instance  as user
    with the API Tokens permission. Click the gear icon  at the top right of the toolbar
    and select your user name. On the API Access tab, click Generate. </li></ul></span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined account name for your
    VMWare Tanzu access\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"END_POINT\":{\n        \"TOOLTIP\":\"VMWare Tanzu host address,
    from which you access the VMWare Tanzu\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"End
    Point cannot be empty\",\n          \"invalidUrl\": \"End Point is invalid\"\n        }\n
    \     },\n      \"EMAIL\":{\n        \"TOOLTIP\":\"Provide the user's registered
    and authorized email\",\n        \"VALIDATION_MESSAGE\":{\n          \"email\":\"Email
    is invalid\",\n          \"required\":\"Email cannot be empty\"\n        }\n      },\n
    \     \"API_TOKEN\":{\n        \"TOOLTIP\":\"The user's API token. To generate an
    API token, log in to your instance  as user with the API Tokens permission. Click
    the gear icon  at the top right of the toolbar and select your user name. On the
    API Access tab, click Generate. \",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Api
    Token cannot be empty\"\n        }\n      }\n    },\n    \"MSTEAMS\":{\n      \"HEADER\":
    \"Microsoft Teams\",\n      \"BODY\":\"\"\n    },\n    \"SLACK\":{\n      \"HEADER\":
    \"Slack\",\n      \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined
    account name for your Slack access.</li><li><strong>BotName</strong>: Provide the
    bot name where you want to receive notifications in slack</li><li><strong>Token</strong>:
    The user's token to authenticate with slack.</li><li><strong>Validate</strong>:
    This button controls the validation of the configuration. If it is on, ISD will
    check the configuration for errors before saving it. If it is off, ISD will save
    the configuration as it is, without any validation. We recommend keeping the button
    on unless you are sure that the configuration is correct and does not need validation.</li></span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User defined name for the Slack account\",\n
    \       \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\": \"Account Name
    cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"BOTNAME\":{\n        \"TOOLTIP\":\"Slack Bot Name\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Bot Name cannot contain special characters other
    than -\",\n      \"cannotContainSpace\":\"Bot Name cannot contain space\",\n      \"required\":\"Bot
    Name cannot be empty\",\n      \"startingFromNumber\": \"Bot Name cannot start with
    numbers\"\n    }\n      },\n      \"TOKEN\":{\n        \"TOOLTIP\":\"Slack Personal
    Access Token\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Token
    cannot be empty\"\n        }\n      },\n      \"SPINNAKERTOGGLE\":{\n        \"TOOLTIP\":\"Switch
    On this toggle to configure the resource in a gitops enabled Spinnaker instance\",\n
    \       \"VALIDATION_MESSAGE\":{}\n      },\n  \"VALIDATETOGGLE\":{\n    \"TOOLTIP\":\"This
    button controls the validation of the configuration. If it is on, ISD will check
    the configuration for errors before saving it. If it is off, ISD will save the configuration
    as it is, without any validation. We recommend keeping the button on unless you
    are sure that the configuration is correct and does not need validation.\",\n    \"VALIDATION_MESSAGE\":{}\n
    \ }\n    },\n    \"OPA\":{\n      \"HEADER\": \"OPA\",\n      \"BODY\":\"<span><li><strong>Account
    Name</strong>: User-defined account name for your OPA server access.</li><li><strong>EndPoint</strong>:
    OPA server host address, <span>such as https://opa:8181</span></li></span>\",\n
    \     \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined account name for your
    OPA server access\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"ENDPOINT\":{\n        \"TOOLTIP\":\"OPA server host address, such
    as https://opa:8181\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"End
    Point cannot be empty\",\n          \"invalidUrl\": \"End Point URL is invalid\"\n
    \       }\n      }\n    },\n    \"AQUAWAVE\":{\n      \"HEADER\": \"Aqua Wave\",\n
    \     \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined account name
    for your Aqua Wave access.</li><li><strong>Username</strong>: The Aquawave username</li><li><strong>Token</strong>:
    The user's token.</li></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined
    account name for your Aqua Wave access.\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"USERNAME\":{\n        \"TOOLTIP\":\"The Aquawave username\",\n
    \       \"VALIDATION_MESSAGE\":{\n          \"noSpecialCharacters\": \"User Name
    cannot contain special characters other than - and _\",\n          \"cannotContainSpace\":\"User
    Name cannot contain space\",\n          \"required\":\"User Name cannot be empty\",\n
    \         \"startingFromNumber\": \"User Name cannot start with numbers\"\n        }\n
    \     },\n      \"TOKEN\":{\n        \"TOOLTIP\":\"Aqua Wave Personal Access Token\",\n
    \       \"VALIDATION_MESSAGE\":{\n          \"required\":\"Bearer token cannot be
    empty\"\n        }\n      }\n    },\n    \"APPSCAN\":{\n      \"HEADER\": \"HCL
    AppScan\",\n      \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined
    account name for your HCL AppScan access.</li><li><strong>Token</strong>: The user's
    token</li></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined
    account name for your HCL AppScan access.\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"TOKEN\":{\n
    \       \"TOOLTIP\":\"The user's personal access token \",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"required\":\"Bearer token cannot be empty\"\n        }\n      }\n    },\n
    \   \"JFROG\":{\n      \"HEADER\": \"JFrog XRay Scanning\",\n      \"BODY\":\"<span><li><strong>Account
    Name</strong>: User-defined account name for your Jfrog Xray access.</li><li><strong>Endpoint</strong>:
    Your Jfrog Xray host address, from which you access the Jfrog Xray instance</li><li><strong>Token</strong>:
    The user's token.</li></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined
    account name for your Jfrog Xray access.\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"ENDPOINT\":{\n
    \       \"TOOLTIP\":\"Jfrog Xray host address, from which you access the Jfrog Xray
    instance\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Endpoint
    cannot be empty\",\n          \"invalidUrl\": \"Endpoint URL is invalid\"\n        }\n
    \     },\n      \"TOKEN\":{\n        \"TOOLTIP\":\"The user's token from jfrog xray
    to authenticate\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Token
    cannot be empty\"\n        }\n      }\n    },\n    \"PRISMACLOUD\":{\n      \"HEADER\":
    \"Prisma Cloud\",\n      \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined
    account name for your Prisma Cloud access.</li><li><strong>Host Url</strong>: Your
    Prisma Cloud host address, from which you access the Prisma Cloud instance</li><li><strong>Access
    Key ID</strong>: The user's access key who has access to the Prisma Cloud. If you
    are unsure, consult your Prisma Cloud administrator to get an access key.</li><li><strong>Secret
    key</strong>: The user's secret key</li></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User-defined
    account name for your Prisma Cloud access.\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"HOSTURL\":{\n
    \       \"TOOLTIP\":\"Prisma Cloud host address, from which you access the Prisma
    Cloud instance\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Host
    URL cannot be empty\",\n          \"invalidUrl\": \"Host URL is invalid\"\n        }\n
    \     },\n      \"APPLICATIONURL\":{\n        \"TOOLTIP\":\"Prisma Cloud Application
    URL\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Application URL
    cannot be empty\",\n          \"invalidUrl\": \"Application URL is invalid\"\n        }\n
    \     },\n      \"ACCESSKEYID\":{\n        \"TOOLTIP\":\"The user's access key who
    has access to the Prisma Cloud. If you are unsure, consult your Prisma Cloud administrator
    to get an access key.\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Access
    Key Id cannot be empty\"\n        }\n      },\n      \"SECRETKEY\":{\n        \"TOOLTIP\":\"The
    user's secret key\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Secret
    Key cannot be empty\"\n        }\n      }\n    },\n    \"SONARQUBE\":{\n      \"HEADER\":
    \"SonarQube\",\n      \"BODY\":\"<span><li><strong>Account Name</strong>: User-defined
    account name for your Sonarqube access. </li><li><strong>Host Url</strong>: Sonarqube
    host address, from which you access the Sonaqube instance</li><li><strong>Token</strong>:
    The user's token (it is optional)</li></span>\",\n      \"ACCOUNTNAME\":{\n        \"TOOLTIP\":\"User
    defined name for the SonarQube account\",\n        \"VALIDATION_MESSAGE\":{\n      \"noSpecialCharacters\":
    \"Account Name cannot contain special characters other than -\",\n      \"cannotContainSpace\":\"Account
    Name cannot contain space\",\n      \"required\":\"Account Name cannot be empty\",\n
    \     \"startingFromNumber\": \"Account Name cannot start with numbers\"\n    }\n
    \     },\n      \"HOSTURL\":{\n        \"TOOLTIP\":\"Sonarqube host address, from
    which you access the Sonaqube instance\",\n        \"VALIDATION_MESSAGE\":{\n          \"required\":\"Host
    URL cannot be empty\",\n          \"invalidUrl\": \"Host URL is invalid\"\n        }\n
    \     },\n      \"TOKEN\":{\n        \"TOOLTIP\":\"The user's token (it is optional)\",\n
    \       \"VALIDATION_MESSAGE\":{\n          \"required\":\"Token cannot be empty\"\n
    \       }\n      }\n    },\n    \"AUTOPILOT\":{\n      \"HEADER\": \"Autopilot\",\n
    \     \"BODY\": \"<div><p>This page allows you to configure autopilot, which can
    be used as a connector in the approval stage. To include verification information
    in an approval gate, add a new row in the connector configuration, selct 'Verification'
    from the connector dropdwon, select your Autopilot account and provide the Canary
    ID.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account
    Name</strong>: User defined name for the Autopilot account<span></span></li><li><strong>User
    Name</strong>: <span>Autopilot (ISD) User Name</span></li><li><strong>Permissions</strong>:
    <span>Authorization for the account</span></li></ul></div>\",\n      \"ACCOUNTNAME\":{\n
    \       \"TOOLTIP\":\"User defined name for the Autopilot account\",\n        \"VALIDATION_MESSAGE\":{\n
    \     \"noSpecialCharacters\": \"Account Name cannot contain special characters
    other than -\",\n      \"cannotContainSpace\":\"Account Name cannot contain space\",\n
    \     \"required\":\"Account Name cannot be empty\",\n      \"startingFromNumber\":
    \"Account Name cannot start with numbers\"\n    }\n      },\n      \"USERNAME\":{\n
    \       \"TOOLTIP\":\" Autopilot User Name\",\n        \"VALIDATION_MESSAGE\":{\n
    \         \"noSpecialCharacters\": \"User Name cannot contain special characters
    other than - and _\",\n          \"cannotContainSpace\":\"User Name cannot contain
    space\",\n          \"required\":\"User Name cannot be empty\",\n          \"startingFromNumber\":
    \"User Name cannot start with numbers\"\n        }\n      }\n    }\n},\n  \"UNCHANGED_FORM\":
    \"Form is unchanged. Please make modifications in the form to enable the button.\",\n
    \ \"INVALID_FORM\": \"Few fields are mandatory or invalid. Please fill the form
    to enable the button.\",\n  \"NO_WRITE_ACCESS\": \"You have only read permission.
    Please check with your administrator for updating permissions.\",\n  \"METRIC_TEMPLATE\":
    {\n    \"APM_INFRA\": {\n      \"TEMPLATE_NAME\": {\n        \"TOOLTIP\": \"The
    unique name of the template for identification\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Template Name cannot be empty\",\n          \"noSpecialCharacters\":
    \"Template Name cannot contain special characters\",\n          \"cannotContainSpace\":
    \"Template Name cannot contain space\",\n          \"startingFromNumber\": \"Template
    Name cannot start with number\",\n          \"maxlength\": \"Template name should
    not have more than 63 characters!\",\n          \"exists\": \"Template already exists\"\n
    \       }\n      },\n      \"APM_MONITORING_PROVIDER\": {\n        \"TOOLTIP\":
    \"Select an APM datasource provider of choice\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"APM_ACCOUNT\": {\n        \"TOOLTIP\": \"Select the account
    of interest in the configured APM datasource \",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"APM_APPLICATION\": {\n        \"TOOLTIP\": \"Select the application
    of interest that you want to monitor\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"APM_API_SELECTION\": {\n        \"TOOLTIP\": \"Select the relevant API metrics
    to monitor \",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"INFRA_MONITORING_PROVIDER\":
    {\n        \"TOOLTIP\": \"Select an INFRA metrics datasource provider of choice\",\n
    \       \"VALIDATION_MESSAGE\": {}\n      },\n      \"INFRA_ACCOUNT\": {\n        \"TOOLTIP\":
    \"Select the account of interest in the configured INFRA metrics datasource \",\n
    \       \"VALIDATION_MESSAGE\": {}\n      },\n      \"INFRA_METRIC_GROUPS\": {\n
    \       \"TOOLTIP\": \"Metrics groups organized as groups for quick overview on
    each infrastructure component\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"FILTER_KEY\": {\n        \"TOOLTIP\": \"A metric scope placeholder to filter
    the scope of the metric\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Filter Key cannot be empty\",\n          \"cannotContainSpace\": \"Filter Key
    cannot contain space\"\n        }\n      },\n      \"BASELINE\": {\n        \"TOOLTIP\":
    \"A unique metric scope to identify the baseline metric\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Baseline cannot be empty\",\n          \"cannotContainSpace\":
    \"Baseline cannot contain space\"\n        }\n      },\n      \"NEW_RELEASE\": {\n
    \       \"TOOLTIP\": \"A unique metric scope to identify the canary metric\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"New Release cannot
    be empty\",\n          \"cannotContainSpace\": \"New Release cannot contain space\"\n
    \       }\n      },\n      \"NORMALIZATION\": {\n        \"TOOLTIP\": \"The selected
    Load metric will be dividing all the metrics to make the metrics more comparable
    to each other\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"THRESHOLD\":
    {\n        \"TOOLTIP\": \"Select 'Hard' mode for a stringent analysis and 'Easy'
    mode for a more lenient analysis\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"SPECIFY_CRITICAL_WATCHLIST\": {\n        \"TOOLTIP\": \"Metrics marked as
    critical, will affect the overall verification score if they fail Metrics marked
    as in watchlist will be shown first in the metric analysis report\",\n        \"VALIDATION_MESSAGE\":
    {}\n      }\n    },\n    \"CUSTOM\": {\n      \"TEMPLATE_NAME\": {\n        \"TOOLTIP\":
    \"The unique name of the template for identification\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Template Name cannot be empty\",\n          \"noSpecialCharacters\":
    \"Template Name cannot contain special characters\",\n          \"cannotContainSpace\":
    \"Template Name cannot contain space\",\n          \"startingFromNumber\": \"Template
    Name cannot start with number\",\n          \"maxlength\": \"Template name should
    not have more than 63 characters!\",\n          \"exists\": \"Template already exists\"\n
    \       }\n      },\n      \"DATA_SOURCE\": {\n        \"TOOLTIP\": \"Select a datasource
    provider of choice\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Data source cannot be empty\"\n        }\n      },\n      \"ACCOUNT\": {\n        \"TOOLTIP\":
    \"Select the account of interest in the configured datasource \",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Account cannot be empty\"\n        }\n      },\n      \"FILTER_KEY\":
    {\n        \"TOOLTIP\": \"Metric Scope Placeholder will be replaced by Baseline
    & New Release values in the Metric Query; For example, Scope Placeholder “pod_name”
    will be replaced by Baseline & New Release values in the metric query avg(container_memory_usage_bytes{pod=~'pod_name',container!=''})
    for getting baseline & New Release metrics data respectively from the monitoring
    provider\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\": \"Filter
    Key cannot be empty\",\n          \"cannotContainSpace\": \"Filter Key cannot contain
    space\"\n        }\n      },\n      \"BASELINE\": {\n        \"TOOLTIP\": \"Unique
    metric scope to identify the baseline metric data\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Baseline cannot be empty\",\n          \"cannotContainSpace\":
    \"Baseline cannot contain space\"\n        }\n      },\n      \"NEW_RELEASE\": {\n
    \       \"TOOLTIP\": \"Unique metric scope to identify the canary metric data\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"New Release cannot
    be empty\",\n          \"cannotContainSpace\": \"New Release cannot contain space\"\n
    \       }\n      },\n      \"ADD_NEW_QUERY\": {\n        \"TOOLTIP\": \"Add New
    Query\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"QUERY_SELECTION\":
    {\n        \"TOOLTIP\": \"Select the relevant metrics to monitor \",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"QUERY_NAME\": {\n        \"TOOLTIP\": \"A meaningful name
    given to a query or a group of similar queries \",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Query Name cannot be empty\"\n        }\n      },\n
    \     \"QUERY_STRING\": {\n        \"TOOLTIP\": \"Query to fetch the metric from
    the data source provider\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Query String cannot be empty\"\n        }\n      },\n      \"RISK_DIRECTION\":
    {\n        \"TOOLTIP\": \"Direction in which the metric difference is allowed to
    expand\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"THRESHOLD\": {\n
    \       \"TOOLTIP\": \"Percentage difference beyond which the Metric is treated
    as FAIL\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n      \"CRITICAL\": {\n
    \       \"TOOLTIP\": \"Critical\",\n        \"VALIDATION_MESSAGE\": {}\n      },\n
    \     \"WATCHLIST\": {\n        \"TOOLTIP\": \"Metrics marked as in watchlist will
    be shown first in the metric analysis report\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"WEIGHT\": {\n        \"TOOLTIP\": \"Numerical importance given
    to a metric; it can range from 0 as lowest to 1 as the highest\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"CRITICALITY\": {\n        \"TOOLTIP\": \"Normal is selected
    to remove the metric from the metric group for score calculation if it has no data,
    Critical is selected to fail the entire analysis if this metric fails or has no
    data, Must Have Data is used to fail a metric if data is missing\",\n        \"VALIDATION_MESSAGE\":
    {}\n      },\n      \"NAN_STRATEGY\": {\n        \"TOOLTIP\": \"Handles NaN values
    which can occur if there is no data in a particular interval for metric data. \",\n
    \       \"VALIDATION_MESSAGE\": {}\n      }\n    }\n  },\n  \"USAGE_INSIGHTS\":
    {\n    \"APPLICATIONS\": {\n      \"TOOLTIP\": \"Total number of applications and
    active applications over time\"\n    },\n    \"PIPELINES\": {\n      \"TOOLTIP\":
    \"Total number of pipelines and active pipelines over time\"\n    },\n    \"PIPELINES_WITH_INTELLIGENT_GATES\":
    {\n      \"TOOLTIP\": \"Total number of pipelines and the number pipelines with
    intelligent gates(approval, policy and verification gates) over time\"\n    },\n
    \   \"INTELLIGENT_GATES_BREAKDOWN\": {\n      \"TOOLTIP\": \"This graph explains
    the intelligent gates usage in pipelines over time.\"\n    },\n    \"GATES_USED\":
    {\n      \"TOOLTIP\": \"This graph explains the intelligent gates executions over
    time.\"\n    },\n    \"USERS\": {\n      \"TOOLTIP\": \"The total number of registered
    users to this ISD instance Vs the number of active users over time\"\n    }\n  },\n
    \ \"DELIVERY_INSIGHTS\": {\n    \"PIPELINES\": {\n      \"TOOLTIP\": \"Number of
    pipeline executions over time\"\n    },\n    \"MOST_ACTIVE_PIPELINES\": {\n      \"TOOLTIP\":
    \"Pipelines which have executed most number of times\"\n    },\n    \"MOST_SUCCESSFUL_PIPELINES\":
    {\n      \"TOOLTIP\": \"Pipelines which have successfully executed most number of
    times\"\n    },\n    \"MOST_FAILED_PIPELINES\": {\n      \"TOOLTIP\": \"Pipelines
    which have failed most number of times\"\n    },\n    \"FASTEST_PIPELINES\": {\n
    \     \"TOOLTIP\": \"Pipelines with fastest execution times\"\n    },\n    \"SLOWEST_PIPELINES\":
    {\n      \"TOOLTIP\": \"Pipelines with slowest execution times\"\n    },\n    \"MANUAL_JUDGMENT\":
    {\n      \"TOOLTIP\": \"Pipelines with manual judgement having slowest execution
    times\"\n    }\n  },\n  \"ACCESS_MANAGEMENT\": {\n    \"ADMINISTRATOR\": {\n      \"INFO\":
    \"Super Administrator Groups will not appear in the dropdown since their Access
    Permissions cannot be modified. Administrators will have full Access to all Resources.\",\n
    \     \"TOOLTIP\": \"Groups with Administration Permissions\"\n    },\n    \"USER_ROLE_LISTING\":
    {\n      \"HEADER\": \"ROLE MANAGEMENT\",\n      \"BODY\": \"Users should be assigned
    user roles only if they need global access to one or more resources.\"\n    },\n
    \   \"USER_ROLE_CREATION\": {\n      \"ROLENAME\": {\n        \"TOOLTIP\": \"\",\n
    \       \"VALIDATION_MESSAGE\": {\n          \"required\": \"Role Name cannot be
    empty\",\n          \"cannotContainSpace\": \"Role Name cannot contain space\",\n
    \         \"noSpecialCharacters\": \"Role Name cannot contain special character\",\n
    \         \"startingFromNumber\": \"Role Name should not start with number\"\n        }\n
    \     },\n      \"USER_GROUPS\": {\n        \"TOOLTIP\": \"\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Groups cannot be empty\"\n        }\n      },\n      \"PERMISSIONS\":
    {\n        \"VALIDATION_MESSAGE\": {\n          \"required\": \"Atleast one feature
    has to be enabled with permissions\"\n        }\n      }\n    },\n    \"FEATURE_VISIBILTY_LISTING\":
    {\n      \"HEADER\": \"FEATURE FLAG MANAGEMENT\",\n      \"BODY\": \"Feature Visibility
    is used for scenarios where one or more user groups need exclusive access to a specific
    feature. For example, the 'Compliance Team' should only access the Policy Management
    feature. Administrators can enable the feature flag for the compliance team user
    group. The feature visibility function will ensure that the policy management feature
    is not visible for all other user groups.\"\n    },\n    \"FEATURE_VISIBILTY_CREATION\":
    {\n      \"ROLENAME\": {\n        \"TOOLTIP\": \"\",\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Role Name cannot be empty\",\n          \"cannotContainSpace\":
    \"Role Name cannot contain space\",\n          \"noSpecialCharacters\": \"Role Name
    cannot contain special character\",\n          \"startingFromNumber\": \"Role Name
    should not start with number\"\n        }\n      },\n      \"USER_GROUPS\": {\n
    \       \"TOOLTIP\": \"\",\n        \"VALIDATION_MESSAGE\": {\n          \"required\":
    \"Groups cannot be empty\"\n        }\n      },\n      \"PERMISSIONS\": {\n        \"VALIDATION_MESSAGE\":
    {\n          \"required\": \"Atleast one feature has to be enabled\"\n        }\n
    \     }\n    }\n  },\n  \"LOG_TEMPLATE\": {\n    \"STRING_PATTERN\": {\n      \"TOOLTIP\":
    \"String Pattern\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"String
    Pattern cannot be empty\"\n      }\n    },\n    \"LOG_TOPICS\": {\n      \"TOOLTIP\":
    \"Strings that appear in logs with their characterization\"\n    },\n    \"LOG_TAGS\":
    {\n      \"TOOLTIP\": \"Create custom tags based on business logic.\"\n    },\n
    \   \"CHARACTERIZATION_TOPIC\": {\n      \"TOOLTIP\": \"Characterization Topic\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Characterization Topic
    cannot be empty\"\n      }\n    },\n    \"TYPE\": {\n      \"TOOLTIP\": \"Type\",\n
    \     \"VALIDATION_MESSAGE\": {}\n    },\n    \"ENABLE_CLUSTER_TAG\": {\n      \"TOOLTIP\":
    \"Create custom tags based on business logic.\",\n      \"VALIDATION_MESSAGE\":
    {}\n    },\n    \"CLUSTER_TAG_STRING\": {\n      \"TOOLTIP\": \"The string pattern
    that appears in logs\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Cluster Tag String cannot be empty\"\n      }\n    },\n    \"CLUSTER_TAG\": {\n
    \     \"TOOLTIP\": \"Cluster Tag\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Cluster Tag cannot be empty\"\n      }\n    },\n    \"LOG_TEMPLATE_NAME\": {\n
    \     \"TOOLTIP\": \"Log Template Name\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Template Name cannot be empty\",\n        \"noSpecialCharacters\": \"Template
    Name cannot contain special characters\",\n        \"cannotContainSpace\": \"Template
    Name cannot contain space\",\n        \"startingFromNumber\": \"Template Name cannot
    start with number\",\n        \"maxlength\": \"Template name should not have more
    than 63 characters!\",\n        \"exists\": \"Template already exists\"\n      }\n
    \   },\n    \"PROVIDER\": {\n      \"TOOLTIP\": \"Data source for Risk Analysis\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Provider cannot be empty\"\n
    \     }\n    },\n    \"LOG_ACCOUNT\": {\n      \"TOOLTIP\": \"Account of the Log
    provider; Refer Integrations tab under Setup\",\n      \"VALIDATION_MESSAGE\": {\n
    \       \"required\": \"Log Account cannot be empty\"\n      }\n    },\n    \"QUERY_FILTER_KEY\":
    {\n      \"TOOLTIP\": \"Unique Key which identify logs to be processed in the Index\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Query Filter Key cannot
    be empty\",\n        \"cannotContainSpace\": \"Query Filter Key cannot contain space\"\n
    \     }\n    },\n    \"BASELINE\": {\n      \"TOOLTIP\": \"Unique value which identify
    baseline logs in the Index\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Baseline cannot be empty\",\n        \"cannotContainSpace\": \"Baseline cannot
    contain space\"\n      }\n    },\n    \"NEW_RELEASE\": {\n      \"TOOLTIP\": \"Unique
    value which identify New Release logs in the Index\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"New Release cannot be empty\",\n        \"cannotContainSpace\":
    \"New Release cannot contain space\"\n      }\n    },\n    \"RESPONSE_KEYWORDS\":
    {\n      \"TOOLTIP\": \"Field name in the Index containing logs to be processed\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Response Keywords cannot
    be empty\",\n        \"cannotContainSpace\": \"Response Keywords cannot contain
    space\"\n      }\n    },\n    \"TIMESTAMP_KEY\": {\n      \"TOOLTIP\": \"Unique
    Key which identify the timestamp for log; this field is optional; by default, it
    is @timestamp for elasticsearch and timestamp for graylog\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"cannotContainSpace\": \"Timestamp Key cannot contain space\"\n      }\n
    \   },\n    \"AUTOBASELINE\": {\n      \"TOOLTIP\": \"ML based learning of the baseline
    from historic analysis\",\n      \"VALIDATION_MESSAGE\": {}\n    },\n    \"CONTEXTUAL_CLUSTER\":
    {\n      \"TOOLTIP\": \"Enable/disable cluster of unexpected events in similar context\",\n
    \     \"VALIDATION_MESSAGE\": {}\n    },\n    \"CONTEXTUAL_WINDOW_SIZE\": {\n      \"TOOLTIP\":
    \"Number of Log events to be seen in a Context. Allowed size in between 25 and 50\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"max\": \"Allowed size is in between 25
    to 50\",\n        \"min\": \"Allowed size is in between 25 to 50\"\n      }\n    },\n
    \   \"INFO_CLUSTER_SCORING\": {\n      \"TOOLTIP\": \"Enabling this option will
    include INFO clusters in scoring\",\n      \"VALIDATION_MESSAGE\": {}\n    },\n
    \   \"SENSITIVITY\": {\n      \"TOOLTIP\": \"Impact of Unexpected Issues on the
    log scoring\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Sensitivity
    cannot be empty\"\n      }\n    },\n    \"SCORING_ALGORITHM\": {\n      \"TOOLTIP\":
    \"Scoring Algorithm for Risk Analysis\",\n      \"VALIDATION_MESSAGE\": {}\n    },\n
    \   \"LOG_GROUP\": {\n      \"TOOLTIP\": \"Group of log streams that share the same
    retention, monitoring, and access control settings\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Log Group cannot be empty\",\n        \"cannotContainSpace\":
    \"Log Group cannot contain space\"\n      }\n    },\n    \"LOG_STREAM\": {\n      \"TOOLTIP\":
    \"Sequence of log events that share the same source\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Log Stream cannot be empty\",\n        \"cannotContainSpace\":
    \"Log Stream cannot contain space\"\n      }\n    },\n    \"REGION\": {\n      \"TOOLTIP\":
    \"Geographic area where AWS data center\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Region cannot be empty\"\n      }\n    },\n    \"INDEX_PATTERN\": {\n      \"TOOLTIP\":
    \"Index containing logs for processing\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\":
    \"Intex Pattern cannot be empty\",\n        \"cannotContainSpace\": \"Intex Pattern
    cannot contain space\"\n      }\n    },\n    \"CUSTOM_REGEX\": {\n      \"TOOLTIP\":
    \"Custom Regular Expression to filter the logs\",\n      \"VALIDATION_MESSAGE\":
    {}\n    },\n    \"REGULAR_EXPRESSION\": {\n      \"TOOLTIP\": \"Sequence of characters
    that specifies a search pattern\",\n      \"VALIDATION_MESSAGE\": {\n        \"cannotContainSpace\":
    \"Regular Expression cannot contain space\"\n      }\n    },\n    \"RESPONSE_KEY\":
    {\n      \"TOOLTIP\": \"Field name in the Index where regex to be searched\",\n
    \     \"VALIDATION_MESSAGE\": {}\n    },\n    \"STREAM_ID\": {\n      \"TOOLTIP\":
    \"The streams are a mechanism to route messages into categories in realtime while
    they are processed\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Stream
    ID cannot be empty\",\n        \"cannotContainSpace\": \"Stream ID cannot contain
    space\"\n      }\n    },\n    \"NAMESPACE\": {\n      \"TOOLTIP\": \"Namespace\",\n
    \     \"VALIDATION_MESSAGE\": {\n        \"required\": \"Namespace cannot be empty\",\n
    \       \"cannotContainSpace\": \"Namespace cannot contain space\"\n      }\n    },\n
    \   \"TEST_CASE_KEY\": {\n      \"TOOLTIP\": \"Field in the log index which holds
    the test case names\",\n      \"VALIDATION_MESSAGE\": {\n        \"required\": \"Test
    Case Key cannot be empty\",\n        \"cannotContainSpace\": \"Test Case Key cannot
    contain space\"\n      }\n    },\n    \"TEST_SUITE_KEY\": {\n      \"TOOLTIP\":
    \"Field in the log index which  holds the test suite names\",\n      \"VALIDATION_MESSAGE\":
    {\n        \"required\": \"Test Suite Key cannot be empty\",\n        \"cannotContainSpace\":
    \"Test Suite Key cannot contain space\"\n      }\n    }\n  }\n}\n\n"
kind: ConfigMap
metadata:
  name: oes-ui-config
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/templates/oes-ui/oes-ui-nginxconf.yaml
apiVersion: v1
data:
  nginx-quick-install.conf: |
    # For more information on configuration, see:
    #   * Official English Documentation: http://nginx.org/en/docs/
    #   * Official Russian Documentation: http://nginx.org/ru/docs/
  
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log debug;
    pid /tmp/nginx.pid;
  
    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;
  
    events {
        worker_connections 1024;
    }
  
    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
  
        access_log  /var/log/nginx/access.log  main;
  
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;
  
        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;
  
        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;
  
        server {
            listen       8080 default_server;
            #listen       [::]:8080 default_server;
            server_name  _;
            root /var/www/html;
  
            # Load configuration files for the default server block.
            include /etc/nginx/default.d/*.conf;
  
            location ^~ /deck/gate/ {
              proxy_pass http://oes-gate:8084/ ;
            }
  
            location ^~ /deck {
              proxy_pass http://spin-deck:9000/ ;
            }
  
            location ^~ /plugin-manifest.json {
              proxy_pass http://spin-deck:9000 ;
            }
  
            location ^~ /gate/ {
              proxy_pass http://oes-gate:8084/ ;
            }
  
            location ^~ /application {
              proxy_pass http://oes-ui:8080 ;
            }
  
            location ^~ /ui {
              try_files $uri $uri/ /ui/index.html;
            }
  
            # Go to Gate if you don't know what to do
            location / {
              proxy_pass http://oes-gate:8084/ ;
            }
  
  
        }
    }

kind: ConfigMap
metadata:
  name: oes-ui-nginxconf
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
---
# Source: oes/charts/minio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: oes/charts/openldap/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: oes/templates/oes-toolchain/toolChain-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tool-chain
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
# Source: oes/charts/minio/templates/post-install-prometheus-metrics-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-minio-update-prometheus-secret
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
      - update
      - patch
    resourceNames:
      - release-name-minio-prometheus
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
    resourceNames:
      - release-name-minio
---
# Source: oes/charts/spinnaker/templates/rbac/spinnaker-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spinnaker-role
rules:
  - apiGroups: ['']
    resources:
      [
        'namespaces',
        'events',
        'replicationcontrollers',
        'serviceaccounts',
        'pods/log',
      ]
    verbs: ['get', 'list']
  - apiGroups: ['']
    resources: ['pods', 'services', 'secrets', 'configmaps']
    verbs:
      [
        'create',
        'delete',
        'deletecollection',
        'get',
        'list',
        'patch',
        'update',
        'watch',
      ]
  - apiGroups: ['autoscaling']
    resources: ['horizontalpodautoscalers']
    verbs: ['list', 'get']
  - apiGroups: ['apps']
    resources: ['controllerrevisions', 'statefulsets']
    verbs: ['list']
  - apiGroups: ['extensions', 'apps']
    resources: ['deployments', 'replicasets', 'ingresses']
    verbs:
      [
        'create',
        'delete',
        'deletecollection',
        'get',
        'list',
        'patch',
        'update',
        'watch',
      ]
  # These permissions are necessary for halyard to operate. We use this role also to deploy Spinnaker itself.
  - apiGroups: ['']
    resources: ['services/proxy', 'pods/portforward']
    verbs:
      [
        'create',
        'delete',
        'deletecollection',
        'get',
        'list',
        'patch',
        'update',
        'watch',
      ]
  # These permissions are necessary for halyard to operate. We use this role also to deploy Spinnaker itself.
  - apiGroups: ['batch']
    resources: ['jobs']
    verbs:
      [
        'create',
        'delete',
        'get',
        'list',
        'update',
        'watch',
      ]
---
# Source: oes/templates/forwarder/create-controller-secret.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: create-controller-secret
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get","list","create","update","patch"]
---
# Source: oes/charts/minio/templates/post-install-prometheus-metrics-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-minio-update-prometheus-secret
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-minio-update-prometheus-secret
subjects:
  - kind: ServiceAccount
    name: release-name-minio-update-prometheus-secret
    namespace: "default"
---
# Source: oes/charts/spinnaker/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-spinnaker-halyard
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role                 # ClusterRole, if we have access to cluster resources
  name: spinnaker-role       # edit, if we have the access
subjects:
- namespace: default
  kind: ServiceAccount
  name: release-name-spinnaker-halyard
---
# Source: oes/charts/spinnaker/templates/rbac/spinnaker-sa.yaml
# In the case of a local cluster Spinnaker needs
# to be able to deploy to all namespaces in the cluster.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding  # ClusterRoleBinding, if we have access accross the cluster
metadata:
  name: release-name-spinnaker-spinnaker
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role             # ClusteRoleBinding if we have access accross the cluster
  name: spinnaker-role   # cluster-admin if we have the access
subjects:
- namespace: default
  kind: ServiceAccount
  # Clouddriver does not currently allow config of its
  # service account.
  name: default
---
# Source: oes/templates/forwarder/create-controller-secret.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: create-controller-secret
subjects:
- kind: ServiceAccount
  name: create-controller-secret
roleRef:
  kind: Role
  name: create-controller-secret
  apiGroup: rbac.authorization.k8s.io
---
# Source: oes/templates/rbac/oes-init-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding # ClusterRole if you have cluster access
metadata:
  name: default-oes-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- namespace: default
  kind: ServiceAccount
  name: default
---
# Source: oes/charts/gitea/charts/memcached/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-memcached
  namespace: default
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-5.9.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: memcache
      port: 11211
      targetPort: memcache
      nodePort: null
  selector:
    app.kubernetes.io/name: memcached
    app.kubernetes.io/instance: release-name
---
# Source: oes/charts/gitea/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
---
# Source: oes/charts/gitea/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
  namespace: default
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: release-name
    role: primary
---
# Source: oes/charts/gitea/templates/gitea/http-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitea-http
  labels:
    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
---
# Source: oes/charts/gitea/templates/gitea/ssh-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-gitea-ssh
  labels:
    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    null
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: ssh
    port: 22
    targetPort: 22
    protocol: TCP
  selector:
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
---
# Source: oes/charts/guac/charts/nats/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.19.13
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.16"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: client
    port: 4222
    appProtocol: tcp
  - name: cluster
    port: 6222
    appProtocol: tcp
  - name: monitor
    port: 8222
    appProtocol: http
  - name: metrics
    port: 7777
    appProtocol: http
  - name: leafnodes
    port: 7422
    appProtocol: tcp
  - name: gateways
    port: 7522
    appProtocol: tcp
---
# Source: oes/charts/guac/templates/collectsub-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: collectsub
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: collectsub
    app.kubernetes.io/component: collectsub
spec:
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/name: collectsub
    app.kubernetes.io/component: collectsub
  ports:
    - port: 2782
      protocol: TCP
      targetPort: 2782
---
# Source: oes/charts/guac/templates/graphql-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: graphql-server
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: graphql-server
    app.kubernetes.io/component: graphql-server
spec:
  selector:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/name: graphql-server
    app.kubernetes.io/component: graphql-server
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
---
# Source: oes/charts/minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
    release: release-name
---
# Source: oes/charts/openldap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: release-name
    heritage: Helm
spec:
  ports:
    - name: ldap-port
      protocol: TCP
      port: 389
      targetPort: ldap-port
    - name: ssl-ldap-port
      protocol: TCP
      port: 636
      targetPort: ssl-ldap-port
  selector:
    app: openldap
    release: release-name
  type: ClusterIP
---
# Source: oes/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-headless
  labels:
    app: redis
    chart: redis-10.5.3
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: release-name
---
# Source: oes/charts/redis/templates/redis-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-redis-master
  labels:
    app: redis
    chart: redis-10.5.3
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: release-name
    role: master
---
# Source: oes/charts/spinnaker/templates/services/halyard.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-spinnaker-halyard
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
    component: halyard
spec:
  ports:
  - port: 8064
    name: daemon
  clusterIP: None
  selector:
    app: release-name-spinnaker
    component: halyard
---
# Source: oes/charts/spinnaker/templates/spinnaker-extra/spinsvcs.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spin
    stack: deck
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
  name: spin-deck-lb
spec:
  type: 
  ports:
   - name: "https"
     port: 443
     targetPort: 9000
   - name: "http"
     port: 80
     protocol: TCP
     targetPort: 9000
  selector:
    cluster: spin-deck
---
# Source: oes/charts/spinnaker/templates/spinnaker-extra/spinsvcs.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spin
    stack: gate
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
  name: spin-gate-lb
spec:
  type: 
  ports:
   - name: https
     port: 443
     targetPort: 8084
   - name: "http"
     port: 80
     protocol: TCP
     targetPort: 8084
  selector:
    cluster: spin-gate
---
# Source: oes/templates/forwarder/oes-forwarder-svc-agent.yaml
apiVersion: v1
kind: Service
metadata:
  name: opsmx-controller-controller1
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  selector:
    app: opsmx-controller-controller1
  type: ClusterIP
  ports:
  - name: service-api
    port: 9002
    targetPort: service-api
  - name: control-api
    port: 9003
    targetPort: control-api
  - name: remote-command
    port: 9004
    targetPort: remote-command
---
# Source: oes/templates/forwarder/oes-forwarder-svc-agent.yaml
apiVersion: v1
kind: Service
metadata:
  name: agent-grpc
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  selector:
    app: opsmx-controller-controller1
  type: LoadBalancer
  ports:
  - name: agent-grpc
    port: 9001
---
# Source: oes/templates/forwarder/oes-forwarder-svc-ipc.yaml
apiVersion: v1
kind: Service
metadata:
  name: opsmx-controller-controller1-interproc
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  selector:
    app: opsmx-controller-controller1
  type: ClusterIP
  ports:
  - name: agent-grpc
    port: 9001
    targetPort: agent-grpc
---
# Source: oes/templates/oes-db/oes-db-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: db
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-db
spec:
  type: ClusterIP
  ports:
  - name: db
    protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: oes
    component: db
---
# Source: oes/templates/oes-gate/oes-gate-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: gate
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-gate
spec:
  type: ClusterIP
  ports:
  - name: "https"
    port: 443
    targetPort: 8084
  - name: "oes-gate-service"
    port: 8084
    protocol: TCP
    targetPort: 8084
  - name: "http"
    port: 80
    targetPort: 8084
  selector:
    app: oes
    component: gate
---
# Source: oes/templates/oes-sapor/oes-sapor-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: sapor
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-sapor
spec:
  type: ClusterIP
  ports:
  - name: "sapor"
    port: 8085
    targetPort: 8085
  selector:
    app: oes
    component: sapor
---
# Source: oes/templates/oes-ssd-opa/oes-ssd-opa-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ssd-opa
  labels: 
    app: oes
    component: oes-ssd-opa
spec:
  selector:
    app: oes
    component: oes-ssd-opa
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"    
  ports:
    - name: ssd-opa
      protocol: TCP
      port: 8200
      targetPort: 8200
---
# Source: oes/templates/oes-supplychain-api/oes-supplychain-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: supplychain-api
  labels:
    app: oes
    component: oes-supplychain-api
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  ports:
    - name: supplychain-api
      protocol: TCP
      port: 8099
      targetPort: 8099
  selector:
    app: oes
    component: oes-supplychain-api
---
# Source: oes/templates/oes-supplychain-preprocessor/oes-supplychain-preprocessor-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: supplychain-preprocessor
  labels:
    app: oes
    component: oes-supplychain-preprocessor
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  ports:
  - name: supplychain-preprocessor
    port: 8058
    protocol: TCP
    targetPort: 8058    
  selector:
    app: oes
    component: oes-supplychain-preprocessor
---
# Source: oes/templates/oes-toolchain/oes-toolchain-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tool-chain
  labels:
    app: oes
    component: oes-toolchain
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  ports:
    - name: tool-chain
      protocol: TCP
      port: 8100
      targetPort: 8100
  selector:
    app: oes
    component: oes-toolchain
---
# Source: oes/templates/oes-ui/oes-ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-ui
spec:
  type: ClusterIP
  ports:
  - name: "https"
    port: 443
    targetPort: 8080
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app: oes
    component: ui
---
# Source: oes/templates/sapor-gate/sapor-gate-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spin
    component: sapor-gate
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: sapor-gate
spec:
  type: ClusterIP
  ports:
  - name: "sapor-gate-service"
    port: 8084
    protocol: TCP
    targetPort: 8084
  selector:
    app: oes
    component: sapor-gate
---
# Source: oes/charts/gitea/charts/memcached/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-memcached
  namespace: default
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-5.9.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: memcached
      app.kubernetes.io/instance: release-name
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: memcached
        helm.sh/chart: memcached-5.9.0
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: memcached
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: release-name-memcached
      containers:
        - name: memcached
          image: docker.io/bitnami/memcached:1.6.9-debian-10-r114
          imagePullPolicy: "IfNotPresent"
          args:
            - /run.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
          ports:
            - name: memcache
              containerPort: 11211
          livenessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            readOnlyRootFilesystem: false
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: oes/charts/guac/charts/nats/templates/nats-box.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-nats-box
  namespace: default
  labels:
    app: release-name-nats-box
    chart: nats-0.19.13
    app.kubernetes.io/part-of: guac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-name-nats-box
  template:
    metadata:
      labels:
        app: release-name-nats-box
        app.kubernetes.io/part-of: guac
    spec:
      volumes:
      containers:
      - name: nats-box
        image: natsio/nats-box:0.13.8
        imagePullPolicy: IfNotPresent
        resources:
          {}
        env:
        - name: NATS_URL
          value: release-name-nats
        command:
        - "tail"
        - "-f"
        - "/dev/null"
        volumeMounts:
---
# Source: oes/charts/guac/templates/collectsub-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collectsub
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: collectsub
    app.kubernetes.io/component: collectsub
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: "guac"
      app.kubernetes.io/name: collectsub
      app.kubernetes.io/component: collectsub
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: "guac"
        app.kubernetes.io/name: collectsub
        app.kubernetes.io/component: collectsub
    spec:
      containers:
      - name: collectsub
        image: "ghcr.io/guacsec/keer:keer"
        imagePullPolicy: "IfNotPresent"
        command:
          - sh
          - -c
          - /cnb/process/guaccsub
        workingDir: /workspace
        volumeMounts:
          - name: guac-config
            mountPath: /workspace
            readOnly: true
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
---
# Source: oes/charts/guac/templates/depsdev-collector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: depsdev-collector
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: depsdev-collector
    app.kubernetes.io/component: depsdev-collector
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: "guac"
      app.kubernetes.io/name: depsdev-collector
      app.kubernetes.io/component: depsdev-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: "guac"
        app.kubernetes.io/name: depsdev-collector
        app.kubernetes.io/component: depsdev-collector
    spec:
      containers:
      - name: depsdev-collector
        image: "ghcr.io/guacsec/keer:keer"
        imagePullPolicy: "IfNotPresent"
        command:
          - sh
          - -c
          - /cnb/process/guaccollect deps_dev
        workingDir: /workspace
        volumeMounts:
          - name: guac-config
            mountPath: /workspace
            readOnly: true
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
---
# Source: oes/charts/guac/templates/graphql-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphql-server
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: graphql-server
    app.kubernetes.io/component: graphql-server
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/name: graphql-server
      app.kubernetes.io/component: graphql-server
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: "guac"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: graphql-server
        app.kubernetes.io/component: graphql-server
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: "guac"
    spec:
      containers:
      - name: graphql-server
        image: "ghcr.io/guacsec/keer:keer"
        imagePullPolicy: "IfNotPresent"
        command:
          - sh
          - -c
          - /cnb/process/guacgql
        workingDir: /workspace
        volumeMounts:
          - name: guac-config
            mountPath: /workspace
            readOnly: true
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
---
# Source: oes/charts/guac/templates/ingestor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingestor
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingestor
    app.kubernetes.io/component: ingestor
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: "guac"
      app.kubernetes.io/name: ingestor
      app.kubernetes.io/component: ingestor
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: "guac"
        app.kubernetes.io/name: ingestor
        app.kubernetes.io/component: ingestor
    spec:
      containers:
      - name: ingestor
        image: "ghcr.io/guacsec/keer:keer"
        imagePullPolicy: "IfNotPresent"
        command:
          - sh
          - -c
          - /cnb/process/guacingest
        workingDir: /workspace
        volumeMounts:
          - name: guac-config
            mountPath: /workspace
            readOnly: true
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
---
# Source: oes/charts/guac/templates/oci-collector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oci-collector
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: oci-collector
    app.kubernetes.io/component: oci-collector
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: "guac"
      app.kubernetes.io/name: oci-collector
      app.kubernetes.io/component: oci-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: "guac"
        app.kubernetes.io/name: oci-collector
        app.kubernetes.io/component: oci-collector
    spec:
      containers:
      - name: oci-collector
        image: "ghcr.io/guacsec/keer:keer"
        imagePullPolicy: "IfNotPresent"
        command:
          - sh
          - -c
          - /cnb/process/guaccollect image
        workingDir: /workspace
        volumeMounts:
          - name: guac-config
            mountPath: /workspace
            readOnly: true
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
---
# Source: oes/charts/guac/templates/osv-certifier-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: osv-certifier
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    helm.sh/chart: guac-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: osv-certifier
    app.kubernetes.io/component: osv-certifier
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/part-of: "guac"
      app.kubernetes.io/name: osv-certifier
      app.kubernetes.io/component: osv-certifier
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/part-of: "guac"
        app.kubernetes.io/name: osv-certifier
        app.kubernetes.io/component: osv-certifier
    spec:
      containers:
      - name: osv-certifier
        image: "ghcr.io/guacsec/keer:keer"
        imagePullPolicy: "IfNotPresent"
        command:
          - sh
          - -c
          - /cnb/process/guacone certifier osv --poll
        workingDir: /workspace
        volumeMounts:
          - name: guac-config
            mountPath: /workspace
            readOnly: true
      imagePullSecrets:
        - name: imagepullsecret
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
---
# Source: oes/charts/minio/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: minio
      release: release-name
  template:
    metadata:
      name: release-name-minio
      labels:
        app: minio
        release: release-name
      annotations:
        checksum/secrets: 1a0ca5b40b74de0e6c8f6cfe9f6a966abcbfe6ca05ea649678243db0349c6dc3
        checksum/config: c5437ab034aa2db477a5da61c0599e7b9df73ffefe53f671bd0dc90febb1501b
    spec:
      serviceAccountName: "release-name-minio"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: minio
          image: "minio/minio:RELEASE.2020-12-03T05-49-24Z"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-ce"
            - "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /export"
          volumeMounts:
            - name: export
              mountPath: /export            
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: secretkey
          resources:
            requests:
              memory: 4Gi      
      volumes:
        - name: export
          persistentVolumeClaim:
            claimName: release-name-minio
        - name: minio-user
          secret:
            secretName: release-name-minio
---
# Source: oes/charts/openldap/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  name:  release-name-openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: release-name
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openldap
      release: release-name
  template:
    metadata:
      annotations:
        checksum/configmap-env: ecccb402300e6f6a2ce5277527b3880c7a733333f034703fe3baf7faefbb0aa4
        checksum/configmap-customldif: c0c13dea2c1aeb56201dec0b25b02bbcb250cce4c390c0c5b75a378c1ea3922e
        moniker.spinnaker.io/application: spin
      labels:
        app: openldap
        release: release-name
    spec:
      initContainers:
      - name: openldap-init-ldif
        image: quay.io/opsmxpublic/busybox:1.28
        command: ['sh', '-c', 'cp /customldif/* /ldifworkingdir']
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: customldif
          mountPath: /customldif
        - name: ldifworkingdir
          mountPath: /ldifworkingdir
        resources:
          {}
      containers:
        - name: openldap
          image: "osixia/openldap:1.2.4"
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - until service slapd status; do sleep 10 ;done
          imagePullPolicy: IfNotPresent
          args: [--copy-service]
          ports:
            - name: ldap-port
              containerPort: 389
            - name: ssl-ldap-port
              containerPort: 636
          envFrom:
            - configMapRef:
                name: release-name-openldap-env
            - secretRef:
                name: release-name-openldap
          volumeMounts:
            - name: data
              mountPath: /var/lib/ldap
              subPath: data
            - name: data
              mountPath: /etc/ldap/slapd.d
              subPath: config-data
            - name: ldifworkingdir
              mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
          env:
          livenessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          resources:
            {}
      volumes:
        - name: customldif
          configMap:
            name: release-name-openldap-customldif
        - name: ldifworkingdir
          emptyDir: {}
        - name: certs
          emptyDir:
            medium: Memory
        - name: data
          persistentVolumeClaim:
            claimName: release-name-openldap
---
# Source: oes/templates/forwarder/oes-forwarder-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  name: opsmx-controller-controller1
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opsmx-controller-controller1
  template:
    metadata:
      labels:
        app: opsmx-controller-controller1
        agent.opsmx.com/name: controller1
        agent.opsmx.com/role: controller
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
      annotations:
        pullversion: "16"
        checksum/configmap: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        moniker.spinnaker.io/application: isd
    spec:
      containers:
      - name: opsmx-controller-controller1
        image: quay.io/opsmxpublic/forwarder-controller:v3.5.7
        ports:
          - containerPort: 9001
            name: agent-grpc
          - containerPort: 9002
            name: service-api
          - containerPort: 9003
            name: control-api
          - containerPort: 9004
            name: remote-command
          - containerPort: 9102
            name: metrics
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: ca-secret
          mountPath: /app/secrets/ca
          readOnly: true
        - name: jwt-secret
          mountPath: /app/secrets/serviceAuth
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "250m"
      volumes:
      - name: ca-secret
        secret:
          secretName: ca-secret
      - name: jwt-secret
        secret:
          secretName: jwt-secret
      - name: config
        configMap:
          name: opsmx-controller-controller1
          items:
          - key: "configFile"
            path: "config.yaml"
---
# Source: oes/templates/oes-gate/oes-gate-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  labels:
    app: oes
    component: gate
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-gate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: gate
  template:
    metadata:
      annotations:
        checksum/secret: a5293557fab2b3e6c921dc076db0bf47b95ad6756137d2bdb4897435c3f909d8
        moniker.spinnaker.io/application: isd
        prometheus.io/scrape: "false"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8084"
      labels:
        app: oes
        component: gate
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-gate:v4.0.4-rc8
        name: oes-gate
        env:
        - name: spring_profiles_active
          value: vault,local
        ports:
        - containerPort: 8084
          protocol: TCP
        resources:
            {}
        volumeMounts:
        - name: gate-volume
          mountPath: /opt/spinnaker/config/gate.yml
          subPath: gate.yml
        - mountPath: /opt/spinnaker/config/bootstrap.yml
          name: bootstrap-volume
          subPath: bootstrap.yml
        readinessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 60
      volumes:
      - name: gate-volume
        secret:
          secretName: oes-gate-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-volume
---
# Source: oes/templates/oes-sapor/oes-sapor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  labels:
    app: oes
    component: sapor
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-sapor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: sapor
  template:
    metadata:
      annotations:
        checksum/configmap: cd91138d28ef1da991c5646df7f238e85d808c05d6b11ad847309dd74945ac4a
        checksum/configmap: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        moniker.spinnaker.io/application: isd
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8085"
      labels:
        app: oes
        component: sapor
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-sapor:v4.0.4-rc6
        name: oes-sapor
        env:
        ports:
        - containerPort: 8085
          protocol: TCP
        volumeMounts:
        - mountPath: /opt/opsmx/controller/ca.crt
          name: ca-certs-volume
          subPath: tls.crt
        - mountPath: /opt/opsmx/controller/cert/tls.crt
          name: certs-volume
          subPath: tls.crt
        - mountPath: /opt/opsmx/controller/cert/tls.key
          name: certs-volume
          subPath: tls.key
        - name: sapor-config-volume
          mountPath: /opt/opsmx/application.yml
          subPath: application.yml
        - mountPath: /opt/opsmx/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        resources:
            {}
        readinessProbe:
          tcpSocket:
            port: 8085
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8085
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
      volumes:
      - secret:
          secretName: oes-control-secret
        name: certs-volume
      - secret:
          secretName: ca-secret
        name: ca-certs-volume
      - secret:
          secretName: oes-sapor-config
        name: sapor-config-volume
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: sapor-bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: oes/templates/oes-ssd-opa/oes-ssd-opa-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssd-opa
  labels:
    app: oes
    component: oes-ssd-opa
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: oes-ssd-opa
  template:
    metadata:
      labels:
        app: oes
        component: oes-ssd-opa
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
      annotations:
        moniker.spinnaker.io/application: isd
    spec:
      volumes:
        - name: ssd-opa-volume
          configMap:
            name: ssd-opa
            items:
              - key: ssd-opa.yaml
                path: ssd-opa.yaml
            defaultMode: 420
      containers:
        - name: ssd-opa
          image: quay.io/opsmxpublic/create-secret:v4.0.4-rc4 
          ports:
            - containerPort: 8200
              protocol: TCP
          volumeMounts:
            - name: ssd-opa-volume
              mountPath: /app/config/ssd-opa.yaml
              subPath: ssd-opa.yaml
---
# Source: oes/templates/oes-supplychain-api/oes-supplychain-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supplychain-api
  labels:
    app: oes
    component: oes-supplychain-api
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: supplychain-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: oes-supplychain-api
  template:
    metadata:
      labels:
        app: oes
        component: oes-supplychain-api
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
      annotations:
        moniker.spinnaker.io/application: isd
    spec:
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run
            type: 'adfsdf'
        - name: sbom
          persistentVolumeClaim:
            claimName: supplychain-api
        - name: supplychain-api-volume
          configMap:
            name: supplychain-api
            items:
              - key: supplychain-api.yaml
                path: supplychain-api.yaml
            defaultMode: 420
      containers:
        - name: supplychain-api
          image: quay.io/opsmxpublic/create-secret:v4.0.4-rc4
          ports:
            - containerPort: 8099
              protocol: TCP
          volumeMounts:
            - name: sbom
              mountPath: /tools/sbom
            - name: supplychain-api-volume
              mountPath: /tools/config/supplychain-api.yaml
              subPath: supplychain-api.yaml
            - name: docker-sock
              mountPath: /var/run
      restartPolicy: Always
      securityContext: {}
---
# Source: oes/templates/oes-supplychain-preprocessor/oes-supplychain-preprocessor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supplychain-preprocessor
  labels:
    app: oes
    component: oes-supplychain-preprocessor
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: oes-supplychain-preprocessor
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: oes
        component: oes-supplychain-preprocessor
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
      annotations:
        moniker.spinnaker.io/application: isd
    spec:
      containers:
      - name: oes-supplychain-preprocessor
        image: quay.io/opsmxpublic/create-secret:v4.0.4-rc4
        ## Add liveness and readiness 
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: preprocessor-volume
      imagePullSecrets:
        - name: opsmx11-secret
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: preprocessor-volume
        configMap:
          name: supplychain-preprocessor
      securityContext:
        runAsNonRoot: true
---
# Source: oes/templates/oes-toolchain/oes-toolchain-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: oes-toolchain
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: tool-chain
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: oes-toolchain
  template:
    metadata:
      labels:
        app: oes
        component: oes-toolchain
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
      annotations:
        moniker.spinnaker.io/application: isd
    spec:
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run
            type: 'adfsdf'
        - name: sbom
          persistentVolumeClaim:
            claimName: tool-chain
        - name: tool-chain-volume
          configMap:
            name: tool-chain
            items:
              - key: tool-chain.yaml
                path: tool-chain.yaml
            defaultMode: 420
      containers:
        - name: tool-chain
          image: quay.io/opsmxpublic/create-secret:v4.0.4-rc4
          ports:
            - containerPort: 8100
              protocol: TCP
          volumeMounts:
            - name: sbom
              mountPath: /tools/sbom
            - name: tool-chain-volume
              mountPath: /tools/config/tool-chain.yaml
              subPath: tool-chain.yaml
            - name: docker-sock
              mountPath: /var/run
      restartPolicy: Always
      securityContext: {}
---
# Source: oes/templates/oes-ui/oes-ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: ui
  template:
    metadata:
      annotations:
        checksum/configmap: ec1928c046c894ea0592049ca7ba025a7b4a3760cc5ec54f4bcffe0637d0d957
        moniker.spinnaker.io/application: isd
      labels:
        app: oes
        component: ui
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-ui:v4.0.4-rc7
        name: oes-ui
        env:
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/app-config.json
          subPath: app-config.json
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/help-text.json
          subPath: help-text.json
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx-quick-install.conf
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ui/indexl.html
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - configMap:
          defaultMode: 420
          name: oes-ui-config
        name: config-dir
      - configMap:
          defaultMode: 420
          name: oes-ui-nginxconf
        name: nginx-config
---
# Source: oes/templates/sapor-gate/sapor-gate-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  labels:
    app: oes
    component: sapor-gate
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: sapor-gate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: sapor-gate
  template:
    metadata:
      annotations:
        checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        moniker.spinnaker.io/application: isd
      labels:
        app: oes
        component: sapor-gate
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-spin-gate:v3.12.0-saporgate
        name: sapor-gate
        env:
        - name: JAVA_OPTS
          value: -XX:MaxRAMPercentage=100.0
        - name: SPRING_PROFILES_ACTIVE
          value: overrides,local
        ports:
        - containerPort: 8084
          protocol: TCP
        resources:
            {}
        volumeMounts:
        - mountPath: /opt/spinnaker/config
          name: sapor-gate-files
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8084
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
      - name: sapor-gate-files
        secret:
          secretName: sapor-gate-files
---
# Source: oes/charts/gitea/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
  namespace: default
spec:
  serviceName: release-name-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: release-name
      role: primary
  template:
    metadata:
      name: release-name-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.3.17
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: release-name-postgresql
          image: docker.io/bitnami/postgresql:11.11.0-debian-10-r62
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: "gitea"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "gitea"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "gitea" -d "dbname=gitea" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "gitea" -d "dbname=gitea" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
---
# Source: oes/charts/gitea/templates/gitea/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-gitea
  labels:
    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gitea
      app.kubernetes.io/instance: release-name
  serviceName: release-name-gitea
  template:
    metadata:
      annotations:
        checksum/config: 471cbb19dd46c0bb134c9272762a5a5c54620f18331b993b43cb5e72f2a539e4
      labels:
        helm.sh/chart: gitea-5.0.1
        app: gitea
        app.kubernetes.io/name: gitea
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.15.10"
        version: "1.15.10"
        app.kubernetes.io/managed-by: Helm
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init-directories
          image: "gitea/gitea:1.15.10"
          command: ["/usr/sbin/init_directory_structure.sh"]
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
          securityContext:
            {}
        - name: init-app-ini
          image: "gitea/gitea:1.15.10"
          command: ["/usr/sbin/config_environment.sh"]
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
          volumeMounts:
            - name: config
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
            - name: inline-config-sources
              mountPath: /env-to-ini-mounts/inlines/
          securityContext:
            {}
        - name: configure-gitea
          image: "gitea/gitea:1.15.10"
          command: ["/usr/sbin/configure_gitea.sh"]
          securityContext:
            runAsUser: 1000
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
            - name: GITEA_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  key:  username
                  name: gitea-secret
            - name: GITEA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key:  password
                  name: gitea-secret
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
      terminationGracePeriodSeconds: 60
      containers:
        - name: gitea
          image: "gitea/gitea:1.15.10"
          imagePullPolicy: Always
          env:
            # SSH Port values have to be set here as well for openssh configuration
            - name: SSH_LISTEN_PORT
              value: "22"
            - name: SSH_PORT
              value: "22"
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
            - name: TMPDIR
              value: /tmp/gitea
          ports:
            - name: ssh
              containerPort: 22
            - name: http
              containerPort: 3000
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 200
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1
          resources:
            {}
          securityContext:
            {}
          volumeMounts:
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
      volumes:
        - name: init
          secret:
            secretName: release-name-gitea-init
            defaultMode: 110
        - name: config
          secret:
            secretName: release-name-gitea
            defaultMode: 110
        - name: inline-config-sources
          secret:
            secretName: release-name-gitea-inline-config
        - name: temp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
            - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
---
# Source: oes/charts/guac/charts/nats/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.19.13
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.16"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nats
      app.kubernetes.io/instance: release-name
  replicas: 1
  serviceName: release-name-nats

  podManagementPolicy: Parallel

  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
        prometheus.io/scrape: "true"
        checksum/config: 2b6894686abfa32b8addda304802688fe89bf2964f42c1934b1f8d699b86a4c6
      labels:
        app.kubernetes.io/name: nats
        app.kubernetes.io/instance: release-name
    spec:
      dnsPolicy: ClusterFirst
      # Common volumes for the containers.
      volumes:
      - name: config-volume
        configMap:
          name: release-name-nats-config

      # Local volume shared with the reloader.
      - name: pid
        emptyDir: {}

      #################
      #               #
      #  TLS Volumes  #
      #               #
      #################

      serviceAccountName: release-name-nats

      # Required to be able to HUP signal and apply config
      # reload to the server without restarting the pod.
      shareProcessNamespace: true

      #################
      #               #
      #  NATS Server  #
      #               #
      #################
      terminationGracePeriodSeconds: 60
      containers:
      - name: nats
        image: nats:2.9.16-alpine
        imagePullPolicy: IfNotPresent
        resources:
          {}
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor

        command:
        - "nats-server"
        - "--config"
        - "/etc/nats-config/nats.conf"

        # Required to be able to define an environment variable
        # that refers to other environment variables.  This env var
        # is later used as part of the configuration file.
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_NAME
          value: $(POD_NAME)
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).release-name-nats.$(POD_NAMESPACE).svc.cluster.local
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats-config
        - name: pid
          mountPath: /var/run/nats
        - name: release-name-nats-js-pvc
          mountPath: /data
        

        #######################
        #                     #
        # Healthcheck Probes  #
        #                     #
        #######################
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          # for NATS server versions >=2.7.1, /healthz will be enabled
          # startup probe checks that the JS server is enabled, is current with the meta leader,
          # and that all streams and consumers assigned to this JS server are current
          failureThreshold: 90
          httpGet:
            path: /healthz
            port: 8222
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5

        # Gracefully stop NATS Server on pod deletion or image upgrade.
        #
        lifecycle:
          preStop:
            exec:
              # send the lame duck shutdown signal to trigger a graceful shutdown
              # nats-server will ignore the TERM signal it receives after this
              #
              command:
              - "nats-server"
              - "-sl=ldm=/var/run/nats/nats.pid"

      #################################
      #                               #
      #  NATS Configuration Reloader  #
      #                               #
      #################################
      - name: reloader
        image: natsio/nats-server-config-reloader:0.10.1
        imagePullPolicy: IfNotPresent
        resources:
          {}
        command:
        - "nats-server-config-reloader"
        - "-pid"
        - "/var/run/nats/nats.pid"
        - "-config"
        - "/etc/nats-config/nats.conf"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats-config
        - name: pid
          mountPath: /var/run/nats
        

      ##############################
      #                            #
      #  NATS Prometheus Exporter  #
      #                            #
      ##############################
      - name: metrics
        image: natsio/prometheus-nats-exporter:0.10.1
        imagePullPolicy: IfNotPresent
        resources:
          {}
        args:
        - -connz
        - -routez
        - -subz
        - -varz
        - -prefix=nats
        - -use_internal_server_id
        - -jsz=all
        - http://localhost:8222/
        ports:
        - containerPort: 7777
          name: metrics

  volumeClaimTemplates:
  #####################################
  #                                   #
  #  Jetstream New Persistent Volume  #
  #                                   #
  #####################################
    - metadata:
        name: release-name-nats-js-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Source: oes/charts/redis/templates/redis-master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  name: release-name-redis-master
  labels:
    app: redis
    chart: redis-10.5.3
    release: release-name
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: redis
      release: release-name
      role: master
  serviceName: release-name-redis-headless
  template:
    metadata:
      labels:
        app: redis
        chart: redis-10.5.3
        release: release-name
        role: master
      annotations:
        checksum/health: 436d806171441d73cdaa6455e362825ff4a9475e0ba000636e0d178fc37c3632
        checksum/configmap: e2e51906d2fcbd95c0f365759696f182ebc3e151e07f6f2e95bdc5cd68047032
        checksum/secret: ad2c909071c08c9959cd6619c6c1447a953ed345a38136cb3af94b976dc15f3c
        moniker.spinnaker.io/application: spin
    spec:      
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
      - name: release-name-redis
        image: "quay.io/opsmxpublic/bitnami-redis:5.0.7-debian-10-r0"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
        command:
        - /bin/bash
        - -c
        - |
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_PASSWORD_FILE}`
            export REDIS_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--requirepass" "${REDIS_PASSWORD}")
          ARGS+=("--masterauth" "${REDIS_PASSWORD}")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
          /run.sh ${ARGS[@]}
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-redis
              key: redis-password
        - name: REDIS_PORT
          value: "6379"
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness_local.sh 5
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness_local.sh 5
        resources:
          null
        volumeMounts:
        - name: health
          mountPath: /health
        - name: redis-data
          mountPath: /data
          subPath: 
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc/
      volumes:
      - name: health
        configMap:
          name: release-name-redis-health
          defaultMode: 0755
      - name: config
        configMap:
          name: release-name-redis
      - name: redis-tmp-conf
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: redis
          release: release-name
          heritage: Helm
          component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        
        selector:
  updateStrategy:
    type: RollingUpdate
---
# Source: oes/charts/spinnaker/templates/statefulsets/halyard.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    moniker.spinnaker.io/application: spin
  name: release-name-spinnaker-halyard
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
spec:
  serviceName: release-name-spinnaker-halyard
  replicas: 1
  selector:
    matchLabels:
      app: "release-name-spinnaker"
      release: "release-name"
      component: halyard
  template:
    metadata:
      annotations:
        checksum/configmap: b819461239d5efefcca7c84658db5cee6666ab64d7a827458f389ca5607a7168
        moniker.spinnaker.io/application: spin
      labels:
        app: "release-name-spinnaker"
        heritage: "Helm"
        release: "release-name"
        chart: "spinnaker-2.2.3"
        component: halyard
    spec:
      serviceAccountName: release-name-spinnaker-halyard
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
      - name: "create-halyard-local"
        image: quay.io/opsmxpublic/awsgit:v3-js
        command:
        - sh
        - /tmp/initscript/init.sh
        env:
        - name: SPINNAKER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GITEA_USER
          valueFrom:
            secretKeyRef:
              name: gitea-secret
              key: username
        - name: GITEA_PASS
          valueFrom:
            secretKeyRef:
              name: gitea-secret
              key: password
        volumeMounts:
        - name: halyard-config
          mountPath: /tmp/config
        - name: service-settings
          mountPath: /tmp/service-settings
        - name: halyard-home
          mountPath: /tmp/spinnaker
        - name: additional-profile-config-maps
          mountPath: /tmp/additionalProfileConfigMaps
        - name: halyard-initscript
          mountPath: /tmp/initscript
      - name: "halyardconfig-update"
        command:
        - sh
        - /tmp/akv2k8s/run.sh
        image: quay.io/opsmxpublic/k8s-decoder:hal
        imagePullPolicy: IfNotPresent
        resources: {}
        volumeMounts:
        - name: halyard-home
          mountPath: /tmp/spinnaker
        - name: secret-decoder
          mountPath: /tmp/akv2k8s
      - name: "halyard-overrideurl"
        command:
        - sh
        - /tmp/autoconfig/call_overrides.sh
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: quay.io/opsmxpublic/bitnami-kubectl:1.18.5
        imagePullPolicy: IfNotPresent
        resources: {}
        volumeMounts:
        - name: halyard-config
          mountPath: /tmp/config
        - name: service-settings
          mountPath: /tmp/service-settings
        - name: halyard-home
          mountPath: /tmp/spinnaker
        - name: additional-profile-config-maps
          mountPath: /tmp/additionalProfileConfigMaps
        - name: halyard-initscript
          mountPath: /tmp/initscript
        - mountPath: /tmp/autoconfig
          name: halyard-overrideurl
      volumes:
      - name: halyard-home
        emptyDir: {}
      - name: halyard-overrideurl
        configMap:
          name: release-name-spinnaker-halyard-overrideurl
      - name: secret-decoder
        configMap:
          name: release-name-spinnaker-spin-secret-decoder
      - name: reg-secrets
        secret:
          secretName: release-name-spinnaker-registry
      - name: additional-profile-config-maps
        configMap:
          name: release-name-spinnaker-additional-profile-config-maps
      - name: halyard-config
        emptyDir: {}
      - name: service-settings
        configMap:
          name: release-name-spinnaker-service-settings
      - name: halyard-initscript
        configMap:
          name: release-name-spinnaker-halyard-init-script
      containers:
      - name: halyard
        image: quay.io/opsmxpublic/ubi8-spin-halyard:1.28.1-v4.0.2
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "until curl http://localhost:8064/health; do sleep 10 ;done;hal deploy apply"]
        ports:
        - containerPort: 8064
          name: daemon
        volumeMounts:
        - name: halyard-home
          mountPath: /home/spinnaker
        - name: halyard-config
          mountPath: /opt/halyard/config
        - name: reg-secrets
          mountPath: /opt/registry/passwords
---
# Source: oes/templates/statefulsets/oes-db-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  labels:
    app: oes
    component: db
    heritage: "Helm"
    release: "release-name"
    chart: "oes-4.0.9"
  name: oes-db
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  serviceName: oes-db
  selector:
    matchLabels:
      app: oes
      component: db
  template:
    metadata:
      annotations:
        moniker.spinnaker.io/application: isd
      labels:
        app: oes
        component: db
        heritage: "Helm"
        release: "release-name"
        chart: "oes-4.0.9"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-db:v3.0.0
        imagePullPolicy: IfNotPresent
        name: oes-db
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - /opt/opsmx/bin/stop.sh
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: "/var/lib/pgsql-pv"
          name: oes-db-postgresql
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 5
      securityContext:
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      labels:
        app: oes
        component: db
      name: oes-db-postgresql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      volumeMode: Filesystem
---
# Source: oes/charts/spinnaker/templates/job/create-sample-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-create-sample-app
spec:
  template:
    spec:
      serviceAccountName: release-name-spinnaker-halyard
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      restartPolicy: OnFailure
      volumes:
      - secret:
          secretName: release-name-spinnaker-spin-config
        name: spin-config
      - configMap:
          defaultMode: 420
          name: release-name-spinnaker-spin-pipeline-import
        name: spin-pipeline-import
      - name: spin-pipeline-config
        emptyDir: {}
      containers:
      - command:  
        - bash
        - /tmp/config/spin-pipeline-import.sh
        name: sample-pipeline-install
        image: quay.io/opsmxpublic/spin-sample-pipeline:1.0
        volumeMounts:         
        - name: spin-pipeline-config
          mountPath: /tmp/config/git
        - mountPath: /tmp/config
          name: spin-pipeline-import
        - mountPath: /tmp/config/spin
          name: spin-config
---
# Source: oes/templates/forwarder/create-controller-secret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: create-controller-secret
spec:
 template:
    spec:
       containers:
       - name: create-secret-container
         image: quay.io/opsmxpublic/create-secret:v4.0.4
         env:
         - name: NAMESPACE
           valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
         args:
         - "$(NAMESPACE)" 
       restartPolicy: Never
       serviceAccount: create-controller-secret
---
# Source: oes/charts/guac/templates/collectsub-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/collectsub-service.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/depsdev-collector-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/graphql-server-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/graphql-server-service.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/guac-cm.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/ingest-guac-data-job.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/ingestor-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/oci-collector-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/osv-certifier-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/visualizer-deployment.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/guac/templates/visualizer-service.yaml
# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
---
# Source: oes/charts/gitea/templates/tests/test-http-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-gitea-test-connection"
  labels:

    helm.sh/chart: gitea-5.0.1
    app: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.15.10"
    version: "1.15.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['release-name-gitea-http:3000']
  restartPolicy: Never
---
# Source: oes/charts/guac/charts/nats/templates/tests/test-request-reply.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-nats-test-request-reply"
  labels:
    chart: nats-0.19.13
    app: release-name-nats-test-request-reply
  annotations:
    "helm.sh/hook": test
spec:
  containers:
  - name: nats-box
    image: natsio/nats-box:0.13.8
    env:
    - name: NATS_HOST
      value: release-name-nats
    command:
    - /bin/sh
    - -ec
    - |
      nats reply -s nats://$NATS_HOST:4222 'name.>' --command "echo 1" &
    - |
      "&&"
    - |
      name=$(nats request -s nats://$NATS_HOST:4222 name.test '' 2>/dev/null)
    - |
      "&&"
    - |
      [ $name = test ]

  restartPolicy: Never
---
# Source: oes/charts/minio/templates/post-install-create-bucket-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-minio-make-bucket-job
  labels:
    app: minio-make-bucket-job
    chart: minio-8.0.9
    release: release-name
    heritage: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: minio-job
        release: release-name
    spec:
      restartPolicy: OnFailure      
      volumes:
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: release-name-minio
            - secret:
                name: release-name-minio
      serviceAccountName: "release-name-minio"
      containers:
      - name: minio-mc
        image: "minio/mc:RELEASE.2020-11-25T23-04-07Z"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "/config/initialize"]
        env:
          - name: MINIO_ENDPOINT
            value: release-name-minio
          - name: MINIO_PORT
            value: "9000"
        volumeMounts:
          - name: minio-configuration
            mountPath: /config
        resources:
          requests:
            memory: 128Mi
---
# Source: oes/charts/spinnaker/templates/hooks/cleanup.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-spinnaker-cleanup-using-hal"
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
    component: halyard
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      annotations:
        moniker.spinnaker.io/application: spin
      labels:
        app: "release-name-spinnaker"
        heritage: "Helm"
        release: "release-name"
        chart: "spinnaker-2.2.3"
        component: halyard
    spec:
      restartPolicy: OnFailure
      volumes:
      - name: halyard-config
        configMap:
          name: release-name-spinnaker-halyard-config
      containers:
      - name: halyard-install
        image: quay.io/opsmxpublic/ubi8-spin-halyard:1.28.1-v4.0.2
        volumeMounts:
        - name: halyard-config
          mountPath: /opt/halyard/scripts
        command:
        - bash
        - -xe
        - "/opt/halyard/scripts/clean.sh"
---
# Source: oes/charts/spinnaker/templates/hooks/install-using-hal.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name-install-using-hal"
  labels:
    app: "release-name-spinnaker"
    heritage: "Helm"
    release: "release-name"
    chart: "spinnaker-2.2.3"
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      annotations:
        checksum/config: 49d79af56ffcf9627006de3a036a1b56d31f7033a4d595504406d78c798f368e
        moniker.spinnaker.io/application: spin
      labels:
        app: "release-name-spinnaker"
        heritage: "Helm"
        release: "release-name"
        chart: "spinnaker-2.2.3"
    spec:
      serviceAccountName: release-name-spinnaker-halyard
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      restartPolicy: OnFailure
      volumes:
      - name: halyard-config
        configMap:
          name: release-name-spinnaker-halyard-config
      containers:
      - name: halyard-install
        image: quay.io/opsmxpublic/ubi8-spin-halyard:1.28.1-v4.0.2
        volumeMounts:
        - name: halyard-config
          mountPath: /opt/halyard/scripts
        command:
        - bash
        - -xe
        - "/opt/halyard/scripts/install.sh"
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
